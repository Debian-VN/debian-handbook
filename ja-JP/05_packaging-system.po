#
# AUTHOR <EMAIL@ADDRESS>, YEAR.
# Ryuunosuke Ayanokouzi <i38w7i3@yahoo.co.jp>, 2015-2017.
# Kenshi Muto <kmuto@kmuto.jp>, 2015.
# Yoichi Chonan <cyoichi@maple.ocn.ne.jp>, 2015.
# Osamu Aoki <osamu@debian.org>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2017-02-05 09:00+0900\n"
"PO-Revision-Date: 2017-02-05 09:00+0900\n"
"Last-Translator: AYANOKOUZI, Ryuunosuke <i38w7i3@yahoo.co.jp>\n"
"Language-Team: Japanese <https://github.com/l/debian-handbook/tree/master/translation/ja_JP/push>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Binary package"
msgstr "バイナリパッケージ"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Source package"
msgstr "ソースパッケージ"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "dpkg"
msgstr "dpkg"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "dependencies"
msgstr "依存関係"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "conflict"
msgstr "衝突"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Packaging System: Tools and Fundamental Principles"
msgstr "パッケージシステム、ツールと基本原則"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "As a Debian system administrator, you will routinely handle <filename>.deb</filename> packages, since they contain consistent functional units (applications, documentation, etc.), whose installation and maintenance they facilitate. It is therefore a good idea to know what they are and how to use them."
msgstr "Debian システム管理者は日常的に <filename>.deb</filename> パッケージを取り扱います。なぜなら、パッケージにはそのパッケージを使うために必要なすべての要素 (アプリケーション、文書など) が含まれており、パッケージによってこれらの要素のインストールとメンテナンスが楽になるからです。ゆえに、パッケージとはどのようなもので、パッケージはどのように取り扱われるべきものなのかを知っておくことは良い考えです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This chapter describes the structure and contents of “binary” and “source” packages. The former are <filename>.deb</filename> files, directly usable by <command>dpkg</command>, while the latter contain the source code, as well as instructions for building binary packages."
msgstr "この章では、「バイナリパッケージ」と「ソースパッケージ」の構造と内容について説明します。バイナリパッケージとは <command>dpkg</command> が直接取り扱う <filename>.deb</filename> ファイルです。一方、ソースパッケージにはソースコードおよびバイナリパッケージをビルドするための説明が含まれています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Structure of a Binary Package"
msgstr "バイナリパッケージの構造"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>binary package</secondary>"
msgstr "<primary>パッケージ</primary><secondary>バイナリパッケージ</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><command>ar</command></primary>"
msgstr "<primary><command>ar</command></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The Debian package format is designed so that its content may be extracted on any Unix system that has the classic commands <command>ar</command>, <command>tar</command>, and <command>gzip</command> (sometimes <command>xz</command> or <command>bzip2</command>). This seemingly trivial property is important for portability and disaster recovery."
msgstr "Debian パッケージのフォーマットは伝統的なコマンドである <command>ar</command>、<command>tar</command>、<command>gzip</command> (<command>xz</command> や <command>bzip2</command> の場合もあります) を備える Unix システムで内容を展開できるように設計されました。この一見たわいもない特徴は可搬性と障害復旧を考えると重要です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Imagine, for example, that you mistakenly deleted the <command>dpkg</command> program, and that you could thus no longer install Debian packages. <command>dpkg</command> being a Debian package itself, it would seem your system would be done for... Fortunately, you know the format of a package and can therefore download the <filename>.deb</filename> file of the <emphasis role=\"pkg\">dpkg</emphasis> package and install it manually (see sidebar <xref linkend=\"sidebar.dpkg-apt-ar\" />). If by some misfortune one or more of the programs <command>ar</command>, <command>tar</command> or <command>gzip</command>/<command>xz</command>/<command>bzip2</command> have disappeared, you will only need to copy the missing program from another system (since each of these operates in a completely autonomous manner, without dependencies, a simple copy will suffice). If your system suffered some even more outrageous fortune, and even these don't work (maybe the deepest system libraries are missing?), you should try the static version of <command>busybox</command> (provided in the <emphasis role=\"pkg\">busybox-static</emphasis> package), which is even more self-contained, and provides subcommands such as <command>busybox ar</command>, <command>busybox tar</command> and <command>busybox gunzip</command>."
msgstr "たとえば、誤って <command>dpkg</command> プログラムを削除して、Debian パッケージをインストールできなくなったとしましょう。<command>dpkg</command> は Debian パッケージなので、もはやシステムを回復することは不可能のように見えます... 幸いなことに、パッケージの構成を知っていれば、<emphasis role=\"pkg\">dpkg</emphasis> パッケージの <filename>.deb</filename> ファイルをダウンロードし、手作業でパッケージをインストールできます (補注<xref linkend=\"sidebar.dpkg-apt-ar\" />を参照してください)。もし不幸にも、<command>ar</command>、<command>tar</command>、<command>gzip</command>/<command>xz</command>/<command>bzip2</command> のうち 1 つでもなかったら、足りないプログラムを別のシステムからコピーするだけで十分です (各々のプログラムは、依存関係がなく、完全に独立して動くため、単純にコピーすれば十分です)。システムが最悪の状況に陥ってこれらのプログラムが動かない場合 (最も根源的なシステムライブラリが欠けている場合?)、静的リンクされた <command>busybox</command> (<emphasis role=\"pkg\">busybox-static</emphasis> パッケージに含まれます) を試してみるべきです。静的リンクされた <command>busybox</command> はさらに依存関係が少なく、<command>busybox ar</command>、<command>busybox tar</command>、<command>busybox gunzip</command> などのサブコマンドを備えています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>TOOLS</emphasis> <command>dpkg</command>, <command>APT</command> and <command>ar</command>"
msgstr "<emphasis>TOOLS</emphasis> <command>dpkg</command>、<command>APT</command>、<command>ar</command>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><command>dpkg</command></primary>"
msgstr "<primary><command>dpkg</command></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>APT</primary>"
msgstr "<primary>APT</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> is the program that handles <filename>.deb</filename> files, notably extracting, analyzing, and unpacking them."
msgstr "<command>dpkg</command> は <filename>.deb</filename> ファイルを取り扱うプログラムで、特に <filename>.deb</filename> ファイルの抽出、分析、展開を担当しています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>APT</command> is a group of programs that allows the execution of higher-level modifications to the system: installing or removing a package (while keeping dependencies satisfied), updating the system, listing the available packages, etc."
msgstr "<command>APT</command> はシステムの変更操作をさらに手際よく行うプログラム群です。具体的に言えば、<command>APT</command> はパッケージのインストールや削除 (依存関係を破壊することなく)、システムの更新、利用できるパッケージの表示などを行います。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "As for the <command>ar</command> program, it allows handling files of the same name: <command>ar t <replaceable>archive</replaceable></command> displays the list of files contained in such an archive, <command>ar x <replaceable>archive</replaceable></command> extracts the files from the archive into the current working directory, <command>ar d <replaceable>archive</replaceable> <replaceable>file</replaceable></command> deletes a file from the archive, etc. Its man page (<citerefentry><refentrytitle>ar</refentrytitle><manvolnum>1</manvolnum></citerefentry>) documents all its other features. <command>ar</command> is a very rudimentary tool that a Unix administrator would only use on rare occasions, but admins routinely use <command>tar</command>, a more evolved archive and file management program. This is why it is easy to restore <command>dpkg</command> in the event of an erroneous deletion. You would only have to download the Debian package and extract the content from the <filename>data.tar.gz</filename> archive in the system's root (<filename>/</filename>):"
msgstr "<command>ar</command> プログラムは ar アーカイブファイルを取り扱います。たとえば <command>ar t <replaceable>archive</replaceable></command> はアーカイブに含まれるファイルのリストを表示、<command>ar x <replaceable>archive</replaceable></command> は現在の作業ディレクトリにアーカイブからファイルを抽出、<command>ar d <replaceable>archive</replaceable> <replaceable>file</replaceable></command> はアーカイブからファイルを削除などの作業を行います。これ以外の機能は man ページ (<citerefentry><refentrytitle>ar</refentrytitle><manvolnum>1</manvolnum></citerefentry>) を参照してください。<command>ar</command> はとても基本的なツールであり、Unix 管理者はめったにこれを使いません。対して、<command>tar</command> は日常的に使われる、進化したアーカイブとファイルの管理プログラムです。そんなわけで、<command>dpkg</command> を誤って削除した場合でも、簡単に元の状態に戻すことが可能です。Debian パッケージをダウンロードして、<filename>data.tar.gz</filename> アーカイブからシステムのルート (<filename>/</filename>) で内容を抽出するだけです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>ar x dpkg_1.17.23_amd64.deb</userinput>\n"
"<computeroutput># </computeroutput><userinput>tar -C / -p -xzf data.tar.gz</userinput>"
msgstr ""
"\n"
"<computeroutput># </computeroutput><userinput>ar x dpkg_1.17.23_amd64.deb</userinput>\n"
"<computeroutput># </computeroutput><userinput>tar -C / -p -xzf data.tar.gz</userinput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>BACK TO BASICS</emphasis> Man page notation"
msgstr "<emphasis>BACK TO BASICS</emphasis> man ページの表記"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "It can be confusing for beginners to find references to “<citerefentry><refentrytitle>ar</refentrytitle><manvolnum>1</manvolnum></citerefentry>” in the literature. This is generally a convenient means of referring to the man page entitled <literal>ar</literal> in section 1."
msgstr "初心者にとって、文献から「<citerefentry><refentrytitle>ar</refentrytitle><manvolnum>1</manvolnum></citerefentry>」の資料を探すことは、わかりにくいことかもしれません。<citerefentry><refentrytitle>ar</refentrytitle><manvolnum>1</manvolnum></citerefentry> は第 1 セクションにある <literal>ar</literal> と名付けられた man ページを参照する便利な表記です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Sometimes this notation is also used to remove ambiguities, for example to distinguish between the <command>printf</command> command that can also be indicated by <citerefentry><refentrytitle>printf</refentrytitle><manvolnum>1</manvolnum></citerefentry> and the <function>printf</function> function in the C programming language, which can also be referred to as <citerefentry><refentrytitle>printf</refentrytitle><manvolnum>3</manvolnum></citerefentry>."
msgstr "man ページの表記は曖昧さをなくすために使われる場合があります。たとえば、<command>printf</command> コマンドの man ページは <citerefentry><refentrytitle>printf</refentrytitle><manvolnum>1</manvolnum></citerefentry> と表記し、C 言語の <function>printf</function> 関数の man ページは <citerefentry><refentrytitle>printf</refentrytitle><manvolnum>3</manvolnum></citerefentry> と表記することで、両者を区別します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<xref linkend=\"solving-problems\" /> discusses manual pages in further detail (see <xref linkend=\"sect.manual-pages\" />)."
msgstr "詳細は<xref linkend=\"solving-problems\" />で議論されています (<xref linkend=\"sect.manual-pages\" />をご覧ください)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Have a look at the content of a <filename>.deb</filename> file:"
msgstr "それでは <filename>.deb</filename> ファイルの内容を見てみましょう。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"<computeroutput>$ </computeroutput><userinput>ar t dpkg_1.17.23_amd64.deb</userinput>\n"
"<computeroutput>debian-binary\n"
"control.tar.gz\n"
"data.tar.gz\n"
"$ </computeroutput><userinput>ar x dpkg_1.17.23_amd64.deb</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>ls</userinput>\n"
"<computeroutput>control.tar.gz  data.tar.gz  debian-binary  dpkg_1.17.23_amd64.deb\n"
"$ </computeroutput><userinput>tar tzf data.tar.gz | head -n 15</userinput>\n"
"<computeroutput>./\n"
"./var/\n"
"./var/lib/\n"
"./var/lib/dpkg/\n"
"./var/lib/dpkg/parts/\n"
"./var/lib/dpkg/info/\n"
"./var/lib/dpkg/alternatives/\n"
"./var/lib/dpkg/updates/\n"
"./etc/\n"
"./etc/logrotate.d/\n"
"./etc/logrotate.d/dpkg\n"
"./etc/dpkg/\n"
"./etc/dpkg/dpkg.cfg.d/\n"
"./etc/dpkg/dpkg.cfg\n"
"./etc/alternatives/\n"
"$ </computeroutput><userinput>tar tzf control.tar.gz</userinput>\n"
"<computeroutput>./\n"
"./conffiles\n"
"./postinst\n"
"./md5sums\n"
"./prerm\n"
"./preinst\n"
"./control\n"
"./postrm\n"
"$ </computeroutput><userinput>cat debian-binary</userinput>\n"
"<computeroutput>2.0</computeroutput>"
msgstr ""
"<computeroutput>$ </computeroutput><userinput>ar t dpkg_1.17.23_amd64.deb</userinput>\n"
"<computeroutput>debian-binary\n"
"control.tar.gz\n"
"data.tar.gz\n"
"$ </computeroutput><userinput>ar x dpkg_1.17.23_amd64.deb</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>ls</userinput>\n"
"<computeroutput>control.tar.gz  data.tar.gz  debian-binary  dpkg_1.17.23_amd64.deb\n"
"$ </computeroutput><userinput>tar tzf data.tar.gz | head -n 15</userinput>\n"
"<computeroutput>./\n"
"./var/\n"
"./var/lib/\n"
"./var/lib/dpkg/\n"
"./var/lib/dpkg/parts/\n"
"./var/lib/dpkg/info/\n"
"./var/lib/dpkg/alternatives/\n"
"./var/lib/dpkg/updates/\n"
"./etc/\n"
"./etc/logrotate.d/\n"
"./etc/logrotate.d/dpkg\n"
"./etc/dpkg/\n"
"./etc/dpkg/dpkg.cfg.d/\n"
"./etc/dpkg/dpkg.cfg\n"
"./etc/alternatives/\n"
"$ </computeroutput><userinput>tar tzf control.tar.gz</userinput>\n"
"<computeroutput>./\n"
"./conffiles\n"
"./postinst\n"
"./md5sums\n"
"./prerm\n"
"./preinst\n"
"./control\n"
"./postrm\n"
"$ </computeroutput><userinput>cat debian-binary</userinput>\n"
"<computeroutput>2.0</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "As you can see, the <command>ar</command> archive of a Debian package is comprised of three files:"
msgstr "ご覧の通り、Debian パッケージの <command>ar</command> アーカイブは以下の 3 つのファイルから成り立っています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<filename>debian-binary</filename>. This is a text file which simply indicates the version of the <filename>.deb</filename> file used (in 2015: version 2.0)."
msgstr "<filename>debian-binary</filename>。これは使われている <filename>.deb</filename> ファイルのバージョンを示す (2015 年の時点ではバージョン 2.0) テキストファイルです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<filename>control.tar.gz</filename>. This archive file contains all of the available meta-information, like the name and version of the package. Some of this meta-information allows package management tools to determine if it is possible to install or uninstall it, for example according to the list of packages already on the machine."
msgstr "<filename>control.tar.gz</filename>。このアーカイブファイルには、パッケージの名前やバージョンなど、利用できるすべてのメタ情報が含まれています。このメタ情報の一部と、たとえば、マシンにインストールされているパッケージのリストを照らし合わせて、パッケージ管理ツールはパッケージをインストールまたはアンインストールが可能かを決定します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<filename>data.tar.gz</filename>. This archive contains all of the files to be extracted from the package; this is where the executable files, documentation, etc., are all stored. Some packages may use other compression formats, in which case the file will be named differently (<filename>data.tar.bz2</filename> for bzip2, <filename>data.tar.xz</filename> for XZ)."
msgstr "<filename>data.tar.gz</filename>。このアーカイブには、パッケージから展開されるすべてのファイルが含まれています。つまり、実行ファイル、文書などすべてが保存されています。一部のパッケージでは異なる圧縮フォーマットが使われているかもしれません、このような場合、ファイルは別の名前が付けられています (bzip2 の場合 <filename>data.tar.bz2</filename>、XZ の場合 <filename>data.tar.xz</filename> です)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Package Meta-Information"
msgstr "パッケージのメタ情報"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package meta-information</primary>"
msgstr "<primary>パッケージのメタ情報</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>meta-information</secondary>"
msgstr "<primary>パッケージ</primary><secondary>メタ情報</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "The Debian package is not only an archive of files intended for installation. It is part of a larger whole, and it describes its relationship with other Debian packages (dependencies, conflicts, suggestions). It also provides scripts that enable the execution of commands at different stages in the package's lifecycle (installation, removal, upgrades). These data are used by the package management tools but are not part of the packaged software; they are, within the package, what is called its “meta-information” (information about other information)."
msgstr "Debian パッケージはインストールされるファイルのアーカイブというだけではありません。Debian パッケージには他の Debian パッケージとの関係性 (依存関係、衝突、提案) を表す情報が含まれています。さらに Debian パッケージにはスクリプトも含まれています。このスクリプトはパッケージライフサイクルのある時点 (インストール、削除、アップグレード) にコマンドを実行するためのものです。これらのデータはパッケージ管理ツールによって使われますが、パッケージングされたソフトウェアの一部ではありません。しかし、これらのデータはパッケージの「メタ情報」(ソフトウェア以外の情報のデータ) と呼ばれて、パッケージに含まれています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Description: the <filename>control</filename> File"
msgstr "説明、<filename>control</filename> ファイル"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>control</filename></primary>"
msgstr "<primary><filename>control</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This file uses a structure similar to email headers (as defined by RFC 2822). For example, for <emphasis role=\"pkg\">apt</emphasis>, the <filename>control</filename> file looks like the following:"
msgstr "<filename>control</filename> ファイルは (RFC 2822 の定義する) 電子メールヘッダとよく似た構造を使っています。たとえば、<emphasis role=\"pkg\">apt</emphasis> の <filename>control</filename> ファイルは以下のような内容を持っています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>apt-cache show apt</userinput>\n"
"<computeroutput>Package: apt\n"
"Version: 1.0.9.6\n"
"Installed-Size: 3788\n"
"Maintainer: APT Development Team &lt;deity@lists.debian.org&gt;\n"
"Architecture: amd64\n"
"Replaces: manpages-it (&lt;&lt; 2.80-4~), manpages-pl (&lt;&lt; 20060617-3~), openjdk-6-jdk (&lt;&lt; 6b24-1.11-0ubuntu1~), sun-java5-jdk (&gt;&gt; 0), sun-java6-jdk (&gt;&gt; 0)\n"
"Depends: libapt-pkg4.12 (&gt;= 1.0.9.6), libc6 (&gt;= 2.15), libgcc1 (&gt;= 1:4.1.1), libstdc++6 (&gt;= 4.9), debian-archive-keyring, gnupg\n"
"Suggests: aptitude | synaptic | wajig, dpkg-dev (&gt;= 1.17.2), apt-doc, python-apt\n"
"Conflicts: python-apt (&lt;&lt; 0.7.93.2~)\n"
"Breaks: manpages-it (&lt;&lt; 2.80-4~), manpages-pl (&lt;&lt; 20060617-3~), openjdk-6-jdk (&lt;&lt; 6b24-1.11-0ubuntu1~), sun-java5-jdk (&gt;&gt; 0), sun-java6-jdk (&gt;&gt; 0)\n"
"Description-en: commandline package manager\n"
" This package provides commandline tools for searching and\n"
" managing as well as querying information about packages\n"
" as a low-level access to all features of the libapt-pkg library.\n"
" .\n"
" These include:\n"
"  * apt-get for retrieval of packages and information about them\n"
"    from authenticated sources and for installation, upgrade and\n"
"    removal of packages together with their dependencies\n"
"  * apt-cache for querying available information about installed\n"
"    as well as installable packages\n"
"  * apt-cdrom to use removable media as a source for packages\n"
"  * apt-config as an interface to the configuration settings\n"
"  * apt-key as an interface to manage authentication keys\n"
"Description-md5: 9fb97a88cb7383934ef963352b53b4a7\n"
"Tag: admin::package-management, devel::lang:ruby, hardware::storage,\n"
" hardware::storage:cd, implemented-in::c++, implemented-in::perl,\n"
" implemented-in::ruby, interface::commandline, network::client,\n"
" protocol::ftp, protocol::http, protocol::ipv6, role::program,\n"
" role::shared-lib, scope::application, scope::utility, sound::player,\n"
" suite::debian, use::downloading, use::organizing, use::searching,\n"
" works-with::audio, works-with::software:package, works-with::text\n"
"Section: admin\n"
"Priority: important\n"
"Filename: pool/main/a/apt/apt_1.0.9.6_amd64.deb\n"
"Size: 1107560\n"
"MD5sum: a325ccb14e69fef2c50da54e035a4df4\n"
"SHA1: 635d09fcb600ec12810e3136d51e696bcfa636a6\n"
"SHA256: 371a559ce741394b59dbc6460470a9399be5245356a9183bbeea0f89ecaabb03</computeroutput>"
msgstr ""
"\n"
"<computeroutput>$ </computeroutput><userinput>apt-cache show apt</userinput>\n"
"<computeroutput>Package: apt\n"
"Version: 1.0.9.6\n"
"Installed-Size: 3788\n"
"Maintainer: APT Development Team &lt;deity@lists.debian.org&gt;\n"
"Architecture: amd64\n"
"Replaces: manpages-it (&lt;&lt; 2.80-4~), manpages-pl (&lt;&lt; 20060617-3~), openjdk-6-jdk (&lt;&lt; 6b24-1.11-0ubuntu1~), sun-java5-jdk (&gt;&gt; 0), sun-java6-jdk (&gt;&gt; 0)\n"
"Depends: libapt-pkg4.12 (&gt;= 1.0.9.6), libc6 (&gt;= 2.15), libgcc1 (&gt;= 1:4.1.1), libstdc++6 (&gt;= 4.9), debian-archive-keyring, gnupg\n"
"Suggests: aptitude | synaptic | wajig, dpkg-dev (&gt;= 1.17.2), apt-doc, python-apt\n"
"Conflicts: python-apt (&lt;&lt; 0.7.93.2~)\n"
"Breaks: manpages-it (&lt;&lt; 2.80-4~), manpages-pl (&lt;&lt; 20060617-3~), openjdk-6-jdk (&lt;&lt; 6b24-1.11-0ubuntu1~), sun-java5-jdk (&gt;&gt; 0), sun-java6-jdk (&gt;&gt; 0)\n"
"Description-ja: コマンドラインパッケージマネージャ\n"
" 本パッケージは、パッケージを検索、管理したりパッケージの情報を照会できるコ\n"
" マンドラインツールを提供します。libapt-pkg ライブラリの全機能に低レベルアク\n"
" セスできます。\n"
" .\n"
" 次のツールが含まれます。\n"
"  * apt-get: 信頼されたソースからパッケージやパッケージの情報を取得したり、\n"
"    パッケージとその依存関係をまとめてインストール、アップグレード、および削\n"
"    除できます\n"
"  * apt-cache: インストールしたパッケージやインストール可能なパッケージに関\n"
"    して利用できる情報を検索できます\n"
"  * apt-cdrom: リムーバブルメディアをパッケージの取得ソースとして利用できます\n"
"  * apt-config: 構成設定へのインターフェース\n"
"  * apt-key: 信頼できる鍵を管理するインターフェース\n"
"Description-md5: 9fb97a88cb7383934ef963352b53b4a7\n"
"Tag: admin::package-management, devel::lang:ruby, hardware::storage,\n"
" hardware::storage:cd, implemented-in::c++, implemented-in::perl,\n"
" implemented-in::ruby, interface::commandline, network::client,\n"
" protocol::ftp, protocol::http, protocol::ipv6, role::program,\n"
" role::shared-lib, scope::application, scope::utility, sound::player,\n"
" suite::debian, use::downloading, use::organizing, use::searching,\n"
" works-with::audio, works-with::software:package, works-with::text\n"
"Section: admin\n"
"Priority: important\n"
"Filename: pool/main/a/apt/apt_1.0.9.6_amd64.deb\n"
"Size: 1107560\n"
"MD5sum: a325ccb14e69fef2c50da54e035a4df4\n"
"SHA1: 635d09fcb600ec12810e3136d51e696bcfa636a6\n"
"SHA256: 371a559ce741394b59dbc6460470a9399be5245356a9183bbeea0f89ecaabb03</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>BACK TO BASICS</emphasis> RFC — Internet standards"
msgstr "<emphasis>BACK TO BASICS</emphasis> RFC — インターネット標準"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>RFC</primary>"
msgstr "<primary>RFC</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>Request For Comments</primary>"
msgstr "<primary>Request For Comments</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "RFC is the abbreviation of “Request For Comments”. An RFC is generally a technical document that describes what will become an Internet standard. Before becoming standardized and frozen, these standards are submitted for public review (hence their name). The IETF (Internet Engineering Task Force) decides on the evolution of the status of these documents (proposed standard, draft standard, or standard)."
msgstr "RFC は「Request For Comments」の略称です。RFC は一般的にインターネット標準になり得る技術の仕様を説明した技術文書です。標準化と決定の前に、これらの文書は公開レビューされます (そんなわけでこの名前が付いています)。IETF (インターネット技術タスクフォース) はこれらの文書の状態の進化 (標準化への提唱、標準化への草稿、標準) を決定します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "RFC 2026 defines the process for standardization of Internet protocols. <ulink type=\"block\" url=\"http://www.faqs.org/rfcs/rfc2026.html\" />"
msgstr "RFC 2026 ではインターネットプロトコル標準化の手続きが定義されています。<ulink type=\"block\" url=\"http://www.faqs.org/rfcs/rfc2026.html\" />"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Dependencies: the <literal>Depends</literal> Field"
msgstr "依存関係、<literal>Depends</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>dependency</primary>"
msgstr "<primary>依存</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Depends</literal>, header field</primary>"
msgstr "<primary><literal>Depends</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>dependency</secondary>"
msgstr "<primary>パッケージ</primary><secondary>依存関係</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The dependencies are defined in the <literal>Depends</literal> field in the package header. This is a list of conditions to be met for the package to work correctly — this information is used by tools such as <command>apt</command> in order to install the required libraries, in appropriate versions fulfilling the dependencies of the package to be installed. For each dependency, it is possible to restrict the range of versions that meet that condition. In other words, it is possible to express the fact that we need the package <emphasis role=\"pkg\">libc6</emphasis> in a version equal to or greater than “2.15” (written “<command>libc6 (&gt;= 2.15)</command>”). Version comparison operators are as follows:"
msgstr "依存関係はパッケージヘッダの <literal>Depends</literal> フィールドで定義されています。依存関係はパッケージを正しく動かすために必要な条件を定義しています。すなわち <command>apt</command> などのツールはこの情報を使ってインストールしたいパッケージの依存関係を満たすために必要なバージョンのライブラリをインストールします。それぞれの依存パッケージについて、要求を満たすパッケージのバージョン範囲を指定することが可能です。言い換えれば、バージョン「2.15」以上の <emphasis role=\"pkg\">libc6</emphasis> パッケージが必要という条件を表現する (「<command>libc6 (&gt;= 2.15)</command>」と表記する) ことが可能です。バージョン比較演算子は次の通りです。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Checked-By: Osamu Aoki;
msgid "<command>&lt;&lt;</command>: less than;"
msgstr "<command>&lt;&lt;</command> はより低いことを意味します。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Checked-By: Osamu Aoki;
msgid "<command>&lt;=</command>: less than or equal to;"
msgstr "<command>&lt;=</command> は以下を意味します。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Checked-By: Osamu Aoki;
msgid "<command>=</command>: equal to (note that “<literal>2.6.1</literal>” is not equal to “<literal>2.6.1-1</literal>”);"
msgstr "<command>=</command> は等しいことを意味します (「<literal>2.6.1</literal>」は「<literal>2.6.1-1</literal>」と等しくありません)。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Checked-By: Osamu Aoki;
msgid "<command>&gt;=</command>: greater than or equal to;"
msgstr "<command>&gt;=</command> は以上を意味します。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Checked-By: Osamu Aoki;
msgid "<command>&gt;&gt;</command>: greater than."
msgstr "<command>&gt;&gt;</command> はより高いことを意味します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In a list of conditions to be met, the comma serves as a separator. It must be interpreted as a logical “and”. In conditions, the vertical bar (“|”) expresses a logical “or” (it is an inclusive “or”, not an exclusive “either/or”). Carrying greater priority than “and”, it can be used as many times as necessary. Thus, the dependency “(A or B) and C” is written <command>A | B, C</command>. In contrast, the expression “A or (B and C)” should be written as “(A or B) and (A or C)”, since the <literal>Depends</literal> field does not tolerate parentheses that change the order of priorities between the logical operators “or” and “and”. It would thus be written <command>A | B, A | C</command>. <ulink type=\"block\" url=\"http://www.debian.org/doc/debian-policy/ch-relationships.html\" />"
msgstr "満足すべき条件リストの中で使われるコンマは条件同士の区切りです。このコンマは論理「and」に解釈されます。条件リストの中で使われる垂直棒 (「|」) は論理「or」に解釈されます (これは「包含的論理和」で、「排他的論理和」ではありません)。「or」は「and」より高い優先度を持っており、必要に応じて何度でも使えます。このため、「(A or B) and C」は <command>A | B, C</command> のように表記できます。これに対して、「A or (B and C)」は「(A or B) and (A or C)」のように表記してください。なぜなら、<literal>Depends</literal> フィールドでは括弧を使って論理演算子「or」と「and」の優先度の順位を変えることができないからです。このため、これは <command>A | B, A | C</command> のように表記できます。<ulink type=\"block\" url=\"http://www.debian.org/doc/debian-policy/ch-relationships.html\" />"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>meta-package</primary>"
msgstr "<primary>メタパッケージ</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The dependencies system is a good mechanism for guaranteeing the operation of a program, but it has another use with “meta-packages”. These are empty packages that only describe dependencies. They facilitate the installation of a consistent group of programs preselected by the meta-package maintainer; as such, <command>apt install <replaceable>meta-package</replaceable></command> will automatically install all of these programs using the meta-package's dependencies. The <emphasis role=\"pkg\">gnome</emphasis>, <emphasis role=\"pkg\">kde-full</emphasis> and <emphasis role=\"pkg\">linux-image-amd64</emphasis> packages are examples of meta-packages."
msgstr "依存関係システムはプログラムの動作を保証する良いメカニズムですが、「メタパッケージ」を使う手もあります。メタパッケージは依存関係を表記するだけの空のパッケージです。メタパッケージはメンテナが事前に選んだ一連のプログラムグループのインストールを楽にします。すなわち <command>apt install <replaceable>meta-package</replaceable></command> はメタパッケージが依存するすべてのプログラムを自動的にインストールします。<emphasis role=\"pkg\">gnome</emphasis>、<emphasis role=\"pkg\">kde-full</emphasis>、<emphasis role=\"pkg\">linux-image-amd64</emphasis> パッケージはメタパッケージの例です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>DEBIAN POLICY</emphasis> <literal>Pre-Depends</literal>, a more demanding <literal>Depends</literal>"
msgstr "<emphasis>DEBIAN POLICY</emphasis> <literal>Pre-Depends</literal>、<literal>Depends</literal> よりも厳しい要求"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Pre-Depends</literal>, header field</primary>"
msgstr "<primary><literal>Pre-Depends</literal> ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>pre-dependency</primary>"
msgstr "<primary>先行依存</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "“Pre-dependencies”, which are listed in the “<literal>Pre-Depends</literal>” field in the package headers, complete the normal dependencies; their syntax is identical. A normal dependency indicates that the package in question must be unpacked and configured before configuration of the package declaring the dependency. A pre-dependency stipulates that the package in question must be unpacked and configured before execution of the pre-installation script of the package declaring the pre-dependency, that is before its installation."
msgstr "「先行依存」はパッケージヘッダの「<literal>Pre-Depends</literal>」フィールドに書かれており、通常の依存関係を完全なものにします。条件の書式は <literal>Depends</literal> フィールドと同じです。通常の依存関係とは、依存関係が記述されたパッケージの設定前に、依存関係にあるパッケージの展開および設定を行わなければいけないことを示しています。先行依存とは、先行依存関係が記述されたパッケージのインストール前スクリプトの実行前 (インストールの前) に、先行依存関係にあるパッケージの展開および設定を行わなければいけないことを規定しています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "A pre-dependency is very demanding for <command>apt</command>, because it adds a strict constraint on the ordering of the packages to install. As such, pre-dependencies are discouraged unless absolutely necessary. It is even recommended to consult other developers on <email>debian-devel@lists.debian.org</email> before adding a pre-dependency. It is generally possible to find another solution as a work-around."
msgstr "先行依存は <command>apt</command> にとってとても重要です。なぜなら、先行依存関係はパッケージをインストールする順番を厳しく制約するからです。先行依存関係それ自体は、絶対に必要でない限り勧められません。先行依存関係を追加する前に、<email>debian-devel@lists.debian.org</email> の他の開発者に相談することをお勧めします。通常、次善策として別の解決策を見つけることが可能です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>DEBIAN POLICY</emphasis> <literal>Recommends</literal>, <literal>Suggests</literal>, and <literal>Enhances</literal> fields"
msgstr "<emphasis>DEBIAN POLICY</emphasis> <literal>Recommends</literal>、<literal>Suggests</literal>、<literal>Enhances</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Recommends</literal>, header field</primary>"
msgstr "<primary><literal>Recommends</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Suggests</literal>, header field</primary>"
msgstr "<primary><literal>Suggests</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <literal>Recommends</literal> and <literal>Suggests</literal> fields describe dependencies that are not compulsory. The “recommended” dependencies, the most important, considerably improve the functionality offered by the package but are not indispensable to its operation. The “suggested” dependencies, of secondary importance, indicate that certain packages may complement and increase their respective utility, but it is perfectly reasonable to install one without the others."
msgstr "<literal>Recommends</literal> (推奨) と <literal>Suggests</literal> (提案) フィールドは必須ではない依存関係を表すためのものです。最も重要な「推奨」依存関係のパッケージは、パッケージの提供する機能を大幅に改善するけれども、動作に必要不可欠ではないパッケージです。2 番目に重要な「提案」依存関係のパッケージは、そのユーティリティの機能を補完したり強化する可能性があり、他のパッケージではなくこのパッケージをインストールするのが極めて合理的であるようなパッケージです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "You should always install the “recommended” packages, unless you know exactly why you do not need them. Conversely, it is not necessary to install “suggested” packages unless you know why you need them."
msgstr "「推奨」パッケージは、それを必要としない理由を理解している場合を除いて、常にインストールされるべきです。逆に「提案」パッケージは、それを必要とする理由を理解している場合を除いて、インストールしなくても構いません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Enhances</literal>, header field</primary>"
msgstr "<primary><literal>Enhances</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <literal>Enhances</literal> field also describes a suggestion, but in a different context. It is indeed located in the suggested package, and not in the package that benefits from the suggestion. Its interest lies in that it is possible to add a suggestion without having to modify the package that is concerned. Thus, all add-ons, plug-ins, and other extensions of a program can then appear in the list of suggestions related to the software. Although it has existed for several years, this last field is still largely ignored by programs such as <command>apt</command> or <command>synaptic</command>. Its purpose is for a suggestion made by the <literal>Enhances</literal> field to appear to the user in addition to the traditional suggestions — found in the <literal>Suggests</literal> field."
msgstr "<literal>Enhances</literal> フィールドは <literal>Recommends</literal> や <literal>Suggests</literal> フィールドと同様にパッケージを提案するためのものですが、使用法が少し違います。自分があるパッケージから利益を得る場合は Suggests フィールドにそのパッケージを追加し、自分があるパッケージに利益を与える場合は Enhances フィールドにそのパッケージを追加します。Enhances フィールドの良いところは、提案される側のパッケージを変更せずにそのパッケージにとって自分が有用であるという提案を追加できる、という点です。つまり、あるソフトウェアのアドオン、プラグイン、機能拡張のパッケージはそのソフトウェアを Enhances フィールドに載せることが可能です。数年前から存在したにも関わらず、Enhances フィールドはいまだに <command>apt</command> や <command>synaptic</command> など多くのプログラムから無視されています。<literal>Enhances</literal> フィールドの目的とは、<literal>Suggests</literal> フィールドによる伝統的な提案ではカバーできない提案をユーザに示すことです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Conflicts: the <literal>Conflicts</literal> field"
msgstr "衝突、<literal>Conflicts</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>conflicts</primary>"
msgstr "<primary>衝突</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Conflicts</literal>, header field</primary>"
msgstr "<primary><literal>Conflicts</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>conflict</secondary>"
msgstr "<primary>パッケージ</primary><secondary>衝突</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <literal>Conflicts</literal> field indicates when a package cannot be installed simultaneously with another. The most common reasons for this are that both packages include a file of the same name, or provide the same service on the same TCP port, or would hinder each other's operation."
msgstr "<literal>Conflicts</literal> フィールドでは、同時にインストールできないパッケージを指定します。このフィールドが使われるケースで最も多いのは、両方のパッケージが同名のファイルを含む場合、同種のサービスを同じ TCP ポートで提供する場合、互いの動作を妨げる場合です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> will refuse to install a package if it triggers a conflict with an already installed package, except if the new package specifies that it will “replace” the installed package, in which case <command>dpkg</command> will choose to replace the old package with the new one. <command>apt</command> always follows your instructions: if you choose to install a new package, it will automatically offer to uninstall the package that poses a problem."
msgstr "<command>dpkg</command> は、あるパッケージがインストール済みのパッケージと衝突を引き起こす場合、新しいパッケージがインストール済みのパッケージを「置換」するものでない限り、そのパッケージのインストールを拒否するでしょう (「置換」するものの場合、<command>dpkg</command> はインストール済みパッケージを新パッケージで置換します)。これに対して <command>apt</command> は常にあなたの指示に従います。つまり、もし <command>apt</command> に新しいパッケージをインストールするよう指示したのなら、<command>apt</command> は新しいパッケージをインストールする際に障害となるインストール済みパッケージを自動的にアンインストールします。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Incompatibilities: the <literal>Breaks</literal> Field"
msgstr "不適合性、<literal>Breaks</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>incompatibilities</primary>"
msgstr "<primary>不適合性</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Breaks</literal>, header field</primary>"
msgstr "<primary><literal>Breaks</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>incompatibility</secondary>"
msgstr "<primary>パッケージ</primary><secondary>両立不可能</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <literal>Breaks</literal> field has an effect similar to that of the <literal>Conflicts</literal> field, but with a special meaning. It signals that the installation of a package will “break” another package (or particular versions of it). In general, this incompatibility between two packages is transitory, and the <literal>Breaks</literal> relationship specifically refers to the incompatible versions."
msgstr "<literal>Breaks</literal> フィールドは <literal>Conflicts</literal> フィールドとよく似た効果を持っていますが、特別な意味があります。すなわち、<literal>Breaks</literal> フィールドを持つパッケージは <literal>Breaks</literal> フィールドに指定された他のパッケージ (または他のパッケージの特定バージョン) を「破壊する」という意味があります。一般的に、このような 2 つのパッケージの不適合性は一時的なもので、<literal>Breaks</literal> フィールドでは不適合性がある特定のバージョンだけを指定します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> will refuse to install a package that breaks an already installed package, and <command>apt</command> will try to resolve the problem by updating the package that would be broken to a newer version (which is assumed to be fixed and, thus, compatible again)."
msgstr "<command>dpkg</command> はインストール済みのパッケージを破壊するようなパッケージのインストールを拒否します。<command>apt</command> は破壊されるパッケージを新しいバージョンに更新することで (新しいバージョンではこの問題が修正され、両パッケージが適合すると期待されます) この問題の解決を試みます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This type of situation may occur in the case of updates without backwards compatibility: this is the case if the new version no longer functions with the older version, and causes a malfunction in another program without making special provisions. The <literal>Breaks</literal> field prevents the user from running into these problems."
msgstr "この手の状況は更新によって後方互換性がなくなる場合に起こりうるかもしれません。具体的に言えば、新しいバージョンが古いバージョンと同時に動かない場合、特別な設定をしないと別のプログラムがうまく動かない場合です。<literal>Breaks</literal> フィールドはユーザがこのような問題に遭遇することがないようにしています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Provided Items: the <literal>Provides</literal> Field"
msgstr "提供されるアイテム、<literal>Provides</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Provides</literal>, header field</primary>"
msgstr "<primary><literal>Provides</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "This field introduces the very interesting concept of a “virtual package”. It has many roles, but two are of particular importance. The first role consists in using a virtual package to associate a generic service with it (the package “provides” the service). The second indicates that a package completely replaces another, and that for this purpose it can also satisfy the dependencies that the other would satisfy. It is thus possible to create a substitution package without having to use the same package name."
msgstr "<literal>Provides</literal> フィールドはとても興味深い「仮想パッケージ」の構想を生み出しました。<literal>Provides</literal> フィールドは多くの役割を持っていますが、特に重要な 2 つを説明します。最初の役割は、<literal>Provides</literal> フィールドを持つパッケージは <literal>Provides</literal> フィールドに指定された一般的なサービスを意味する仮想パッケージに関連付けられている (サービスを「提供する」のは <literal>Provides</literal> フィールドを持つパッケージ自身です)、という意味を持たせる役割です。2 番目の役割は、<literal>Provides</literal> フィールドを持つパッケージは <literal>Provides</literal> フィールドに指定されたパッケージの機能を完全に置き換えており、<literal>Provides</literal> フィールドに指定されたパッケージの代替として <literal>Provides</literal> フィールドに指定されたパッケージに依存する他のパッケージの依存関係を満足できる、という意味を持たせる役割です。そのため、あるパッケージの機能を代替する別パッケージを必ずしも同じパッケージ名を使わずに作ることが可能です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>VOCABULARY</emphasis> Meta-package and virtual package"
msgstr "<emphasis>VOCABULARY</emphasis> メタパッケージと仮想パッケージ"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>virtual package</secondary>"
msgstr "<primary>パッケージ</primary><secondary>仮想パッケージ</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>virtual package</primary>"
msgstr "<primary>仮想パッケージ</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "It is essential to clearly distinguish meta-packages from virtual packages. The former are real packages (including real <filename>.deb</filename> files), whose only purpose is to express dependencies."
msgstr "メタパッケージと仮想パッケージを明確に区別することは絶対に不可欠です。メタパッケージは真のパッケージで (真の <filename>.deb</filename> ファイルを含んでいます)、その目的は依存関係を表現するだけです。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "Virtual packages, however, do not exist physically; they are only a means of identifying real packages based on common, logical criteria (service provided, compatibility with a standard program or a pre-existing package, etc.)."
msgstr "これに対して、仮想パッケージは実体がありません。そして、仮想パッケージの目的は、一般的で論理的な基準 (提供するサービス、一般的なプログラムまたは既存のパッケージなどとの互換性) に従って複数の実体を持つパッケージを同一視することです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Providing a “Service”"
msgstr "「サービス」の提供"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Let us discuss the first case in greater detail with an example: all mail servers, such as <emphasis role=\"pkg\">postfix</emphasis> or <emphasis role=\"pkg\">sendmail</emphasis> are said to “provide” the <emphasis role=\"pkg\">mail-transport-agent</emphasis> virtual package. Thus, any package that needs this service to be functional (e.g. a mailing list manager, such as <emphasis role=\"pkg\">smartlist</emphasis> or <emphasis role=\"pkg\">sympa</emphasis>) simply states in its dependencies that it requires a <emphasis role=\"pkg\">mail-transport-agent</emphasis> instead of specifying a large yet incomplete list of possible solutions (e.g. <command>postfix | sendmail | exim4 | …</command>). Furthermore, it is useless to install two mail servers on the same machine, which is why each of these packages declares a conflict with the <emphasis role=\"pkg\">mail-transport-agent</emphasis> virtual package. A conflict between a package and itself is ignored by the system, but this technique will prohibit the installation of two mail servers side by side."
msgstr "最初の場合について、例を挙げて詳細に議論しましょう。すなわち、すべてのメールサーバ、たとえば <emphasis role=\"pkg\">postfix</emphasis> や <emphasis role=\"pkg\">sendmail</emphasis> などは <emphasis role=\"pkg\">mail-transport-agent</emphasis> 仮想パッケージ「提供」しています。このため、動作にメールサービスを必要とするパッケージ (たとえば <emphasis role=\"pkg\">smartlist</emphasis> や <emphasis role=\"pkg\">sympa</emphasis> などのメーリングリストマネージャ) は、おそらくメールサービスを提供するであろうパッケージをたくさん依存関係に宣言する (たとえば、<command>postfix | sendmail | exim4 | …</command>のように宣言する) のではなく、たった 1 つ <emphasis role=\"pkg\">mail-transport-agent</emphasis> を宣言するだけで十分です。さらに、1 台のマシンに 2 つのメールサーバをインストールすることは無駄なため、メールサーバの機能を提供するパッケージは <emphasis role=\"pkg\">mail-transport-agent</emphasis> 仮想パッケージとの衝突を宣言します。例外的にあるパッケージとそれ自身との衝突はシステムによって無視されます。この手法により、2 つのメールサーバを同時にインストールできなくなります。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>DEBIAN POLICY</emphasis> List of virtual packages"
msgstr "<emphasis>DEBIAN POLICY</emphasis> 仮想パッケージのリスト"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "For virtual packages to be useful, everyone must agree on their name. This is why they are standardized in the Debian Policy. The list includes among others <emphasis role=\"pkg\">mail-transport-agent</emphasis> for mail servers, <emphasis role=\"pkg\">c-compiler</emphasis> for C programming language compilers, <emphasis role=\"pkg\">www-browser</emphasis> for web browsers, <emphasis role=\"pkg\">httpd</emphasis> for web servers, <emphasis role=\"pkg\">ftp-server</emphasis> for FTP servers, <emphasis role=\"pkg\">x-terminal-emulator</emphasis> for terminal emulators in graphical mode (<command>xterm</command>), and <emphasis role=\"pkg\">x-window-manager</emphasis> for window managers."
msgstr "仮想パッケージを有益なものにするためには、全員がその名前に同意しなければいけません。このため、仮想パッケージの名前は Debian ポリシーで標準化されています。メールサーバ用に <emphasis role=\"pkg\">mail-transport-agent</emphasis>、C 言語コンパイラ用に <emphasis role=\"pkg\">c-compiler</emphasis>、ウェブブラウザ用に <emphasis role=\"pkg\">www-browser</emphasis>、ウェブサーバ用に <emphasis role=\"pkg\">httpd</emphasis>、FTP サーバ用に <emphasis role=\"pkg\">ftp-server</emphasis>、グラフィカルモードのターミナルエミュレータ (<command>xterm</command>) 用に <emphasis role=\"pkg\">x-terminal-emulator</emphasis>、ウィンドウマネージャ用に <emphasis role=\"pkg\">x-window-manager</emphasis> などが定められています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The full list can be found on the Web. <ulink type=\"block\" url=\"http://www.debian.org/doc/packaging-manuals/virtual-package-names-list.txt\" />"
msgstr "完全なリストはウェブの情報を参照してください。<ulink type=\"block\" url=\"http://www.debian.org/doc/packaging-manuals/virtual-package-names-list.txt\" />"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Interchangeability with Another Package"
msgstr "他のパッケージとの互換性"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <literal>Provides</literal> field is also interesting when the content of a package is included in a larger package. For example, the <emphasis role=\"pkg\">libdigest-md5-perl</emphasis> Perl module was an optional module in Perl 5.6, and has been integrated as standard in Perl 5.8 (and later versions, such as 5.20 present in <emphasis role=\"distribution\">Jessie</emphasis>). As such, the package <emphasis role=\"pkg\">perl</emphasis> has since version 5.8 declared <literal>Provides: libdigest-md5-perl</literal> so that the dependencies on this package are met if the user has Perl 5.8 (or newer). The <emphasis role=\"pkg\">libdigest-md5-perl</emphasis> package itself has eventually been deleted, since it no longer had any purpose when old Perl versions were removed."
msgstr "パッケージの内容が巨大なパッケージに統合された場合に、<literal>Provides</literal> フィールドはさらに興味深い役割を果たします。たとえば、<emphasis role=\"pkg\">libdigest-md5-perl</emphasis> Perl モジュールは Perl 5.6 では任意選択モジュールでしたが、Perl 5.8 (および <emphasis role=\"distribution\">Jessie</emphasis> に含まれる 5.20 などのその後のバージョン) では標準モジュールに組み込まれました。このため、<emphasis role=\"pkg\">perl</emphasis> パッケージはバージョン 5.8 から <literal>Provides: libdigest-md5-perl</literal> を宣言しています。そうすれば、ユーザが Perl 5.8 (とそれより新しいバージョン) を持っている場合、<emphasis role=\"pkg\">libdigest-md5-perl</emphasis> に依存するパッケージの依存関係を満足させることができるからです。そして最終的に実体を持つ <emphasis role=\"pkg\">libdigest-md5-perl</emphasis> パッケージは削除されました。なぜなら、古い Perl バージョンが削除されたことで実体を持つ <emphasis role=\"pkg\">libdigest-md5-perl</emphasis> パッケージはもはや存在意義がなくなったからです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Use of a <literal>Provides</literal> field in order to not break dependencies"
msgstr "依存関係を壊さないための <literal>Provides</literal> フィールドの使い方"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This feature is very useful, since it is never possible to anticipate the vagaries of development, and it is necessary to be able to adjust to renaming, and other automatic replacement, of obsolete software."
msgstr "この機能はとても役立ちます。なぜなら、開発方向性の変化を予測することは絶対に不可能ですし、パッケージ名を変更したり他の時代遅れのソフトウェアを自動に置き換えたりすることを可能な状態にしておくことが必要だからです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>BACK TO BASICS</emphasis> Perl, a programming language"
msgstr "<emphasis>BACK TO BASICS</emphasis> Perl、プログラミング言語"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>Perl</primary>"
msgstr "<primary>Perl</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>CPAN</primary>"
msgstr "<primary>CPAN</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Perl (Practical Extraction and Report Language) is a very popular programming language. It has many ready-to-use modules that cover a vast spectrum of applications, and that are distributed by the CPAN (Comprehensive Perl Archive Network) servers, an exhaustive network of Perl packages. <ulink type=\"block\" url=\"http://www.perl.org/\" /> <ulink type=\"block\" url=\"http://www.cpan.org/\" />"
msgstr "Perl (Practical Extraction and Report Language) はとても人気の高いプログラミング言語です。Perl にはすぐに使えるモジュールが数多くあります。これらのモジュールは非常に広い分野における応用をカバーし、Perl パッケージの包括的ネットワークである CPAN (Comprehensive Perl Archive Network) サーバで配布されています。<ulink type=\"block\" url=\"http://www.perl.org/\" /><ulink type=\"block\" url=\"http://www.cpan.org/\" />"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Since it is an interpreted language, a program written in Perl does not require compilation prior to execution. This is why they are called “Perl scripts”."
msgstr "Perl はインタプリタ型言語であるため、Perl で書かれたプログラムは実行前にコンパイルする必要がありません。このためプログラムは「Perl スクリプト」と呼ばれています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Past Limitations"
msgstr "過去に設けられていた制限"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Virtual packages used to suffer from some limitations, the most significant of which was the absence of a version number. To return to the previous example, a dependency such as <literal>Depends: libdigest-md5-perl (&gt;= 1.6)</literal>, despite the presence of Perl 5.10, would never be considered as satisfied by the packaging system — while in fact it most likely is satisfied. Unaware of this, the package system chose the least risky option, assuming that the versions do not match."
msgstr "かつて仮想パッケージにはいくつかの制限がありました。最も重要な制限はバージョン番号がなかったことでした。先に挙げた例に戻ると、Perl 5.10 が存在する場合、<literal>Depends: libdigest-md5-perl (&gt;= 1.6)</literal> という依存関係は満足されています (正しく言えば、十中八九は満足されています)。しかしながら、パッケージシステムはこの依存関係が満足されていることに気が付きませんでした。そして、パッケージシステムは指定されたバージョンが一致しないと仮定して最もリスクの低いオプションを選んでいました。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This limitation has been lifted in <emphasis role=\"pkg\">dpkg</emphasis> 1.17.11, and is no longer relevant in Jessie. Packages can assign a version to the virtual packages they provide with a dependency such as <literal>Provides: libdigest-md5-perl (= 1.8)</literal>."
msgstr "この制限は <emphasis role=\"pkg\">dpkg</emphasis> 1.17.11 で撤廃され、Jessie ではもはや関係のない話です。パッケージは自分自身が提供する仮想パッケージにバージョン番号を付けることが可能です。これを行うには <literal>Provides: libdigest-md5-perl (= 1.8)</literal> などのようにします。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Replacing Files: The <literal>Replaces</literal> Field"
msgstr "ファイルの置き換え、<literal>Replaces</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>replacement</primary>"
msgstr "<primary>置換</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Replaces</literal>, header field</primary>"
msgstr "<primary><literal>Replaces</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>replacement</secondary>"
msgstr "<primary>パッケージ</primary><secondary>置換</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <literal>Replaces</literal> field indicates that the package contains files that are also present in another package, but that the package is legitimately entitled to replace them. Without this specification, <command>dpkg</command> fails, stating that it can not overwrite the files of another package (technically, it is possible to force it to do so with the <literal>--force-overwrite</literal> option, but that is not considered standard operation). This allows identification of potential problems and requires the maintainer to study the matter prior to choosing whether to add such a field."
msgstr "<literal>Replaces</literal> フィールドは、<literal>Replaces</literal> フィールドを持つパッケージが <literal>Replaces</literal> フィールドに指定された他のパッケージからも提供されるファイルを含んでおり、合法的に <literal>Replaces</literal> フィールドに指定されたパッケージから提供されたファイルを置き換える権利を持っていることを示すためのものです。<literal>Replaces</literal> フィールドがなければ、<command>dpkg</command> は別パッケージから提供されたファイルをインストール中のパッケージに含まれるファイルで置き換えることはできません。すなわちこれは他のパッケージのファイルは上書きできないことを意味しています (技術的に言えば、<literal>--force-overwrite</literal> オプションを付けることで強制的に上書き可能ですが、これは一般に認められていません)。このような <command>dpkg</command> の挙動により潜在的な問題を識別できるようになりますし、メンテナはこのフィールドを追加する前に問題の原因を追及できるようになります。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "The use of this field is justified when package names change or when a package is included in another. This also happens when the maintainer decides to distribute files differently among various binary packages produced from the same source package: a replaced file no longer belongs to the old package, but only to the new one."
msgstr "<literal>Replaces</literal> フィールドはパッケージ名が変更された時やパッケージが別のパッケージに統合された時に使われます。この状況はメンテナが同じソースパッケージから複数のバイナリパッケージを作成し、各バイナリパッケージから異なるファイルを配布するように方針を決めた場合に発生します。つまり、古いパッケージに含まれていたファイルがソースパッケージは同じでもバイナリパッケージの名前が異なる新しいパッケージに含まれるようになった場合に発生します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "If all of the files in an installed package have been replaced, the package is considered to be removed. Finally, this field also encourages <command>dpkg</command> to remove the replaced package where there is a conflict."
msgstr "インストール済みパッケージのすべてのファイルが置き換えられたら、このパッケージは削除されたとみなされます。最後に、<literal>Replaces</literal> フィールドは衝突がある場合に <command>dpkg</command> に置き換えられたパッケージを削除させる際に使われます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>GOING FURTHER</emphasis> The <literal>Tag</literal> field"
msgstr "<emphasis>GOING FURTHER</emphasis> <literal>Tag</literal> フィールド"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In the <emphasis role=\"pkg\">apt</emphasis> example above, we can see the presence of a field that we have not yet described, the <literal>Tag</literal> field. This field does not describe a relationship between packages, but is simply a way of categorizing a package in a thematic taxonomy. This classification of packages according to several criteria (type of interface, programming language, domain of application, etc.) has been available for a long time. Despite this, not all packages have accurate tags and it is not yet integrated in all Debian tools; <command>aptitude</command> displays these tags, and allows them to be used as search criteria. For those who are repelled by <command>aptitude</command>'s search criteria, the following website allows navigation of the tag database: <ulink type=\"block\" url=\"http://debtags.alioth.debian.org/\" />"
msgstr "例として上に挙げた <emphasis role=\"pkg\">apt</emphasis> の control ファイルには、まだ説明していない <literal>Tag</literal> フィールドがあります。<literal>Tag</literal> フィールドはパッケージ間の関連性を説明するものではなく、単純にテーマ分類に基づいてパッケージを分類するものです。昔からパッケージはいくつかの基準 (インターフェースの種類、プログラミング言語、アプリケーションの分野など) に基づいて分類されていました。これにも関わらず、適切なタグがすべてのパッケージに付けられているわけではありませんし、まだすべての Debian ツールがタグを使えるわけではありません。たとえば <command>aptitude</command> はこれらのタグを表示しますし、検索条件としてタグを使うことも可能です。<command>aptitude</command> の検索条件に嫌悪感を抱く人は、以下のウェブサイトを使ってタグのデータベースを見ることが可能です。<ulink type=\"block\" url=\"http://debtags.alioth.debian.org/\" />"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Configuration Scripts"
msgstr "設定スクリプト"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>postinst</filename></primary>"
msgstr "<primary><filename>postinst</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>preinst</filename></primary>"
msgstr "<primary><filename>preinst</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>postrm</filename></primary>"
msgstr "<primary><filename>postrm</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>prerm</filename></primary>"
msgstr "<primary><filename>prerm</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>control.tar.gz</filename></primary>"
msgstr "<primary><filename>control.tar.gz</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In addition to the <filename>control</filename> file, the <filename>control.tar.gz</filename> archive for each Debian package may contain a number of scripts, called by <command>dpkg</command> at different stages in the processing of a package. The Debian Policy describes the possible cases in detail, specifying the scripts called and the arguments that they receive. These sequences may be complicated, since if one of the scripts fails, <command>dpkg</command> will try to return to a satisfactory state by canceling the installation or removal in progress (insofar as it is possible)."
msgstr "それぞれの Debian パッケージには <filename>control</filename> ファイルだけでなく <filename>control.tar.gz</filename> アーカイブが含まれており、<filename>control.tar.gz</filename> には <command>dpkg</command> がパッケージ処理の各段階で呼び出す多数のスクリプトが含まれているかもしれません。Debian ポリシーでは、呼び出されるスクリプトとスクリプトが受け取る引数を明記することで、スクリプトの使われ方が詳しく説明されています。スクリプトが呼び出される順番はわかりにくいかもしれません。なぜなら、スクリプトのうち 1 つでも失敗したら、<command>dpkg</command> はインストールを中止するか (可能ならば) 進行中の削除を中止することでシステムを整合性のある状態に戻そうとするからです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>GOING FURTHER</emphasis> <command>dpkg</command>'s database"
msgstr "<emphasis>GOING FURTHER</emphasis> <command>dpkg</command> データベース"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>/var/lib/dpkg/</filename></primary>"
msgstr "<primary><filename>/var/lib/dpkg/</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>dpkg</primary><secondary>database</secondary>"
msgstr "<primary>dpkg</primary><secondary>データベース</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "All of the configuration scripts for installed packages are stored in the <filename>/var/lib/dpkg/info/</filename> directory, in the form of a file prefixed with the package's name. This directory also includes a file with the <filename>.list</filename> extension for each package, containing the list of files that belong to that package."
msgstr "インストール済みパッケージの設定スクリプトはすべて <filename>/var/lib/dpkg/info/</filename> ディレクトリに、ファイル名がパッケージ名から始まるファイルの形で保存されています。このディレクトリには、ファイル名がパッケージ名に <filename>.list</filename> 拡張子を付けたファイルが含まれています。このファイルの内容はパッケージに含まれるファイルのリストです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <filename>/var/lib/dpkg/status</filename> file contains a series of data blocks (in the format of the famous mail headers, RFC 2822) describing the status of each package. The information from the <filename>control</filename> file of the installed packages is also replicated there."
msgstr "<filename>/var/lib/dpkg/status</filename> ファイルは (有名なメールヘッダ、RFC 2822、の形で) 一連のデータブロックを含んでおり、各データブロックは各パッケージの状態に対応します。この情報はインストール済みのパッケージの <filename>control</filename> ファイルから複製されています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In general, the <filename>preinst</filename> script is executed prior to installation of the package, while the <filename>postinst</filename> follows it. Likewise, <filename>prerm</filename> is invoked before removal of a package and <filename>postrm</filename> afterwards. An update of a package is equivalent to removal of the previous version and installation of the new one. It is not possible to describe in detail all the possible scenarios here, but we will discuss the most common two: an installation/update and a removal."
msgstr "一般的に言って、<filename>preinst</filename> スクリプトはパッケージのインストール前に実行され、<filename>postinst</filename> はインストール後に実行されます。同様に、<filename>prerm</filename> はパッケージの削除前に実行され、<filename>postrm</filename> は削除後に実行されます。パッケージの更新とは、パッケージの古いバージョンを削除して新しいバージョンをインストールすることと等価です。ここで起こりうるすべてのシナリオを詳細に説明することは不可能なので、最も一般的なケースを 2 種類だけ挙げます。具体的に言えば、インストール/更新と削除について説明します。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "<emphasis>CAUTION</emphasis> Symbolic names of the scripts"
msgstr "<emphasis>CAUTION</emphasis> スクリプト名の表記規則"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The sequences described in this section call configuration scripts by specific names, such as <command>old-prerm</command> or <command>new-postinst</command>. They are, respectively, the <command>prerm</command> script contained in the old version of the package (installed before the update) and the <command>postinst</command> script contained in the new version (installed by the update)."
msgstr "この節の説明文では、<command>old-prerm</command> や <command>new-postinst</command> などの特定の名前を持つ設定スクリプトが登場します。<command>old-prerm</command> はパッケージの (更新の前にインストールされていた) 古いバージョンに含まれる <command>prerm</command> スクリプト、<command>new-postinst</command> は (更新によってインストールされる) 新しいバージョンに含まれる <command>postinst</command> スクリプトを指します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>TIP</emphasis> State diagrams"
msgstr "<emphasis>TIP</emphasis> 状態遷移図"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Manoj Srivastava made these diagrams explaining how the configuration scripts are called by <command>dpkg</command>. Similar diagrams have also been developed by the Debian Women project; they are a bit simpler to understand, but less complete. <ulink type=\"block\" url=\"https://people.debian.org/~srivasta/MaintainerScripts.html\" /> <ulink type=\"block\" url=\"https://wiki.debian.org/MaintainerScripts\" />"
msgstr "<command>dpkg</command> がどのように設定スクリプトを呼び出すかを説明する図が Manoj Srivastava によって作成されました。同様の図は Debian Women プロジェクトによっても作成されましたが、Debian Women プロジェクトの作った図は理解しやすいように少し単純化されており、Manoj Srivastava の作った図に比べると正確ではありません。<ulink type=\"block\" url=\"https://people.debian.org/~srivasta/MaintainerScripts.html\" /><ulink type=\"block\" url=\"https://wiki.debian.org/MaintainerScripts\" />"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Installation and Upgrade"
msgstr "パッケージのインストールとアップグレード"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><command>dpkg</command></primary><secondary>internal operation</secondary>"
msgstr "<primary><command>dpkg</command></primary><secondary>内部動作</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Here is what happens during an installation (or an update):"
msgstr "以下にパッケージのインストール中 (または更新中) に何が起きるかを説明します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "For an update, <command>dpkg</command> calls the <command>old-prerm upgrade <replaceable>new-version</replaceable></command>."
msgstr "更新する場合、<command>dpkg</command> は <command>old-prerm upgrade <replaceable>new-version</replaceable></command> を呼び出します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Still for an update, <command>dpkg</command> then executes <command>new-preinst upgrade <replaceable>old-version</replaceable></command>; for a first installation, it executes <command>new-preinst install</command>. It may add the old version in the last parameter, if the package has already been installed and removed since (but not purged, the configuration files having been retained)."
msgstr "更新する場合、引き続き <command>dpkg</command> は <command>new-preinst upgrade <replaceable>old-version</replaceable></command> を実行します。これに対して、初めてインストールする場合、<command>new-preinst install</command> を実行します。過去にもしパッケージがインストールされてさらに削除されていた場合 (完全削除されていない場合、古い設定ファイルがまだ残っている場合)、最後の引数に古いバージョンを追加します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The new package files are then unpacked. If a file already exists, it is replaced, but a backup copy is temporarily made."
msgstr "そして新しいパッケージのファイルが展開されます。あるファイルが既に存在した場合、そのファイルは置換されますが、一時的にバックアップコピーが作られます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "For an update, <command>dpkg</command> executes <command>old-postrm upgrade <replaceable>new-version</replaceable></command>."
msgstr "更新する場合、<command>dpkg</command> は <command>old-postrm upgrade <replaceable>new-version</replaceable></command> を実行します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> updates all of the internal data (file list, configuration scripts, etc.) and removes the backups of the replaced files. This is the point of no return: <command>dpkg</command> no longer has access to all of the elements necessary to return to the previous state."
msgstr "<command>dpkg</command> はすべての内部データ (ファイルリスト、設定スクリプトなど) を更新し、置換されたファイルのバックアップを削除します。これ以降はもう後戻りできません。つまり、前の状態に戻るために必要な情報がすべて失われたため、<command>dpkg</command> は状態を復元できません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> will update the configuration files, asking the user to decide if it is unable to automatically manage this task. The details of this procedure are discussed in <xref linkend=\"sect.conffiles\" />."
msgstr "<command>dpkg</command> は設定ファイルを更新します。自動的にこの作業を完了できない場合にはユーザにどうするか尋ねます。この作業の詳細は<xref linkend=\"sect.conffiles\" />をご覧ください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Finally, <command>dpkg</command> configures the package by executing <command>new-postinst configure <replaceable>last-version-configured</replaceable></command>."
msgstr "最後に、<command>dpkg</command> は <command>new-postinst configure <replaceable>last-version-configured</replaceable></command> を実行して、パッケージを設定します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Package Removal"
msgstr "パッケージの削除"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Here is what happens during a package removal:"
msgstr "以下にパッケージの削除中に何が起きるかを説明します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> calls <command>prerm remove</command>."
msgstr "<command>dpkg</command> は <command>prerm remove</command> を呼び出します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> removes all of the package's files, with the exception of the configuration files and configuration scripts."
msgstr "<command>dpkg</command> は設定ファイルと設定スクリプトを除くすべてのパッケージのファイルを削除します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> executes <command>postrm remove</command>. All of the configuration scripts, except <filename>postrm</filename>, are removed. If the user has not used the “purge” option, the process stops here."
msgstr "<command>dpkg</command> は <command>postrm remove</command> を実行します。すべての設定スクリプトは <filename>postrm</filename> を除いて削除されます。ユーザが「purge」オプションを指定しない限り、作業はここで終了します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "For a complete purge of the package (command issued with <command>dpkg --purge</command> or <command>dpkg -P</command>), the configuration files are also deleted, as well as a certain number of copies (<filename>*.dpkg-tmp</filename>, <filename>*.dpkg-old</filename>, <filename>*.dpkg-new</filename>) and temporary files; <command>dpkg</command> then executes <command>postrm purge</command>."
msgstr "パッケージを完全削除する (<command>dpkg --purge</command> または <command>dpkg -P</command> が実行された) 場合、設定ファイルおよびそのコピー (<filename>*.dpkg-tmp</filename>、<filename>*.dpkg-old</filename>、<filename>*.dpkg-new</filename>) と一時ファイルも削除されます。さらに <command>dpkg</command> は <command>postrm purge</command> を実行します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>VOCABULARY</emphasis> Purge, a complete removal"
msgstr "<emphasis>VOCABULARY</emphasis> Purge、完全削除"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>purge of a package</primary>"
msgstr "<primary>パッケージの完全削除</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "When a Debian package is removed, the configuration files are retained in order to facilitate possible re-installation. Likewise, the data generated by a daemon (such as the content of an LDAP server directory, or the content of a database for an SQL server) are usually retained."
msgstr "Debian パッケージが削除されても、パッケージの設定ファイルは後々の再インストールを楽にするために削除されません。同様に、デーモンが作成したデータ (LDAP サーバディレクトリの内容、SQL サーバのデータベースの内容など) も削除されません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "To remove all data associated with a package, it is necessary to “purge” the package with the command, <command>dpkg -P <replaceable>package</replaceable></command>, <command>apt-get remove --purge <replaceable>package</replaceable></command> or <command>aptitude purge <replaceable>package</replaceable></command>."
msgstr "パッケージに関連するすべてのデータを削除するには、<command>dpkg -P <replaceable>package</replaceable></command>、<command>apt-get remove --purge <replaceable>package</replaceable></command>、<command>aptitude purge <replaceable>package</replaceable></command> などのコマンドを使ってパッケージを「完全削除」する必要があります。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Given the definitive nature of such data removals, a purge should not be taken lightly."
msgstr "「完全削除」によって削除されるデータに含まれる内容を考慮すると、安易に完全削除を実行するべきではありません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>config</filename>, <command>debconf</command> script</primary>"
msgstr "<primary><filename>config</filename>、<command>debconf</command> スクリプト</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The four scripts detailed above are complemented by a <filename>config</filename> script, provided by packages using <command>debconf</command> to acquire information from the user for configuration. During installation, this script defines in detail the questions asked by <command>debconf</command>. The responses are recorded in the <command>debconf</command> database for future reference. The script is generally executed by <command>apt</command> prior to installing packages one by one in order to group all the questions and ask them all to the user at the beginning of the process. The pre- and post-installation scripts can then use this information to operate according to the user's wishes."
msgstr "上で詳細を述べた 4 つのスクリプトの実行を補助するのが <filename>config</filename> スクリプトです。<filename>config</filename> スクリプトはパッケージから提供され、<command>debconf</command> を用いて設定に必要な情報をユーザに入力させるために使われます。ユーザからの情報は <command>debconf</command> データベースに保存され、後から利用されます。このスクリプトは通常 <command>apt</command> によって各パッケージインストールの前に実行され、処理が始まるとすべての質問をまとめてユーザに尋ねます。インストール前後に実行されるスクリプトは、ユーザの希望を反映させるために、<command>debconf</command> データベースに保存された情報を利用します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>TOOL</emphasis> <command>debconf</command>"
msgstr "<emphasis>TOOL</emphasis> <command>debconf</command>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><command>debconf</command></primary>"
msgstr "<primary><command>debconf</command></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>debconf</command> was created to resolve a recurring problem in Debian. All Debian packages unable to function without a minimum of configuration used to ask questions with calls to the <command>echo</command> and <command>read</command> commands in <filename>postinst</filename> shell scripts (and other similar scripts). But this also means that during a large installation or update the user must stay with their computer to respond to various questions that may arise at any time. These manual interactions have now been almost entirely dispensed with, thanks to the <command>debconf</command> tool."
msgstr "<command>debconf</command> は Debian で繰り返し発生する問題を解決するために作られました。その昔、最低限の設定なしにはうまく動作しないすべての Debian パッケージは、最低限の設定を行うために <filename>postinst</filename> シェルスクリプト (と同様の別のスクリプト) の中で <command>echo</command> や <command>read</command> コマンドを呼び出すことにより、設定内容について質問していました。しかしこの方法では、ユーザは長時間かかるインストールや更新の最中、いつあるかわからないさまざまな質問に答えるために、コンピュータの前に居続けなければいけませんでした。<command>debconf</command> ツールのおかげで、今やほとんどの場合、このような手動設定法を採る必要はなくなりました。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>debconf</command> has many interesting features: it requires the developer to specify user interaction; it allows localization of all the strings displayed to users (all translations are stored in the <filename>templates</filename> file describing the interactions); it has different frontends to display the questions to the user (text mode, graphical mode, non-interactive); and it allows creation of a central database of responses to share the same configuration with several computers... but the most important is that it is now possible to present all of the questions in a row to the user, prior to starting a long installation or update process. The user can go about their business while the system handles the installation on its own, without having to stay there staring at the screen waiting for questions."
msgstr "<command>debconf</command> には多くの興味深い機能があります。具体的に言えば <command>debconf</command> を使うことで開発者は、ユーザに入力させる内容を規定したり、ユーザに向けて表示されるすべての文字列を地域化したり (すべての翻訳は入力内容を説明している <filename>templates</filename> ファイルに保存されます)、ユーザに質問を表示するためのさまざまなフロントエンド (テキストモード、グラフィカルモード、非対話型モード) に自前で対応させる必要がなくなり、複数のコンピュータで同じ設定を共有するためにユーザが入力した内容の中央データベースを作成したり、することが可能になります。しかし <command>debconf</command> の最も重要な機能はユーザに対するすべての質問が長時間かかるインストールや更新作業の前に行われる点です。ユーザはシステムがインストールを行っている間に自分の仕事をできます。質問に答えるために画面の前に居続ける必要はありません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Checksums, List of Configuration Files"
msgstr "チェックサム、設定ファイルのリスト"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>md5sums</filename></primary>"
msgstr "<primary><filename>md5sums</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>conffiles</filename></primary>"
msgstr "<primary><filename>conffiles</filename></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>checksums</primary>"
msgstr "<primary>チェックサム</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>files</primary><secondary>configuration files</secondary>"
msgstr "<primary>ファイル</primary><secondary>設定ファイル</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>configuration</primary><secondary>files</secondary>"
msgstr "<primary>設定</primary><secondary>ファイル</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In addition to the maintainer scripts and control data already mentioned in the previous sections, the <filename>control.tar.gz</filename> archive of a Debian package may contain other interesting files. The first, <filename>md5sums</filename>, contains the MD5 checksums for all of the package's files. Its main advantage is that it allows <command>dpkg --verify</command> (which we will study in <xref linkend=\"sect.dpkg-verify\" />) to check if these files have been modified since their installation. Note that when this file doesn't exist, <command>dpkg</command> will generate it dynamically at installation time (and store it in the dpkg database just like other control files)."
msgstr "前の節で既に説明したメンテナスクリプトと管理情報に加えて、Debian パッケージの <filename>control.tar.gz</filename> アーカイブは興味深いファイルを含んでいる場合があります。1 つ目は <filename>md5sums</filename> です。<filename>md5sums</filename> にはパッケージに含まれる全ファイルの MD5 チェックサムが列挙されています。<filename>md5sums</filename> のおかげで <command>dpkg --verify</command> はインストール以降ファイルが変更されたか否かを判断できるようになります (詳しくは<xref linkend=\"sect.dpkg-verify\" />を参照してください)。パッケージが <filename>md5sums</filename> を提供しない場合、<command>dpkg</command> がインストール時に動的に <filename>md5sums</filename> を生成します (そして他の管理情報ファイルと同様に dpkg データベースに内容を保存します)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<filename>conffiles</filename> lists package files that must be handled as configuration files. Configuration files can be modified by the administrator, and <command>dpkg</command> will try to preserve those changes during a package update."
msgstr "<filename>conffiles</filename> では、設定ファイルとして取り扱われるべきパッケージファイルが指定されています。管理者は設定ファイルを変更でき、<command>dpkg</command> はパッケージの更新中に設定ファイルの変更を保存しようとします。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "In effect, in this situation, <command>dpkg</command> behaves as intelligently as possible: if the standard configuration file has not changed between the two versions, it does nothing. If, however, the file has changed, it will try to update this file. Two cases are possible: either the administrator has not touched this configuration file, in which case <command>dpkg</command> automatically installs the new version; or the file has been modified, in which case <command>dpkg</command> asks the administrator which version they wish to use (the old one with modifications, or the new one provided with the package). To assist in making this decision, <command>dpkg</command> offers to display a “<command>diff</command>” that shows the difference between the two versions. If the user chooses to retain the old version, the new one will be stored in the same location in a file with the <filename>.dpkg-dist</filename> suffix. If the user chooses the new version, the old one is retained in a file with the <filename>.dpkg-old</filename> suffix. Another available action consists of momentarily interrupting <command>dpkg</command> to edit the file and attempt to re-instate the relevant modifications (previously identified with <command>diff</command>)."
msgstr "実際のところ、システムに現存する設定ファイルをパッケージから提供された設定ファイルで更新する際に <command>dpkg</command> はできるだけ賢明に振る舞います。以下に <command>dpkg</command> のデフォルトの設定ファイル更新処理規則を述べます。パッケージの更新前後でパッケージから提供される標準設定ファイルの内容が同じ場合、<command>dpkg</command> は何もしません。しかしながら、パッケージの更新前後でパッケージから提供される標準設定ファイルの内容が違う場合、<command>dpkg</command> はシステムに現存する設定ファイルを更新しようとします。ここでさらに 2 つの場合が考えられます。システムに現存する設定ファイルと古いバージョンのパッケージから提供される標準設定ファイルの内容が同じ場合、<command>dpkg</command> は自動的に新しいパッケージから提供される標準設定ファイルをパッケージ更新完了後の設定ファイルとして採用します。一方で、システムに現存する設定ファイルと古いバージョンのパッケージから提供される標準設定ファイルの内容が違う場合、<command>dpkg</command> は管理者に対してシステムに現存する設定ファイルまたは新しいバージョンのパッケージから提供される標準設定ファイルのどちらを更新後の設定ファイルとして採用するかを尋ねます。この判断を手助けするために、<command>dpkg</command> は「<command>diff</command>」を使って 2 つの設定ファイルの内容の違いを表示します。管理者が現存する設定ファイルを選んだ場合、新しいバージョンのパッケージから提供される標準設定ファイルは同じ場所にファイル名の末尾に <filename>.dpkg-dist</filename> を追加して保存されます。管理者が新しいバージョンのパッケージから提供される標準設定ファイルを選んだ場合、現存する設定ファイルは同じ場所にファイル名の末尾に <filename>.dpkg-old</filename> を追加して保存されます。この段階では、一時的に <command>dpkg</command> の処理を中断してファイルを編集したり、もう一度バージョン間の違いを表示したり (先と同様に <command>diff</command> コマンドを実行する) することも可能です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>GOING FURTHER</emphasis> Avoiding the configuration file questions"
msgstr "<emphasis>GOING FURTHER</emphasis> 設定ファイルの更新に関連する質問を回避する"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "<command>dpkg</command> handles configuration file updates, but, while doing so, regularly interrupts its work to ask for input from the administrator. This makes it less than enjoyable for those who wish to run updates in a non-interactive manner. This is why this program offers options that allow the system to respond automatically according to the same logic: <command>--force-confold</command> retains the old version of the file; <command>--force-confnew</command> will use the new version of the file (these choices are respected, even if the file has not been changed by the administrator, which only rarely has the desired effect). Adding the <command>--force-confdef</command> option tells <command>dpkg</command> to decide by itself when possible (in other words, when the original configuration file has not been touched), and only uses <command>--force-confnew</command> or <command>--force-confold</command> for other cases."
msgstr "<command>dpkg</command> は設定ファイルの更新を担当しますが、更新中に管理者からの入力を要求するため、更新作業は定期的に中断されます。この状況は非対話的に更新作業を行いたいと思う管理者にとって都合がよいとは言えません。そのため、<command>dpkg</command> には設定ファイル更新処理規則を指定して自動的に処理を進めるオプションが用意されています。具体的に言えば、<command>--force-confold</command> を使った場合はいかなる状況でも常にシステムに現存する設定ファイルがパッケージ更新完了後の設定ファイルとして採用され、<command>--force-confnew</command> を使った場合はいかなる状況でも常に新しいバージョンのパッケージから提供される標準設定ファイルが採用されます (これらのオプションを単独で使った場合、システムに現存する設定ファイルおよび更新前後のバージョンのパッケージから提供される標準設定ファイルの互いの内容の違いは一切考慮されないので、期待通りの結果を得られないことが多いです)。上記オプションに加えて <command>--force-confdef</command> オプションを使うと、<command>dpkg</command> は設定ファイル更新処理時に管理者の判断を仰ぐ必要が生じた場合に限り (言い換えれば、システムに現存する設定ファイルの内容が更新前後のどちらのバージョンのパッケージから提供される標準設定ファイルの内容とも違う場合に限り) 管理者からの入力を待つ代わりに <command>--force-confnew</command> または <command>--force-confold</command> に従って設定ファイルを更新し、それ以外の場合はデフォルトの設定ファイル更新処理規則に従って設定ファイルを更新するようになります。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "These options apply to <command>dpkg</command>, but most of the time the administrator will work directly with the <command>aptitude</command> or <command>apt-get</command> programs. It is, thus, necessary to know the syntax used to indicate the options to pass to the <command>dpkg</command> command (their command line interfaces are very similar)."
msgstr "<command>--force-confold</command>、<command>--force-confnew</command>、<command>--force-confdef</command> は <command>dpkg</command> のオプションです。しかしながらほとんどの場合、管理者は <command>aptitude</command> または <command>apt-get</command> プログラムを使って作業を行います。そのため、<command>aptitude</command> または <command>apt-get</command> プログラムから <command>dpkg</command> コマンドにオプションを渡すための構文を知らなければいけません (<command>aptitude</command> および <command>apt-get</command> プログラムのコマンドラインインターフェースはとてもよく似ています)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>apt -o DPkg::options::=\"--force-confdef\" -o DPkg::options::=\"--force-confold\" full-upgrade</userinput>"
msgstr ""
"\n"
"<computeroutput># </computeroutput><userinput>apt -o DPkg::options::=\"--force-confdef\" -o DPkg::options::=\"--force-confold\" full-upgrade</userinput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "These options can be stored directly in <command>apt</command>'s configuration. To do so, simply write the following line in the <filename>/etc/apt/apt.conf.d/local</filename> file:"
msgstr "<command>dpkg</command> に渡すオプションを <command>apt</command> の設定に直接保存しておくことも可能です。これを行うには、<filename>/etc/apt/apt.conf.d/local</filename> ファイルに以下の行を追加してください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"DPkg::options { \"--force-confdef\"; \"--force-confold\"; }"
msgstr ""
"\n"
"DPkg::options { \"--force-confdef\"; \"--force-confold\"; }"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Including this option in the configuration file means that it will also be used in a graphical interface such as <command>aptitude</command>."
msgstr "<command>dpkg</command> に渡すオプションを <command>apt</command> の設定ファイルに保存した場合、<command>aptitude</command> のようなグラフィカルインターフェースでもここで指定したオプションが使われるようになります。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>GOING FURTHER</emphasis> Force dpkg to ask configuration file questions"
msgstr "<emphasis>GOING FURTHER</emphasis> 設定ファイルの更新に関連する質問を強制する"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid "The <command>--force-confask</command> option requires <command>dpkg</command> to display the questions about the configuration files, even in cases where they would not normally be necessary. Thus, when reinstalling a package with this option, <command>dpkg</command> will ask the questions again for all of the configuration files modified by the administrator. This is very convenient, especially for reinstalling the original configuration file if it has been deleted and no other copy is available: a normal re-installation won't work, because <command>dpkg</command> considers removal as a form of legitimate modification, and, thus, doesn't install the desired configuration file."
msgstr "<command>--force-confask</command> オプションを使うと、<command>dpkg</command> は通常は質問の必要がない場合でも設定ファイルの更新に関する質問を表示します。このため、<command>--force-confask</command> を付けてパッケージを再インストールすると、<command>dpkg</command> は管理者が修正したすべての設定ファイルの更新に関してもう一度質問します。特にこれはインストール済みパッケージの設定ファイルが削除され、コピーも残っていない状態でパッケージから提供される設定ファイルを再インストールしたい場合にとても便利です。つまり、通常の再インストールでは駄目な場合にこれを使います。なぜなら、<command>dpkg</command> は設定ファイルの削除を意味のある変更の一種とみなしており、<command>--force-confask</command> が使われていなければシステムに現存する設定ファイルの状態 (削除状態) を維持してパッケージから提供される設定ファイルをインストールしないからです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Structure of a Source Package"
msgstr "ソースパッケージの構造"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>source package</secondary>"
msgstr "<primary>パッケージ</primary><secondary>ソースパッケージ</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>source</primary><secondary>package</secondary>"
msgstr "<primary>ソース</primary><secondary>パッケージ</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Format"
msgstr "フォーマット"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>DSC file</primary>"
msgstr "<primary>DSC ファイル</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>diff.gz</filename> file</primary>"
msgstr "<primary><filename>diff.gz</filename> ファイル</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>debian.tar.gz</filename> file</primary>"
msgstr "<primary><filename>debian.tar.gz</filename> ファイル</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><filename>orig.tar.gz</filename> file</primary>"
msgstr "<primary><filename>orig.tar.gz</filename> ファイル</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "A source package is usually comprised of three files, a <filename>.dsc</filename>, a <filename>.orig.tar.gz</filename>, and a <filename>.debian.tar.gz</filename> (or <filename>.diff.gz</filename>). They allow creation of binary packages (<filename>.deb</filename> files described above) from the source code files of the program, which are written in a programming language."
msgstr "ソースパッケージは通常 <filename>.dsc</filename>、<filename>.orig.tar.gz</filename>、<filename>.debian.tar.gz</filename> (または <filename>.diff.gz</filename>) の 3 つのファイルで構成されています。これらのファイルを使って、プログラミング言語で書かれたプログラムのソースコードファイルからバイナリパッケージ (前に説明した <filename>.deb</filename> ファイル) を作成します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <filename>.dsc</filename> (Debian Source Control) file is a short text file containing an RFC 2822 header (just like the <filename>control</filename> file studied in <xref linkend=\"sect.control\" />) which describes the source package and indicates which other files are part thereof. It is signed by its maintainer, which guarantees authenticity. See <xref linkend=\"sect.package-authentication\" /> for further details on this subject."
msgstr "<filename>.dsc</filename> (Debian Source Control) ファイルは RFC 2822 ヘッダを含む短いテキストファイルで (<xref linkend=\"sect.control\" />で述べた <filename>control</filename> ファイルと似ています)、ソースパッケージを説明し、他のどのファイルがパッケージの一部であるかを表明しています。メンテナは <filename>.dsc</filename> ファイルに署名することで、信頼性を保証しています。より詳しい情報は<xref linkend=\"sect.package-authentication\" />をご覧ください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "A <filename>.dsc</filename> file"
msgstr "<filename>.dsc</filename> ファイルの一例"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"-----BEGIN PGP SIGNED MESSAGE-----\n"
"Hash: SHA256\n"
"\n"
"Format: 3.0 (quilt)\n"
"Source: zim\n"
"Binary: zim\n"
"Architecture: all\n"
"Version: 0.62-3\n"
"Maintainer: Emfox Zhou &lt;emfox@debian.org&gt;\n"
"Uploaders: Raphaël Hertzog &lt;hertzog@debian.org&gt;\n"
"Homepage: http://zim-wiki.org\n"
"Standards-Version: 3.9.6\n"
"Vcs-Browser: http://anonscm.debian.org/gitweb/?p=collab-maint/zim.git\n"
"Vcs-Git: git://anonscm.debian.org/collab-maint/zim.git\n"
"Build-Depends: debhelper (&gt;= 9), xdg-utils, python (&gt;= 2.6.6-3~), libgtk2.0-0 (&gt;= 2.6), python-gtk2, python-xdg\n"
"Package-List:\n"
" zim deb x11 optional arch=all\n"
"Checksums-Sha1:\n"
" ad8de170826682323c10195b65b9f1243fd75637 1772246 zim_0.62.orig.tar.gz\n"
" a4f70d6f7fb404022c9cc4870a4e62ea3ca08388 14768 zim_0.62-3.debian.tar.xz\n"
"Checksums-Sha256:\n"
" 19d62aebd2c1a92d84d80720c6c1dcdb779c39a2120468fed01b7f252511bdc2 1772246 zim_0.62.orig.tar.gz\n"
" fc2e827e83897d5e33f152f124802c46c3c01c5158b75a8275a27833f1f6f1de 14768 zim_0.62-3.debian.tar.xz\n"
"Files:\n"
" 43419efba07f7086168442e3d698287a 1772246 zim_0.62.orig.tar.gz\n"
" 725a69663a6c2961f07673ae541298e4 14768 zim_0.62-3.debian.tar.xz\n"
"\n"
"-----BEGIN PGP SIGNATURE-----\n"
"Version: GnuPG v2\n"
"Comment: Signed by Raphael Hertzog\n"
"\n"
"iQEcBAEBCAAGBQJUR2jqAAoJEAOIHavrwpq5WFcH/RsdzCHc1oXXxHitU23hEqMj\n"
"T6ok29M1UFDJDowMXW75jQ1nT4WPUtvEGygkCHeoO/PvjEvB0sjU8GQlX+N9ddSB\n"
"aHfqfAYmVhADNGxrXQT5inZXUa8qGeeq2Sqf6YcWtsnuD56lDbvxkyf/XYopoIEl\n"
"oltfl05z/AI+vYsW482YrCz0fxNAKAvkyuPhDebYI8jnKWeAANoqmKpsNc/HYyvT\n"
"+ZiA5o57OiGdOKT6XGy3/FiF3dkHiRY8lXW7xdr1BbIgulwl9UmiUNwuxwOYbQO7\n"
"edtjiTJqOaFUA0x1zB/XGv5tHr1MjP8naT+kfVoVHTOox51CDbeu5D3DZY4imcY=\n"
"=Wtoa\n"
"-----END PGP SIGNATURE-----"
msgstr ""
"\n"
"-----BEGIN PGP SIGNED MESSAGE-----\n"
"Hash: SHA256\n"
"\n"
"Format: 3.0 (quilt)\n"
"Source: zim\n"
"Binary: zim\n"
"Architecture: all\n"
"Version: 0.62-3\n"
"Maintainer: Emfox Zhou &lt;emfox@debian.org&gt;\n"
"Uploaders: Raphaël Hertzog &lt;hertzog@debian.org&gt;\n"
"Homepage: http://zim-wiki.org\n"
"Standards-Version: 3.9.6\n"
"Vcs-Browser: http://anonscm.debian.org/gitweb/?p=collab-maint/zim.git\n"
"Vcs-Git: git://anonscm.debian.org/collab-maint/zim.git\n"
"Build-Depends: debhelper (&gt;= 9), xdg-utils, python (&gt;= 2.6.6-3~), libgtk2.0-0 (&gt;= 2.6), python-gtk2, python-xdg\n"
"Package-List:\n"
" zim deb x11 optional arch=all\n"
"Checksums-Sha1:\n"
" ad8de170826682323c10195b65b9f1243fd75637 1772246 zim_0.62.orig.tar.gz\n"
" a4f70d6f7fb404022c9cc4870a4e62ea3ca08388 14768 zim_0.62-3.debian.tar.xz\n"
"Checksums-Sha256:\n"
" 19d62aebd2c1a92d84d80720c6c1dcdb779c39a2120468fed01b7f252511bdc2 1772246 zim_0.62.orig.tar.gz\n"
" fc2e827e83897d5e33f152f124802c46c3c01c5158b75a8275a27833f1f6f1de 14768 zim_0.62-3.debian.tar.xz\n"
"Files:\n"
" 43419efba07f7086168442e3d698287a 1772246 zim_0.62.orig.tar.gz\n"
" 725a69663a6c2961f07673ae541298e4 14768 zim_0.62-3.debian.tar.xz\n"
"\n"
"-----BEGIN PGP SIGNATURE-----\n"
"Version: GnuPG v2\n"
"Comment: Signed by Raphael Hertzog\n"
"\n"
"iQEcBAEBCAAGBQJUR2jqAAoJEAOIHavrwpq5WFcH/RsdzCHc1oXXxHitU23hEqMj\n"
"T6ok29M1UFDJDowMXW75jQ1nT4WPUtvEGygkCHeoO/PvjEvB0sjU8GQlX+N9ddSB\n"
"aHfqfAYmVhADNGxrXQT5inZXUa8qGeeq2Sqf6YcWtsnuD56lDbvxkyf/XYopoIEl\n"
"oltfl05z/AI+vYsW482YrCz0fxNAKAvkyuPhDebYI8jnKWeAANoqmKpsNc/HYyvT\n"
"+ZiA5o57OiGdOKT6XGy3/FiF3dkHiRY8lXW7xdr1BbIgulwl9UmiUNwuxwOYbQO7\n"
"edtjiTJqOaFUA0x1zB/XGv5tHr1MjP8naT+kfVoVHTOox51CDbeu5D3DZY4imcY=\n"
"=Wtoa\n"
"-----END PGP SIGNATURE-----"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><literal>Build-Depends</literal>, header field</primary>"
msgstr "<primary><literal>Build-Depends</literal>、ヘッダフィールド</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Note that the source package also has dependencies (<literal>Build-Depends</literal>) completely distinct from those of binary packages, since they indicate tools required to compile the software in question and construct its binary package."
msgstr "バイナリパッケージと同様にソースパッケージにも依存関係 (<literal>Build-Depends</literal>) がある点に注意してください。依存関係の意味は、バイナリパッケージのそれとは全く異なり、このソフトウェアをコンパイルしてバイナリパッケージを作るのに必要なツールを表しています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>CAUTION</emphasis> Distinct namespaces"
msgstr "<emphasis>CAUTION</emphasis> 別の名前空間"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "It is important to note here that there is no required correspondence between the name of the source package and that of the binary package(s) that it generates. It is easy enough to understand if you know that each source package may generate several binary packages. This is why the <filename>.dsc</filename> file has the <literal>Source</literal> and <literal>Binary</literal> fields to explicitly name the source package and store the list of binary packages that it generates."
msgstr "ここで、ソースパッケージの名前とそのソースパッケージから生成したバイナリパッケージの名前を一致させる必要がないという点によく注意してください。単一のソースパッケージから複数のバイナリパッケージが生成されていることを知ったら、これはすぐに理解できるでしょう。このため <filename>.dsc</filename> ファイルにはソースパッケージ名を明確に指定するための <literal>Source</literal> フィールドおよび生成されるバイナリパッケージ名のリストを指定するための <literal>Binary</literal> フィールドが含まれています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>CULTURE</emphasis> Why divide into several packages"
msgstr "<emphasis>CULTURE</emphasis> 複数のパッケージに分割する理由"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Quite frequently, a source package (for a given software) can generate several binary packages. The split is justified by the possibility to use (parts of) the software in different contexts. Consider a shared library, it may be installed to make an application work (for example, <emphasis role=\"pkg\">libc6</emphasis>), or it can be installed to develop a new program (<emphasis role=\"pkg\">libc6-dev</emphasis> will then be the correct package). We find the same logic for client/server services where we want to install the server part on one machine and the client part on others (this is the case, for example, of <emphasis role=\"pkg\">openssh-server</emphasis> and <emphasis role=\"pkg\">openssh-client</emphasis>)."
msgstr "極めて多くの場合において、単独のソフトウェアのソースパッケージは複数のバイナリパッケージを生成できます。しかしながら、この方針が正当化されるのはソースパッケージから生成されるそれぞれのソフトウェアが異なる目的で使われる可能性がある場合だけです。共有ライブラリについて考えてみましょう。共有ライブラリはアプリケーションを動作させるためにインストールされる場合もあれば (たとえば <emphasis role=\"pkg\">libc6</emphasis>)、新しいプログラムを開発するためにインストールされる場合もあります (開発する場合は <emphasis role=\"pkg\">libc6-dev</emphasis> が適切です)。クライアント/サーバサービスに対しても同じことが言えます。あるマシンにはサーバ部分だけを、別のマシンにはクライアント部分だけをインストールしたいと考えるのは真っ当な考え方です (サーバマシンに <emphasis role=\"pkg\">openssh-server</emphasis> を、クライアントマシンに <emphasis role=\"pkg\">openssh-client</emphasis> をインストールするような場合がこれに該当します)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Just as frequently, the documentation is provided in a dedicated package: the user may install it independently from the software, and may at any time choose to remove it to save disk space. Additionally, this also saves disk space on the Debian mirrors, since the documentation package will be shared amongst all of the architectures (instead of having the documentation duplicated in the packages for each architecture)."
msgstr "同じくらいの頻度で、ソースパッケージの文書部分は専用パッケージとして提供されている場合が多いです。なぜなら、ユーザは文書とソフトウェアを別々にインストールしたいかもしれませんし、ディスク領域を節約するために文書を削除したいと考えるかもしれないからです。加えて、こうすることで Debian アーカイブミラーのディスク領域も節約できます。なぜなら、文書パッケージはアーキテクチャに依存しないのですべてのアーキテクチャで共有できるからです (各アーキテクチャ向けに用意されたバイナリパッケージに文書を含めるとアーキテクチャの数だけ文書を複製したことになり、余分にディスク領域を消費します)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>PERSPECTIVE</emphasis> Different source package formats"
msgstr "<emphasis>PERSPECTIVE</emphasis> ソースパッケージのさまざまなフォーマット"

# Checked-By: Ryuunosuke Ayanokouzi;
# Ref: https://raphaelhertzog.com/2010/10/21/the-secret-plan-behind-the-3-0-quilt-debian-source-package-format/;
# Ref: man 1 dpkg-source;
msgid "Originally there was only one source package format. This is the <literal>1.0</literal> format, which associates an <filename>.orig.tar.gz</filename> archive to a <filename>.diff.gz</filename> “debianization” patch (there is also a variant, consisting of a single <filename>.tar.gz</filename> archive, which is automatically used if no <filename>.orig.tar.gz</filename> is available)."
msgstr "もともとソースパッケージのフォーマットは 1 種類だけでした。これが <literal>1.0</literal> フォーマットです。<literal>1.0</literal> フォーマットでは <filename>.orig.tar.gz</filename> アーカイブに <filename>.diff.gz</filename>「debianization」パッチを当てるようにしていました (<literal>1.0</literal> フォーマットには亜種があります。亜種には <filename>.tar.gz</filename> アーカイブだけが含まれており、<filename>.orig.tar.gz</filename> がなければ自動的に <filename>.tar.gz</filename> アーカイブが使われます)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Since Debian <emphasis role=\"distribution\">Squeeze</emphasis>, Debian developers have the option to use new formats that correct many problems of the historical format. Format <literal>3.0 (quilt)</literal> can combine multiple upstream archives in the same source package: in addition to the usual <filename>.orig.tar.gz</filename>, supplementary <filename>.orig-<replaceable>component</replaceable>.tar.gz</filename> archives can be included. This is useful with software that is distributed in several upstream components but for which a single source package is desired. These archives can also be compressed with <command>bzip2</command> or <command>xz</command> rather than <command>gzip</command>, which saves disk space and network resources. Finally, the monolithic patch, <filename>.diff.gz</filename> is replaced by a <filename>.debian.tar.gz</filename> archive containing the compiling instructions and a set of upstream patches contributed by the package maintainer. These last are recorded in a format compatible with <command>quilt</command> — a tool that facilitates the management of a series of patches."
msgstr "Debian <emphasis role=\"distribution\">Squeeze</emphasis> 以降、Debian 開発者は新しいフォーマットを使うことができるようになりました。新しいフォーマットは昔使われていたフォーマットにあった多くの問題を修正しています。フォーマット <literal>3.0 (quilt)</literal> は複数の上流開発アーカイブを同じソースパッケージの中に混ぜ合わせることが可能になりました。つまり、いつもの <filename>.orig.tar.gz</filename> に加えて、補足用の <filename>.orig-<replaceable>component</replaceable>.tar.gz</filename> アーカイブを含めることが可能です。これは単独のソースパッケージが望まれるソフトウェアが複数の上流開発元によって配布されている場合に役に立ちます。これらのアーカイブは <command>gzip</command> の代わりに <command>bzip2</command> または <command>xz</command> を使って圧縮できます。これらの圧縮方式はディスク領域とネットワークリソースを節約できます。最後に、単独のパッチ <filename>.diff.gz</filename> はコンパイル方法、パッケージメンテナが作った上流開発に対するパッチ群が収められた <filename>.debian.tar.gz</filename> アーカイブに置き換えられました。パッチはパッチ群を楽に管理するツール <command>quilt</command> と互換性のあるフォーマットで記録されます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <filename>.orig.tar.gz</filename> file is an archive containing the source code as provided by the original developer. Debian package maintainers are asked to not modify this archive in order to be able to easily check the origin and integrity of the file (by simple comparison with a checksum) and to respect the wishes of some authors."
msgstr "<filename>.orig.tar.gz</filename> ファイルはオリジナルの開発者が提供するソースコードと同じ内容を含むアーカイブです。Debian パッケージメンテナはファイルの出所と整合性を簡単に (チェックサムによる単純な比較で) 確認できるようにするために、そして一部の作者からの希望を尊重するためにアーカイブを変更しないことを要求されます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The <filename>.debian.tar.gz</filename> contains all of the modifications made by the Debian maintainer, especially the addition of a <filename>debian</filename> directory containing the instructions to execute to construct a Debian package."
msgstr "<filename>.debian.tar.gz</filename> には Debian メンテナが行ったすべての変更、特に Debian パッケージを作成する際に実行される命令を収めた <filename>debian</filename> ディレクトリの追加、が含まれています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>TOOL</emphasis> Decompressing a source package"
msgstr "<emphasis>TOOL</emphasis> ソースパッケージの展開"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><command>dpkg-source</command></primary>"
msgstr "<primary><command>dpkg-source</command></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>decompressing, source package</primary>"
msgstr "<primary>展開、ソースパッケージ</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>uncompressing, source package</primary>"
msgstr "<primary>展開、ソースパッケージ</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>unpacking</primary><secondary>source package</secondary>"
msgstr "<primary>展開</primary><secondary>ソースパッケージの</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "If you have a source package, you can use the <command>dpkg-source</command> command (from the <emphasis role=\"pkg\">dpkg-dev</emphasis> package) to decompress it:"
msgstr "ソースパッケージを持っていれば、<command>dpkg-source</command> コマンド (<emphasis role=\"pkg\">dpkg-dev</emphasis> パッケージに含まれます) を使ってソースパッケージを展開できます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<computeroutput>$ </computeroutput><userinput>dpkg-source -x package_0.7-1.dsc</userinput>"
msgstr "<computeroutput>$ </computeroutput><userinput>dpkg-source -x package_0.7-1.dsc</userinput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "You can also use <command>apt-get</command> to download a source package and unpack it right away. It requires that the appropriate <literal>deb-src</literal> lines be present in the <filename>/etc/apt/sources.list</filename> file, however (for further details, see <xref linkend=\"sect.apt-sources.list\" />). These are used to list the “sources” of source packages (meaning the servers on which a group of source packages are hosted)."
msgstr "<command>apt-get</command> を使えば、ソースパッケージをダウンロードしてすぐに展開することも可能です。しかしながら、これを行うには、適切な <literal>deb-src</literal> 行が <filename>/etc/apt/sources.list</filename> ファイルに書かれていなければいけません (より詳しい情報は<xref linkend=\"sect.apt-sources.list\" />を参照してください)。<literal>deb-src</literal> 行はソースパッケージの「ソース」(ソースパッケージがホストされているサーバ群) を表すために使われます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<computeroutput>$ </computeroutput><userinput>apt-get source <replaceable>package</replaceable></userinput>"
msgstr "<computeroutput>$ </computeroutput><userinput>apt-get source <replaceable>package</replaceable></userinput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Usage within Debian"
msgstr "Debian 内での使われ方"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The source package is the foundation of everything in Debian. All Debian packages come from a source package, and each modification in a Debian package is the consequence of a modification made to the source package. The Debian maintainers work with the source package, knowing, however, the consequences of their actions on the binary packages. The fruits of their labors are thus found in the source packages available from Debian: you can easily go back to them and everything stems from them."
msgstr "ソースパッケージは Debian のすべての基礎です。すべての Debian パッケージはソースパッケージから作られ、Debian パッケージに対する変更はソースパッケージを変更することで行われます。Debian メンテナはソースパッケージに対する作業の成果がどのようにバイナリパッケージに反映されるかを理解しているため、ソースパッケージに対して作業を行っています。そんなわけで、Debian メンテナの労苦の成果は Debian から入手できるソースパッケージの中にあります。すなわち、簡単にソースパッケージに戻り、すべてをソースパッケージから生成することも可能です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "When a new version of a package (source package and one or more binary packages) arrives on the Debian server, the source package is the most important. Indeed, it will then be used by a network of machines of different architectures for compilation on the various architectures supported by Debian. The fact that the developer also sends one or more binary packages for a given architecture (usually i386 or amd64) is relatively unimportant, since these could just as well have been automatically generated."
msgstr "パッケージの新バージョン (ソースパッケージと 1 つ以上のバイナリパッケージ) が Debian サーバにアップロードされた際に、最も重要なのがソースパッケージです。そして、異なるアーキテクチャのマシンのネットワークがソースパッケージを使い、Debian がサポートするさまざまなアーキテクチャ上でコンパイルを行います。開発者はソースパッケージだけでなく適当なアーキテクチャ (通常 i386 または amd64) 向けの 1 つ以上のバイナリパッケージを送信しますが、こちらはそれほど重要ではありません。なぜなら、送信されたバイナリパッケージと同じアーキテクチャ用のバイナリパッケージはビルドマシンによって自動的に生成されるからです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Manipulating Packages with <command>dpkg</command>"
msgstr "<command>dpkg</command> を用いたパッケージの操作"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> is the base command for handling Debian packages on the system. If you have <filename>.deb</filename> packages, it is <command>dpkg</command> that allows installation or analysis of their contents. But this program only has a partial view of the Debian universe: it knows what is installed on the system, and whatever it is given on the command line, but knows nothing of the other available packages. As such, it will fail if a dependency is not met. Tools such as <command>apt</command>, on the contrary, will create a list of dependencies to install everything as automatically as possible."
msgstr "<command>dpkg</command> はシステムの Debian パッケージを操作する基礎的なコマンドです。<filename>.deb</filename> パッケージがあれば、<command>dpkg</command> でパッケージ内容をインストールしたり解析したりすることが可能です。しかし <command>dpkg</command> は Debian 世界のある一部分だけを見ているに過ぎません。つまり、<command>dpkg</command> は、システムにインストール済みのパッケージとコマンドラインで与えられたパッケージについては理解していますが、他の利用できるパッケージについては理解していません。このため、<command>dpkg</command> は依存関係が満足されていなければパッケージを操作できません。これに対して、<command>apt</command> などのツールは、可能な限り自動的にすべてをインストールするために、依存関係のリストを作成します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>NOTE</emphasis> <command>dpkg</command> or <command>apt</command>?"
msgstr "<emphasis>NOTE</emphasis> <command>dpkg</command> か <command>apt</command> か?"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> should be seen as a system tool (backend), and <command>apt</command> as a tool closer to the user, which overcomes the limitations of the former. These tools work together, each one with its particularities, suited to specific tasks."
msgstr "<command>dpkg</command> はシステムツール (バックエンド)、<command>apt</command> はユーザに近いツールとみなすべきです。<command>apt</command> は <command>dpkg</command> の制限を克服しています。これらのツールは互いに協力して作業を行います。両者は互いに異なる得意分野を持っており、それぞれが特定の作業を担当しています。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Installing Packages"
msgstr "パッケージのインストール"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>installation</primary><secondary>package installation</secondary>"
msgstr "<primary>インストール</primary><secondary>パッケージのインストール</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>installation</secondary>"
msgstr "<primary>パッケージ</primary><secondary>インストール</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> is, above all, the tool for installing an already available Debian package (because it does not download anything). To do this, we use its <literal>-i</literal> or <literal>--install</literal> option."
msgstr "<command>dpkg</command> は既に利用できる Debian パッケージのインストールを担当しているツールです (ダウンロード機能を持っていません)。<command>dpkg</command> を使ってパッケージをインストールするには、<literal>-i</literal> または <literal>--install</literal> オプションを使ってください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Installation of a package with <command>dpkg</command>"
msgstr "<command>dpkg</command> を使ったパッケージのインストール"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>dpkg -i man-db_2.7.0.2-5_amd64.deb</userinput>\n"
"<computeroutput>(Reading database ... 86425 files and directories currently installed.)\n"
"Preparing to unpack man-db_2.7.0.2-5_amd64.deb ...\n"
"Unpacking man-db (2.7.0.2-5) over (2.7.0.2-4) ...\n"
"Setting up man-db (2.7.0.2-5) ...\n"
"Updating database of manual pages ...\n"
"Processing triggers for mime-support (3.58) ...</computeroutput>"
msgstr ""
"\n"
"<computeroutput># </computeroutput><userinput>dpkg -i man-db_2.7.0.2-5_amd64.deb</userinput>\n"
"<computeroutput>(データベースを読み込んでいます ... 現在 86425 個のファイルとディレクトリがインストールされています。)\n"
"man-db_2.7.0.2-5_amd64.deb を展開する準備をしています ...\n"
"man-db (2.7.0.2-5) で (2.7.0.2-4 に) 上書き展開しています ...\n"
"man-db (2.7.0.2-5) を設定しています ...\n"
"Updating database of manual pages ...\n"
"mime-support (3.58) のトリガを処理しています ...</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "We can see the different steps performed by <command>dpkg</command>; we know, thus, at what point any error may have occurred. The installation can also be effected in two stages: first unpacking, then configuration. <command>apt-get</command> takes advantage of this, limiting the number of calls to <command>dpkg</command> (since each call is costly, due to loading of the database in memory, especially the list of already installed files)."
msgstr "<command>dpkg</command> の実行する各作業段階が見て取れます。このため、どの時点でエラーが起きたかを識別できます。インストールを 2 段階に分けて実行することも可能です。具体的に言えば、最初が展開、その後に設定です。<command>apt-get</command> はこれをうまく利用して、<command>dpkg</command> を呼び出す回数を減らしています (なぜなら <command>dpkg</command> は呼び出される度にデータベース、特にインストール済みファイルのリスト、をメモリに読み込むため効率が悪いからです)。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Separate unpacking and configuration"
msgstr "展開と設定を分けて実行"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>dpkg --unpack man-db_2.7.0.2-5_amd64.deb</userinput>\n"
"<computeroutput>(Reading database ... 86425 files and directories currently installed.)\n"
"Preparing to unpack man-db_2.7.0.2-5_amd64.deb ...\n"
"Unpacking man-db (2.7.0.2-5) over (2.7.0.2-5) ...\n"
"Processing triggers for mime-support (3.58) ...\n"
"# </computeroutput><userinput>dpkg --configure man-db</userinput>\n"
"<computeroutput>Setting up man-db (2.7.0.2-5) ...\n"
"Updating database of manual pages ...\n"
"</computeroutput>"
msgstr ""
"\n"
"<computeroutput># </computeroutput><userinput>dpkg --unpack man-db_2.7.0.2-5_amd64.deb</userinput>\n"
"<computeroutput>(データベースを読み込んでいます ... 現在 86425 個のファイルとディレクトリがインストールされています。)\n"
"man-db_2.7.0.2-5_amd64.deb を展開する準備をしています ...\n"
"man-db (2.7.0.2-5) で (2.7.0.2-5 に) 上書き展開しています ...\n"
"mime-support (3.58) のトリガを処理しています ...\n"
"# </computeroutput><userinput>dpkg --configure man-db</userinput>\n"
"<computeroutput>man-db (2.7.0.2-5) を設定しています ...\n"
"Updating database of manual pages ...\n"
"</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>unpacking</secondary>"
msgstr "<primary>パッケージ</primary><secondary>展開</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>unpacking</primary><secondary>binary package</secondary>"
msgstr "<primary>展開</primary><secondary>バイナリパッケージ</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Sometimes <command>dpkg</command> will fail to install a package and return an error; if the user orders it to ignore this, it will only issue a warning; it is for this reason that we have the different <literal>--force-*</literal> options. The <command>dpkg --force-help</command> command, or documentation of this command, will give a complete list of these options. The most frequent error, which you are bound to encounter sooner or later, is a file collision. When a package contains a file that is already installed by another package, <command>dpkg</command> will refuse to install it. The following messages will then appear:"
msgstr "<command>dpkg</command> がパッケージのインストールに失敗し、エラーを返すことがあります。さらに、ユーザがインストールの失敗を無視するように命令すれば、警告が表示されるでしょう。すなわちこれが多くの <literal>--force-*</literal> 系オプションが用意されている理由です。<command>dpkg</command> の文書によれば <command>dpkg --force-help</command> コマンドでこれらのオプションの完全なリストを見ることが可能です。最もよく目にするエラーはファイルの衝突で、遅かれ早かれこのエラーに遭遇するのは避けられません。パッケージが他のパッケージによってインストール済みのファイルを含んでいる場合、<command>dpkg</command> はパッケージのインストールを拒否します。その場合、以下のメッセージが表示されます。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid ""
"\n"
"<computeroutput>Unpacking libgdm (from .../libgdm_3.8.3-2_amd64.deb) ...\n"
"dpkg: error processing /var/cache/apt/archives/libgdm_3.8.3-2_amd64.deb (--unpack):\n"
" trying to overwrite '/usr/bin/gdmflexiserver', which is also in package gdm3 3.4.1-9</computeroutput>"
msgstr ""
"\n"
"<computeroutput>libgdm (.../libgdm_3.8.3-2_amd64.deb) を展開しています...\n"
"パッケージ /var/cache/apt/archives/libgdm_3.8.3-2_amd64.deb の処理中にエラーが発生しました (--unpack):\n"
"'/usr/bin/gdmflexiserver' を上書きしようとしています。これはパッケージ gdm3 3.4.1-9 にも存在します</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In this case, if you think that replacing this file is not a significant risk to the stability of your system (which is usually the case), you can use the option <literal>--force-overwrite</literal>, which tells <command>dpkg</command> to ignore this error and overwrite the file."
msgstr "この場合、ファイルを置き換えてもシステムの安定度は大きく損なわれない (通常は損なわれません) と考えるなら、<literal>--force-overwrite</literal> オプションを使うことで <command>dpkg</command> はこのエラーを無視してファイルを上書きします。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "While there are many available <literal>--force-*</literal> options, only <literal>--force-overwrite</literal> is likely to be used regularly. These options only exist for exceptional situations, and it is better to leave them alone as much as possible in order to respect the rules imposed by the packaging mechanism. Do not forget, these rules ensure the consistency and stability of your system."
msgstr "<literal>--force-*</literal> 系のオプションはたくさんありますが、日常的に使うのは <literal>--force-overwrite</literal> だけです。<literal>--force-*</literal> 系のオプションは例外的状況のためだけに用意されており、パッケージングメカニズムの定める標準規則を尊重するためには、これらのオプションを使うことは可能な限り避けるべきです。これらの標準規則はシステムの整合性と安定性を守るものであることを忘れないでください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>CAUTION</emphasis> Effective use of <literal>--force-*</literal>"
msgstr "<emphasis>CAUTION</emphasis> <literal>--force-*</literal> の効果的な使い方"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>broken dependency</primary>"
msgstr "<primary>破壊された依存性</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "If you are not careful, the use of an option <literal>--force-*</literal> can lead to a system where the APT family of commands will refuse to function. In effect, some of these options allow installation of a package when a dependency is not met, or when there is a conflict. The result is an inconsistent system from the point of view of dependencies, and the APT commands will refuse to execute any action except those that will bring the system back to a consistent state (this often consists of installing the missing dependency or removing a problematic package). This often results in a message like this one, obtained after installing a new version of <emphasis role=\"pkg\">rdesktop</emphasis> while ignoring its dependency on a newer version of the <emphasis role=\"pkg\">libc6</emphasis>:"
msgstr "下手をすると <literal>--force-*</literal> 系オプションを使うことにより、そのシステム上で APT ファミリーのコマンドが動かなくなる場合があります。事実上、<literal>--force-*</literal> 系オプションを使えば、依存関係が満足されていなくても、衝突していても、パッケージをインストールできてしまいます。この結果、システムは依存関係の観点からすると整合性のない状況になります。APT コマンドはシステムを整合性のある状態に戻せるような操作 (依存関係を満足させるために必要なパッケージのインストール、問題のあるパッケージの削除などの操作) を除き、その実行を拒否しますから、APT コマンドが実行できなくなります。その場合、たとえば以下のようなメッセージが表示されることがあります。これは、<emphasis role=\"pkg\">rdesktop</emphasis> の新しいバージョンが <emphasis role=\"pkg\">libc6</emphasis> のシステムにインストールされているバージョンよりも新しいバージョンに依存しているにも関わらず、その依存関係を無視して <emphasis role=\"pkg\">rdesktop</emphasis> をインストールした結果です。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: PTAL;
msgid ""
"<computeroutput># </computeroutput><userinput>apt full-upgrade\n"
"</userinput><computeroutput>[...]\n"
"You might want to run 'apt-get -f install' to correct these.\n"
"The following packages have unmet dependencies:\n"
"  rdesktop: Depends: libc6 (&gt;= 2.5) but 2.3.6.ds1-13etch7 is installed\n"
"E: Unmet dependencies. Try using -f.</computeroutput>"
msgstr ""
"<computeroutput># </computeroutput><userinput>apt full-upgrade\n"
"</userinput><computeroutput>[...]\n"
"これらを直すためには 'apt-get -f install' を実行する必要があるかもしれません。\n"
"以下のパッケージには満たせない依存関係があります:\n"
"  rdesktop: Depends: libc6 (&gt;= 2.5) しかし、2.3.6.ds1-13etch7 はインストールされています\n"
"E: 未解決の依存関係があります。-f オプションを試してください。</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "A courageous administrator who is certain of the correctness of their analysis may choose to ignore a dependency or conflict and use the corresponding <literal>--force-*</literal> option. In this case, if they want to be able to continue to use <command>apt</command> or <command>aptitude</command>, they must edit <filename>/var/lib/dpkg/status</filename> to delete/modify the dependency, or conflict, that they chose to override."
msgstr "自分の解析の正確さに自信を持っている勇気ある管理者なら、依存関係や衝突を無視して、対応する <literal>--force-*</literal> 系オプションを使うことを選ぶかもしれません。この場合に、管理者が <command>apt</command> や <command>aptitude</command> を使い続けたいと思うなら、管理者は無効にしたい依存関係や衝突を削除/変更するために <filename>/var/lib/dpkg/status</filename> を編集しなければいけません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This manipulation is an ugly hack, and should never be used, except in the most extreme case of necessity. Quite frequently, a more fitting solution is to recompile the package that's causing the problem (see <xref linkend=\"sect.rebuilding-package\" />) or use a new version (potentially corrected) from a repository such as the <literal>stable-backports</literal> one (see <xref linkend=\"sect.backports\" />)."
msgstr "<filename>/var/lib/dpkg/status</filename> の編集は最悪の対応策であり、本当にどうしても必要な場合を除いて、絶対に使うべきではありません。ほとんどの場合、問題を生じさせているパッケージを再コンパイルしたり (<xref linkend=\"sect.rebuilding-package\" />をご覧ください)、<literal>stable-backports</literal> などのリポジトリから新しい (修正済みの可能性がある) バージョンを使ったり (<xref linkend=\"sect.backports\" />をご覧ください) するほうが適切な解決策です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>removing a package</primary>"
msgstr "<primary>パッケージの削除</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>purging a package</primary>"
msgstr "<primary>パッケージの完全削除</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>removal</secondary>"
msgstr "<primary>パッケージ</primary><secondary>削除</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>purge</secondary>"
msgstr "<primary>パッケージ</primary><secondary>完全削除</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Invoking <command>dpkg</command> with the <literal>-r</literal> or <literal>--remove</literal> option, followed by the name of a package, removes that package. This removal is, however, not complete: all of the configuration files, maintainer scripts, log files (system logs) and other user data handled by the package remain. That way disabling the program is easily done by uninstalling it, and it's still possible to quickly reinstall it with the same configuration. To completely remove everything associated with a package, use the <literal>-P</literal> or <literal>--purge</literal> option, followed by the package name."
msgstr "<command>dpkg</command> に <literal>-r</literal> または <literal>--remove</literal> オプションを付け、さらにパッケージの名前を指定して実行すれば、指定したパッケージが削除されます。しかしながらこの削除は完璧ではありません。具体的に言えば、パッケージが取り扱うすべての設定ファイル、メンテナスクリプト、ログファイル (システムログ)、その他のユーザデータは残されたままです。プログラムを無効化するには、この方法でパッケージをアンインストールしてください。そうすれば、削除したパッケージを同じ設定で再インストールして素早く利用できる状態にすることもまだ可能です。パッケージに関連するすべてを完全に削除するには、<command>dpkg</command> に <literal>-P</literal> または <literal>--purge</literal> オプションを付け、さらにパッケージの名前を指定して実行してください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Removal and purge of the <emphasis role=\"pkg\">debian-cd</emphasis> package"
msgstr "<emphasis role=\"pkg\">debian-cd</emphasis> パッケージの削除と完全削除"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"<computeroutput># </computeroutput><userinput>dpkg -r debian-cd</userinput>\n"
"<computeroutput>(Reading database ... 97747 files and directories currently installed.)\n"
"Removing debian-cd (3.1.17) ...\n"
"# </computeroutput><userinput>dpkg -P debian-cd</userinput>\n"
"<computeroutput>(Reading database ... 97401 files and directories currently installed.)\n"
"Removing debian-cd (3.1.17) ...\n"
"Purging configuration files for debian-cd (3.1.17) ...</computeroutput>"
msgstr ""
"<computeroutput># </computeroutput><userinput>dpkg -r debian-cd</userinput>\n"
"<computeroutput>(データベースを読み込んでいます ... 現在 97747 個のファイルとディレクトリがインストールされています。)\n"
"debian-cd (3.1.17) を削除しています ...\n"
"# </computeroutput><userinput>dpkg -P debian-cd</userinput>\n"
"<computeroutput>(データベースを読み込んでいます ... 現在 97401 個のファイルとディレクトリがインストールされています。)\n"
"debian-cd (3.1.17) を削除しています ...\n"
"debian-cd (3.1.17) の設定ファイルを削除しています ...</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Querying <command>dpkg</command>'s Database and Inspecting <filename>.deb</filename> Files"
msgstr "<command>dpkg</command> のデータベースへの問い合わせと <filename>.deb</filename> ファイルの調査"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>status</secondary>"
msgstr "<primary>パッケージ</primary><secondary>状態</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>file list</secondary>"
msgstr "<primary>パッケージ</primary><secondary>ファイルリスト</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>package</primary><secondary>content inspection</secondary>"
msgstr "<primary>パッケージ</primary><secondary>内容の調査</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>BACK TO BASICS</emphasis> Option syntax"
msgstr "<emphasis>BACK TO BASICS</emphasis> オプションの構文"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Most options are available in a “long” version (one or more relevant words, preceded by a double dash) and a “short” version (a single letter, often the initial of one word from the long version, and preceded by a single dash). This convention is so common that it is a POSIX standard."
msgstr "多くのオプションには「長い」もの (1 語以上の関連する単語を使い、二重ダッシュで始まるもの) と「短い」もの (1 文字で、長いオプションの頭文字の場合が多く、単独のダッシュで始まるもの) があります。これは POSIX 標準のプログラムでよく見られる慣例です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Before concluding this section, we will study <command>dpkg</command> options that query the internal database in order to obtain information. Giving first the long options and then corresponding short options (that will evidently take the same possible arguments) we cite <literal>--listfiles <replaceable>package</replaceable></literal> (or <literal>-L</literal>), which lists the files installed by this package; <literal>--search <replaceable>file</replaceable></literal> (or <literal>-S</literal>), which finds the package(s) containing the file; <literal>--status <replaceable>package</replaceable></literal> (or <literal>-s</literal>), which displays the headers of an installed package; <literal>--list</literal> (or <literal>-l</literal>), which displays the list of packages known to the system and their installation status; <literal>--contents <replaceable>file.deb</replaceable></literal> (or <literal>-c</literal>), which lists the files in the Debian package specified; <literal>--info<replaceable> file.deb </replaceable></literal> (or <literal>-I</literal>), which displays the headers of this Debian package."
msgstr "この節を締め括る前に、内部データベースに問い合わせて情報を得る際に使う <command>dpkg</command> のオプションについて学びましょう。各オプションは最初に長いオプション、その後に対応する短いオプション (両者は同じ引数を取るのは明らかです) のように記載しています。<literal>--listfiles <replaceable>package</replaceable></literal> (または <literal>-L</literal>) は与えられたパッケージがインストールするファイルを表示します。<literal>--search <replaceable>file</replaceable></literal> (または <literal>-S</literal>) はファイルを含むパッケージを探します。<literal>--status <replaceable>package</replaceable></literal> (または <literal>-s</literal>) はインストールされたパッケージのヘッダを表示します。<literal>--list</literal> (または <literal>-l</literal>) はシステムが把握しているパッケージのリストとその状態を表示します。<literal>--contents <replaceable>file.deb</replaceable></literal> (または <literal>-c</literal>) は指定された Debian パッケージに含まれるファイルを表示します。<literal>--info <replaceable>file.deb</replaceable></literal> (または <literal>-I</literal>) は指定された Debian パッケージのヘッダを表示します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Various queries with <command>dpkg</command>"
msgstr "<command>dpkg</command> にさまざまな情報を問い合わせる"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>dpkg -L base-passwd</userinput>\n"
"<computeroutput>/.\n"
"/usr\n"
"/usr/sbin\n"
"/usr/sbin/update-passwd\n"
"/usr/share\n"
"/usr/share/lintian\n"
"/usr/share/lintian/overrides\n"
"/usr/share/lintian/overrides/base-passwd\n"
"/usr/share/doc-base\n"
"/usr/share/doc-base/users-and-groups\n"
"/usr/share/base-passwd\n"
"/usr/share/base-passwd/group.master\n"
"/usr/share/base-passwd/passwd.master\n"
"/usr/share/man\n"
"/usr/share/man/pl\n"
"/usr/share/man/pl/man8\n"
"/usr/share/man/pl/man8/update-passwd.8.gz\n"
"/usr/share/man/ru\n"
"/usr/share/man/ru/man8\n"
"/usr/share/man/ru/man8/update-passwd.8.gz\n"
"/usr/share/man/ja\n"
"/usr/share/man/ja/man8\n"
"/usr/share/man/ja/man8/update-passwd.8.gz\n"
"/usr/share/man/fr\n"
"/usr/share/man/fr/man8\n"
"/usr/share/man/fr/man8/update-passwd.8.gz\n"
"/usr/share/man/es\n"
"/usr/share/man/es/man8\n"
"/usr/share/man/es/man8/update-passwd.8.gz\n"
"/usr/share/man/de\n"
"/usr/share/man/de/man8\n"
"/usr/share/man/de/man8/update-passwd.8.gz\n"
"/usr/share/man/man8\n"
"/usr/share/man/man8/update-passwd.8.gz\n"
"/usr/share/doc\n"
"/usr/share/doc/base-passwd\n"
"/usr/share/doc/base-passwd/users-and-groups.txt.gz\n"
"/usr/share/doc/base-passwd/changelog.gz\n"
"/usr/share/doc/base-passwd/copyright\n"
"/usr/share/doc/base-passwd/README\n"
"/usr/share/doc/base-passwd/users-and-groups.html\n"
"$ </computeroutput><userinput>dpkg -S /bin/date</userinput>\n"
"<computeroutput>coreutils: /bin/date\n"
"$ </computeroutput><userinput>dpkg -s coreutils</userinput>\n"
"<computeroutput>Package: coreutils\n"
"Essential: yes\n"
"Status: install ok installed\n"
"Priority: required\n"
"Section: utils\n"
"Installed-Size: 13855\n"
"Maintainer: Michael Stone &lt;mstone@debian.org&gt;\n"
"Architecture: amd64\n"
"Multi-Arch: foreign\n"
"Version: 8.23-3\n"
"Replaces: mktemp, realpath, timeout\n"
"Pre-Depends: libacl1 (&gt;= 2.2.51-8), libattr1 (&gt;= 1:2.4.46-8), libc6 (&gt;= 2.17), libselinux1 (&gt;= 2.1.13)\n"
"Conflicts: timeout\n"
"Description: GNU core utilities\n"
" This package contains the basic file, shell and text manipulation\n"
" utilities which are expected to exist on every operating system.\n"
" .\n"
" Specifically, this package includes:\n"
" arch base64 basename cat chcon chgrp chmod chown chroot cksum comm cp\n"
" csplit cut date dd df dir dircolors dirname du echo env expand expr\n"
" factor false flock fmt fold groups head hostid id install join link ln\n"
" logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt\n"
" od paste pathchk pinky pr printenv printf ptx pwd readlink realpath rm\n"
" rmdir runcon sha*sum seq shred sleep sort split stat stty sum sync tac\n"
" tail tee test timeout touch tr true truncate tsort tty uname unexpand\n"
" uniq unlink users vdir wc who whoami yes\n"
"Homepage: http://gnu.org/software/coreutils\n"
"$ </computeroutput><userinput>dpkg -l 'b*'</userinput>\n"
"<computeroutput>Desired=Unknown/Install/Remove/Purge/Hold\n"
"| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend\n"
"|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)\n"
"||/ Name                    Version          Architecture     Description\n"
"+++-=======================-================-================-====================================================\n"
"un  backupninja             &lt;none&gt;           &lt;none&gt;           (no description available)\n"
"ii  backuppc                3.3.0-2          amd64            high-performance, enterprise-grade system for backin\n"
"un  base                    &lt;none&gt;           &lt;none&gt;           (no description available)\n"
"un  base-config             &lt;none&gt;           &lt;none&gt;           (no description available)\n"
"ii  base-files              8                amd64            Debian base system miscellaneous files\n"
"ii  base-passwd             3.5.37           amd64            Debian base system master password and group files\n"
"[...]\n"
"$ </computeroutput><userinput>dpkg -c /var/cache/apt/archives/gnupg_1.4.18-6_amd64.deb</userinput>\n"
"<computeroutput>drwxr-xr-x root/root         0 2014-12-04 23:03 ./\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./lib/\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./lib/udev/\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./lib/udev/rules.d/\n"
"-rw-r--r-- root/root      2711 2014-12-04 23:03 ./lib/udev/rules.d/60-gnupg.rules\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/lib/\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/lib/gnupg/\n"
"-rwxr-xr-x root/root     39328 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_ldap\n"
"-rwxr-xr-x root/root     92872 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_hkp\n"
"-rwxr-xr-x root/root     47576 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_finger\n"
"-rwxr-xr-x root/root     84648 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_curl\n"
"-rwxr-xr-x root/root      3499 2014-12-04 23:03 ./usr/lib/gnupg/gpgkeys_mailto\n"
"drwxr-xr-x root/root         0 2014-12-04 23:03 ./usr/bin/\n"
"-rwxr-xr-x root/root     60128 2014-12-04 23:03 ./usr/bin/gpgsplit\n"
"-rwxr-xr-x root/root   1012688 2014-12-04 23:03 ./usr/bin/gpg\n"
"[...]\n"
"$ </computeroutput><userinput>dpkg -I /var/cache/apt/archives/gnupg_1.4.18-6_amd64.deb</userinput>\n"
"<computeroutput> new debian package, version 2.0.\n"
" size 1148362 bytes: control archive=3422 bytes.\n"
"    1264 bytes,    26 lines      control              \n"
"    4521 bytes,    65 lines      md5sums              \n"
"     479 bytes,    13 lines   *  postinst             #!/bin/sh\n"
"     473 bytes,    13 lines   *  preinst              #!/bin/sh\n"
" Package: gnupg\n"
" Version: 1.4.18-6\n"
" Architecture: amd64\n"
" Maintainer: Debian GnuPG-Maintainers &lt;pkg-gnupg-maint@lists.alioth.debian.org&gt;\n"
" Installed-Size: 4888\n"
" Depends: gpgv, libbz2-1.0, libc6 (&gt;= 2.15), libreadline6 (&gt;= 6.0), libusb-0.1-4 (&gt;= 2:0.1.12), zlib1g (&gt;= 1:1.1.4)\n"
" Recommends: gnupg-curl, libldap-2.4-2 (&gt;= 2.4.7)\n"
" Suggests: gnupg-doc, libpcsclite1, parcimonie, xloadimage | imagemagick | eog\n"
" Section: utils\n"
" Priority: important\n"
" Multi-Arch: foreign\n"
" Homepage: http://www.gnupg.org\n"
" Description: GNU privacy guard - a free PGP replacement\n"
"  GnuPG is GNU's tool for secure communication and data storage.\n"
"  It can be used to encrypt data and to create digital signatures.\n"
"  It includes an advanced key management facility and is compliant\n"
"  with the proposed OpenPGP Internet standard as described in RFC 4880.\n"
"[...]</computeroutput>"
msgstr ""
"\n"
"<computeroutput>$ </computeroutput><userinput>dpkg -L base-passwd</userinput>\n"
"<computeroutput>/.\n"
"/usr\n"
"/usr/sbin\n"
"/usr/sbin/update-passwd\n"
"/usr/share\n"
"/usr/share/lintian\n"
"/usr/share/lintian/overrides\n"
"/usr/share/lintian/overrides/base-passwd\n"
"/usr/share/doc-base\n"
"/usr/share/doc-base/users-and-groups\n"
"/usr/share/base-passwd\n"
"/usr/share/base-passwd/group.master\n"
"/usr/share/base-passwd/passwd.master\n"
"/usr/share/man\n"
"/usr/share/man/pl\n"
"/usr/share/man/pl/man8\n"
"/usr/share/man/pl/man8/update-passwd.8.gz\n"
"/usr/share/man/ru\n"
"/usr/share/man/ru/man8\n"
"/usr/share/man/ru/man8/update-passwd.8.gz\n"
"/usr/share/man/ja\n"
"/usr/share/man/ja/man8\n"
"/usr/share/man/ja/man8/update-passwd.8.gz\n"
"/usr/share/man/fr\n"
"/usr/share/man/fr/man8\n"
"/usr/share/man/fr/man8/update-passwd.8.gz\n"
"/usr/share/man/es\n"
"/usr/share/man/es/man8\n"
"/usr/share/man/es/man8/update-passwd.8.gz\n"
"/usr/share/man/de\n"
"/usr/share/man/de/man8\n"
"/usr/share/man/de/man8/update-passwd.8.gz\n"
"/usr/share/man/man8\n"
"/usr/share/man/man8/update-passwd.8.gz\n"
"/usr/share/doc\n"
"/usr/share/doc/base-passwd\n"
"/usr/share/doc/base-passwd/users-and-groups.txt.gz\n"
"/usr/share/doc/base-passwd/changelog.gz\n"
"/usr/share/doc/base-passwd/copyright\n"
"/usr/share/doc/base-passwd/README\n"
"/usr/share/doc/base-passwd/users-and-groups.html\n"
"$ </computeroutput><userinput>dpkg -S /bin/date</userinput>\n"
"<computeroutput>coreutils: /bin/date\n"
"$ </computeroutput><userinput>dpkg -s coreutils</userinput>\n"
"<computeroutput>Package: coreutils\n"
"Essential: yes\n"
"Status: install ok installed\n"
"Priority: required\n"
"Section: utils\n"
"Installed-Size: 13855\n"
"Maintainer: Michael Stone &lt;mstone@debian.org&gt;\n"
"Architecture: amd64\n"
"Multi-Arch: foreign\n"
"Version: 8.23-3\n"
"Replaces: mktemp, realpath, timeout\n"
"Pre-Depends: libacl1 (&gt;= 2.2.51-8), libattr1 (&gt;= 1:2.4.46-8), libc6 (&gt;= 2.17), libselinux1 (&gt;= 2.1.13)\n"
"Conflicts: timeout\n"
"Description: GNU core utilities\n"
" This package contains the basic file, shell and text manipulation\n"
" utilities which are expected to exist on every operating system.\n"
" .\n"
" Specifically, this package includes:\n"
" arch base64 basename cat chcon chgrp chmod chown chroot cksum comm cp\n"
" csplit cut date dd df dir dircolors dirname du echo env expand expr\n"
" factor false flock fmt fold groups head hostid id install join link ln\n"
" logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt\n"
" od paste pathchk pinky pr printenv printf ptx pwd readlink realpath rm\n"
" rmdir runcon sha*sum seq shred sleep sort split stat stty sum sync tac\n"
" tail tee test timeout touch tr true truncate tsort tty uname unexpand\n"
" uniq unlink users vdir wc who whoami yes\n"
"Homepage: http://gnu.org/software/coreutils\n"
"$ </computeroutput><userinput>dpkg -l 'b*'</userinput>\n"
"<computeroutput>要望=(U)不明/(I)インストール/(R)削除/(P)完全削除/(H)保持\n"
"| 状態=(N)無/(I)インストール済/(C)設定/(U)展開/(F)設定失敗/(H)半インストール/(W)トリガ待ち/(T)トリガ保留\n"
"|/ エラー?=(空欄)無/(R)要再インストール (状態,エラーの大文字=異常)\n"
"||/ 名前                    バージョン       アーキテクチャ   説明\n"
"+++-=======================-================-================-====================================================\n"
"un  backupninja             &lt;なし&gt;           &lt;なし&gt;           (説明 (description) がありません)\n"
"ii  backuppc                3.3.0-2          amd64            high-performance, enterprise-grade system for backin\n"
"un  base                    &lt;なし&gt;           &lt;なし&gt;           (説明 (description) がありません)\n"
"un  base-config             &lt;なし&gt;           &lt;なし&gt;           (説明 (description) がありません)\n"
"ii  base-files              8                amd64            Debian base system miscellaneous files\n"
"ii  base-passwd             3.5.37           amd64            Debian base system master password and group files\n"
"[...]\n"
"$ </computeroutput><userinput>dpkg -c /var/cache/apt/archives/gnupg_1.4.18-6_amd64.deb</userinput>\n"
"<computeroutput>drwxr-xr-x root/root         0 2014-12-05 07:03 ./\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./lib/\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./lib/udev/\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./lib/udev/rules.d/\n"
"-rw-r--r-- root/root      2711 2014-12-05 07:03 ./lib/udev/rules.d/60-gnupg.rules\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./usr/\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./usr/lib/\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./usr/lib/gnupg/\n"
"-rwxr-xr-x root/root     39328 2014-12-05 07:03 ./usr/lib/gnupg/gpgkeys_ldap\n"
"-rwxr-xr-x root/root     92872 2014-12-05 07:03 ./usr/lib/gnupg/gpgkeys_hkp\n"
"-rwxr-xr-x root/root     47576 2014-12-05 07:03 ./usr/lib/gnupg/gpgkeys_finger\n"
"-rwxr-xr-x root/root     84648 2014-12-05 07:03 ./usr/lib/gnupg/gpgkeys_curl\n"
"-rwxr-xr-x root/root      3499 2014-12-05 07:03 ./usr/lib/gnupg/gpgkeys_mailto\n"
"drwxr-xr-x root/root         0 2014-12-05 07:03 ./usr/bin/\n"
"-rwxr-xr-x root/root     60128 2014-12-05 07:03 ./usr/bin/gpgsplit\n"
"-rwxr-xr-x root/root   1012688 2014-12-05 07:03 ./usr/bin/gpg\n"
"[...]\n"
"$ </computeroutput><userinput>dpkg -I /var/cache/apt/archives/gnupg_1.4.18-6_amd64.deb</userinput>\n"
"<computeroutput> 新形式 debian パッケージ、バージョン 2.0。\n"
" サイズ 1148362 バイト: コントロールアーカイブ = 3422 バイト。\n"
"    1264 バイト、   26 行      control              \n"
"    4521 バイト、   65 行      md5sums              \n"
"     479 バイト、   13 行   *  postinst             #!/bin/sh\n"
"     473 バイト、   13 行   *  preinst              #!/bin/sh\n"
" Package: gnupg\n"
" Version: 1.4.18-6\n"
" Architecture: amd64\n"
" Maintainer: Debian GnuPG-Maintainers &lt;pkg-gnupg-maint@lists.alioth.debian.org&gt;\n"
" Installed-Size: 4888\n"
" Depends: gpgv, libbz2-1.0, libc6 (&gt;= 2.15), libreadline6 (&gt;= 6.0), libusb-0.1-4 (&gt;= 2:0.1.12), zlib1g (&gt;= 1:1.1.4)\n"
" Recommends: gnupg-curl, libldap-2.4-2 (&gt;= 2.4.7)\n"
" Suggests: gnupg-doc, libpcsclite1, parcimonie, xloadimage | imagemagick | eog\n"
" Section: utils\n"
" Priority: important\n"
" Multi-Arch: foreign\n"
" Homepage: http://www.gnupg.org\n"
" Description: GNU privacy guard - a free PGP replacement\n"
"  GnuPG is GNU's tool for secure communication and data storage.\n"
"  It can be used to encrypt data and to create digital signatures.\n"
"  It includes an advanced key management facility and is compliant\n"
"  with the proposed OpenPGP Internet standard as described in RFC 4880.\n"
"[...]</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>GOING FURTHER</emphasis> Comparison of versions"
msgstr "<emphasis>GOING FURTHER</emphasis> バージョンの比較"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>version, comparison</primary>"
msgstr "<primary>バージョン、比較</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>comparison of versions</primary>"
msgstr "<primary>バージョンの比較</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Since <command>dpkg</command> is the program for handling Debian packages, it also provides the reference implementation of the logic of comparing version numbers. This is why it has a <literal>--compare-versions</literal> option, usable by external programs (especially configuration scripts executed by <command>dpkg</command> itself). This option requires three parameters: a version number, a comparison operator, and a second version number. The different possible operators are <literal>lt</literal> (strictly less than), <literal>le</literal> (less than or equal to), <literal>eq</literal> (equal), <literal>ne</literal> (not equal), <literal>ge</literal> (greater than or equal to), and <literal>gt</literal> (strictly greater than). If the comparison is correct, <command>dpkg</command> returns 0 (success); if not, it gives a non-zero return value (indicating failure)."
msgstr "<command>dpkg</command> は Debian パッケージを取り扱うプログラムですから、バージョン番号の比較ロジックのリファレンス実装も提供しています。<command>dpkg</command> にはバージョンを比較するための <literal>--compare-versions</literal> オプションが用意されており、外部プログラム (特に <command>dpkg</command> 自身が呼び出す設定スクリプト) の中でバージョンを簡単に比較できるようにしています。<literal>--compare-versions</literal> オプションは 3 つの引数を取ります。具体的に言えば引数としてバージョン番号、比較演算子、2 番目のバージョン番号を取ります。比較演算子として使える演算子は <literal>lt</literal> (より小さい)、<literal>le</literal> (以下)、<literal>eq</literal> (等しい)、<literal>ne</literal> (等しくない)、<literal>ge</literal> (以上)、<literal>gt</literal> (より大きい) です。比較式が真ならば <command>dpkg</command> は 0 (成功) を返します。一方で偽ならば非ゼロ (失敗) を返します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>dpkg --compare-versions 1.2-3 gt 1.1-4</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>0\n"
"$ </computeroutput><userinput>dpkg --compare-versions 1.2-3 lt 1.1-4</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>1\n"
"$ </computeroutput><userinput>dpkg --compare-versions 2.6.0pre3-1 lt 2.6.0-1</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>1</computeroutput>"
msgstr ""
"\n"
"<computeroutput>$ </computeroutput><userinput>dpkg --compare-versions 1.2-3 gt 1.1-4</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>0\n"
"$ </computeroutput><userinput>dpkg --compare-versions 1.2-3 lt 1.1-4</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>1\n"
"$ </computeroutput><userinput>dpkg --compare-versions 2.6.0pre3-1 lt 2.6.0-1</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>1</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Note the unexpected failure of the last comparison: for <command>dpkg</command>, <literal>pre</literal>, usually denoting a pre-release, has no particular meaning, and this program compares the alphabetic characters in the same way as the numbers (a &lt; b &lt; c ...), in alphabetical order. This is why it considers “<literal>0pre3</literal>” to be greater than “<literal>0</literal>”. When we want a package's version number to indicate that it is a pre-release, we use the tilde character, “<literal>~</literal>”:"
msgstr "最後の比較式は一見 0 (成功) を返すように思われますが、1 (失敗) を返しています。この点に注意しましょう。つまり、文字通りに解釈すれば <literal>pre</literal> は事前リリースを意味しますが、<command>dpkg</command> にとって <literal>pre</literal> は特別な意味を持つものではありません。<command>dpkg</command> はアルファベット文字を数字と同じ方法で (a &lt; b &lt; c ...)、アルファベット順に比較します。このため、「<literal>0pre3</literal>」は「<literal>0</literal>」より大きいというわけです。パッケージのバージョン番号に事前リリースであるという意味を持たせたい場合、チルダ文字「<literal>~</literal>」を使ってください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>dpkg --compare-versions 2.6.0~pre3-1 lt 2.6.0-1</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>0</computeroutput>"
msgstr ""
"\n"
"<computeroutput>$ </computeroutput><userinput>dpkg --compare-versions 2.6.0~pre3-1 lt 2.6.0-1</userinput>\n"
"<computeroutput>$ </computeroutput><userinput>echo $?</userinput>\n"
"<computeroutput>0</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command>'s Log File"
msgstr "<command>dpkg</command> のログファイル"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command> keeps a log of all of its actions in <filename>/var/log/dpkg.log</filename>. This log is extremely verbose, since it details every one of the stages through which packages handled by <command>dpkg</command> go. In addition to offering a way to track dpkg's behavior, it helps, above all, to keep a history of the development of the system: one can find the exact moment when each package has been installed or updated, and this information can be extremely useful in understanding a recent change in behavior. Additionally, all versions being recorded, it is easy to cross-check the information with the <filename>changelog.Debian.gz</filename> for packages in question, or even with online bug reports."
msgstr "<command>dpkg</command> は <filename>/var/log/dpkg.log</filename> に作業のすべてを記録します。<filename>/var/log/dpkg.log</filename> は極めて詳細です。なぜなら <filename>/var/log/dpkg.log</filename> には <command>dpkg</command> がパッケージに対して行った操作の各段階すべてが詳しく記録されているからです。dpkg の挙動を追跡する方法を提供することに加えて、<filename>/var/log/dpkg.log</filename> はシステムの変化の履歴を保存するのに役立ちます。すなわち、パッケージがインストールされたり更新された正確な日時を探すことが可能ですし、この情報は最近の挙動変化を理解するのに極めて役立ちます。加えて、すべてのバージョンが記録されていますから、注目しているパッケージの <filename>changelog.Debian.gz</filename> またはオンラインバグ報告と情報を簡単に照合できます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Multi-Arch Support"
msgstr "マルチアーキテクチャサポート"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>Multi-Arch</primary>"
msgstr "<primary>マルチアーキテクチャ</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>architecture</primary><secondary>multi-arch support</secondary>"
msgstr "<primary>アーキテクチャ</primary><secondary>マルチアーキテクチャサポート</secondary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "All Debian packages have an <literal>Architecture</literal> field in their control information. This field can contain either “<literal>all</literal>” (for packages that are architecture independent) or the name of the architecture that it targets (like “amd64”, “armhf”, …). In the latter case, by default, <command>dpkg</command> will only accept to install the package if its architecture matches the host's architecture as returned by <command>dpkg --print-architecture</command>."
msgstr "すべての Debian パッケージは control ファイルの中に <literal>Architecture</literal> フィールドを持っています。<literal>Architecture</literal> フィールドでは「<literal>all</literal>」(アーキテクチャに依存しないパッケージ) または対象のアーキテクチャの名前 (「amd64」、「armhf」など) のどちらか一方を指定します。対象アーキテクチャの名前が指定されていた場合、初期設定では <command>dpkg</command> は <command>dpkg --print-architecture</command> で返されるホストのアーキテクチャと一致するアーキテクチャ向けのパッケージのインストールだけを受け入れます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "This restriction ensures that users do not end up with binaries compiled for an incorrect architecture. Everything would be perfect except that (some) computers can run binaries for multiple architectures, either natively (an “amd64“ system can run “i386” binaries) or through emulators."
msgstr "この制約は、ユーザが異なるアーキテクチャ向けにコンパイルされたバイナリを使う羽目にならないようにしています。コンピュータが複数のアーキテクチャのバイナリを実行できる場合、たとえば元から可能な場合 (「amd64」システムは「i386」バイナリを実行できます) やエミュレータを介すことで可能になる場合、を除けばこの制約は合理的と言えます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Enabling Multi-Arch"
msgstr "マルチアーキテクチャの有効化"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<command>dpkg</command>'s multi-arch support allows users to define “foreign architectures” that can be installed on the current system. This is simply done with <command>dpkg --add-architecture</command> like in the example below. There is a corresponding <command>dpkg --remove-architecture</command> to drop support of a foreign architecture, but it can only be used when no packages of this architecture remain."
msgstr "<command>dpkg</command> のマルチアーキテクチャサポートのおかげで、ユーザは現在のシステムにインストールできる「外来アーキテクチャ」を定義できます。これを行うには、以下に示す通り <command>dpkg --add-architecture</command> を使ってください。関連して、<command>dpkg --remove-architecture</command> は外来アーキテクチャのサポートを取り消しますが、取り消したいアーキテクチャのパッケージが残っていた場合には失敗します。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>dpkg --print-architecture</userinput>\n"
"<computeroutput>amd64\n"
"# </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg -i gcc-4.9-base_4.9.1-19_armhf.deb</userinput>\n"
"<computeroutput>dpkg: error processing archive gcc-4.9-base_4.9.1-19_armhf.deb (--install):\n"
" package architecture (armhf) does not match system (amd64)\n"
"Errors were encountered while processing:\n"
" gcc-4.9-base_4.9.1-19_armhf.deb\n"
"# </computeroutput><userinput>dpkg --add-architecture armhf</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg --add-architecture armel</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>\n"
"<computeroutput>armhf\n"
"armel\n"
"# </computeroutput><userinput>dpkg -i gcc-4.9-base_4.9.1-19_armhf.deb</userinput>\n"
"<computeroutput>Selecting previously unselected package gcc-4.9-base:armhf.\n"
"(Reading database ... 86425 files and directories currently installed.)\n"
"Preparing to unpack gcc-4.9-base_4.9.1-19_armhf.deb ...\n"
"Unpacking gcc-4.9-base:armhf (4.9.1-19) ...\n"
"Setting up gcc-4.9-base:armhf (4.9.1-19) ...\n"
"# </computeroutput><userinput>dpkg --remove-architecture armhf</userinput>\n"
"<computeroutput>dpkg: error: cannot remove architecture 'armhf' currently in use by the database\n"
"# </computeroutput><userinput>dpkg --remove-architecture armel</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>\n"
"<computeroutput>armhf</computeroutput>"
msgstr ""
"\n"
"<computeroutput># </computeroutput><userinput>dpkg --print-architecture</userinput>\n"
"<computeroutput>amd64\n"
"# </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg -i gcc-4.9-base_4.9.1-19_armhf.deb</userinput>\n"
"<computeroutput>dpkg: アーカイブ gcc-4.9-base_4.9.1-19_armhf.deb の処理中にエラーが発生しました (--install):\n"
" パッケージアーキテクチャ (armhf) がシステム (amd64) と一致しません\n"
"処理中にエラーが発生しました:\n"
" gcc-4.9-base_4.9.1-19_armhf.deb\n"
"# </computeroutput><userinput>dpkg --add-architecture armhf</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg --add-architecture armel</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>\n"
"<computeroutput>armhf\n"
"armel\n"
"# </computeroutput><userinput>dpkg -i gcc-4.9-base_4.9.1-19_armhf.deb</userinput>\n"
"<computeroutput>以前に未選択のパッケージ gcc-4.9-base:armhf を選択しています。\n"
"(データベースを読み込んでいます ... 現在 86425 個のファイルとディレクトリがインストールされています。)\n"
"gcc-4.9-base_4.9.1-19_armhf.deb を展開する準備をしています ...\n"
"gcc-4.9-base:armhf (4.9.1-19) を展開しています...\n"
"gcc-4.9-base:armhf (4.9.1-19) を設定しています ...\n"
"# </computeroutput><userinput>dpkg --remove-architecture armhf</userinput>\n"
"<computeroutput>dpkg: エラー: データベースで現在使用中のアーキテクチャ 'armhf' を削除できません\n"
"# </computeroutput><userinput>dpkg --remove-architecture armel</userinput>\n"
"<computeroutput># </computeroutput><userinput>dpkg --print-foreign-architectures</userinput>\n"
"<computeroutput>armhf</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>NOTE</emphasis> APT's multi-arch support"
msgstr "<emphasis>NOTE</emphasis> APT のマルチアーキテクチャサポート"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "APT will automatically detect when dpkg has been configured to support foreign architectures and will start downloading the corresponding <filename>Packages</filename> files durings its update process."
msgstr "APT は dpkg が外来アーキテクチャをサポートするように設定されているかを自動的に検出し、更新作業中に対応する <filename>Packages</filename> ファイルをダウンロードします。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Foreign packages can then be installed with <command>apt install <replaceable>package</replaceable>:<replaceable>architecture</replaceable></command>."
msgstr "外来パッケージをインストールするには <command>apt install <replaceable>package</replaceable>:<replaceable>architecture</replaceable></command> を使ってください。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>IN PRACTICE</emphasis> Using proprietary i386 binaries on amd64"
msgstr "<emphasis>IN PRACTICE</emphasis> amd64 上でプロプライエタリな i386 バイナリを使う"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "There are multiple use cases for multi-arch, but the most popular one is the possibility to execute 32 bit binaries (i386) on 64 bit systems (amd64), in particular since several popular proprietary applications (like Skype) are only provided in 32 bit versions."
msgstr "マルチアーキテクチャには複数の使用事例がありますが、最も一般的な使われ方は、32 ビットバイナリ (i386) を 64 ビットシステム (amd64) で実行できるようにする事例です。その具体的理由は、複数の人気のプロプライエタリアプリケーション (たとえば Skype) が 32 ビット版しか提供していないからです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Multi-Arch Related Changes"
msgstr "マルチアーキテクチャ関連の変更"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "To make multi-arch actually useful and usable, libraries had to be repackaged and moved to an architecture-specific directory so that multiple copies (targeting different architectures) can be installed alongside. Such updated packages contain the “<literal>Multi-Arch: same</literal>” header field to tell the packaging system that the various architectures of the package can be safely co-installed (and that those packages can only satisfy dependencies of packages of the same architecture). Since multi-arch made its debut in Debian <emphasis role=\"distribution\">Wheezy</emphasis>, not all libraries have been converted yet."
msgstr "マルチアーキテクチャを実際に有益で使いやすいものにするためには、ライブラリをもう一度パッケージングし直さなければいけませんでした。さらに複数のコピー (異なるアーキテクチャ向けのパッケージ) を同時にインストールできるようにするために、マルチアーキテクチャ専用のディレクトリにライブラリを移動しなければいけませんでした。このようにして更新されたパッケージには、このパッケージはアーキテクチャが違っても安全に同時インストールできること (そしてこのパッケージは自分と異なるアーキテクチャのパッケージの依存関係を満足することはできないこと) をパッケージングシステムに伝えるための「<literal>Multi-Arch: same</literal>」ヘッダフィールドが含まれています。マルチアーキテクチャモードは Debian <emphasis role=\"distribution\">Wheezy</emphasis> で初登場しましたから、まだすべてのライブラリが変換されたわけではありません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid ""
"<computeroutput>$ </computeroutput><userinput>dpkg -s gcc-4.9-base\n"
"</userinput><computeroutput>dpkg-query: error: --status needs a valid package name but 'gcc-4.9-base' is not: ambiguous package name 'gcc-4.9-base' with more than one installed instance\n"
"\n"
"Use --help for help about querying packages.\n"
"$ </computeroutput><userinput>dpkg -s gcc-4.9-base:amd64 gcc-4.9-base:armhf | grep ^Multi\n"
"</userinput><computeroutput>Multi-Arch: same\n"
"Multi-Arch: same\n"
"$ </computeroutput><userinput>dpkg -L libgcc1:amd64 |grep .so\n"
"</userinput><computeroutput>/lib/x86_64-linux-gnu/libgcc_s.so.1\n"
"$ </computeroutput><userinput>dpkg -S /usr/share/doc/gcc-4.9-base/copyright\n"
"</userinput><computeroutput>gcc-4.9-base:amd64, gcc-4.9-base:armhf: /usr/share/doc/gcc-4.9-base/copyright\n"
"</computeroutput>"
msgstr ""
"<computeroutput>$ </computeroutput><userinput>dpkg -s gcc-4.9-base\n"
"</userinput><computeroutput>dpkg-query: エラー: --status は有効なパッケージ名を必要としますが、`gcc-4.9-base' はそうではありません: 1つ以上のインストール済み実体がある、あいまいなパッケージ名 'gcc-4.9-base' です\n"
"\n"
"パッケージ照会についてのヘルプには、--help を使用してください。\n"
"$ </computeroutput><userinput>dpkg -s gcc-4.9-base:amd64 gcc-4.9-base:armhf | grep ^Multi\n"
"</userinput><computeroutput>Multi-Arch: same\n"
"Multi-Arch: same\n"
"$ </computeroutput><userinput>dpkg -L libgcc1:amd64 |grep .so\n"
"</userinput><computeroutput>/lib/x86_64-linux-gnu/libgcc_s.so.1\n"
"$ </computeroutput><userinput>dpkg -S /usr/share/doc/gcc-4.9-base/copyright\n"
"</userinput><computeroutput>gcc-4.9-base:amd64, gcc-4.9-base:armhf: /usr/share/doc/gcc-4.9-base/copyright\n"
"</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "It is worth noting that <literal>Multi-Arch: same</literal> packages must have their names qualified with their architecture to be unambiguously identifiable. They also have the possibility to share files with other instances of the same package; <command>dpkg</command> ensures that all packages have bit-for-bit identical files when they are shared. Last but not least, all instances of a package must have the same version. They must thus be upgraded together."
msgstr "<literal>Multi-Arch: same</literal> パッケージを取り扱う際には、パッケージの名前にアーキテクチャの限定詞を付けて対象を明確に識別しなければいけない点は注目に値します。<literal>Multi-Arch: same</literal> パッケージは対象アーキテクチャの異なる同じパッケージ間でファイルを共有しているかもしれません。さらに対象アーキテクチャの異なる同じパッケージ間でファイルが共有されている場合、<command>dpkg</command> は共有されているファイルがビット単位で一致することを確認します。最後に重要なことですが、パッケージは対象アーキテクチャごとにバージョンが違ってはいけません。対象アーキテクチャの異なるパッケージも必ず同時にアップグレードされなければいけません。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Multi-Arch support also brings some interesting challenges in the way dependencies are handled. Satisfying a dependency requires either a package marked “<literal>Multi-Arch: foreign</literal>” or a package whose architecture matches the one of the package declaring the dependency (in this dependency resolution process, architecture-independent packages are assumed to be of the same architecture than the host). A dependency can also be weakened to allow any architecture to fulfill it, with the <literal><replaceable>package</replaceable>:any</literal> syntax, but foreign packages can only satisfy such a dependency if they are marked “<literal>Multi-Arch: allowed</literal>”."
msgstr "マルチアーキテクチャサポートによって、依存関係の取り扱い方法にいくつかの興味深い挑戦がなされました。あるパッケージの依存関係を満足させるためには、必要とされる側のパッケージは「<literal>Multi-Arch: foreign</literal>」と宣言されているか、依存パッケージ群の 1 つのパッケージとアーキテクチャが一致しているかのどちらか一方を満足させる必要があります (依存関係解決処理中、アーキテクチャに依存しないパッケージはホストと同じアーキテクチャと仮定されます)。<literal><replaceable>package</replaceable>:any</literal> 構文はどんなアーキテクチャでも依存関係を満足できることを意味しますが、外来パッケージを使って <literal><replaceable>package</replaceable>:any</literal> 構文で表記された依存関係を満足できるのは「<literal>Multi-Arch: allowed</literal>」と宣言されていた場合のみです。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Coexistence with Other Packaging Systems"
msgstr "他のパッケージングシステムとの共存"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>RPM</primary>"
msgstr "<primary>RPM</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary>Red Hat Package Manager</primary>"
msgstr "<primary>Red Hat パッケージマネージャ</primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<primary><command>alien</command></primary>"
msgstr "<primary><command>alien</command></primary>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Debian packages are not the only software packages used in the free software world. The main competitor is the RPM format of the Red Hat Linux distribution and its many derivatives. Red Hat is a very popular, commercial distribution. It is thus common for software provided by third parties to be offered as RPM packages rather than Debian."
msgstr "フリーソフトウェア世界では Debian パッケージ以外のソフトウェアパッケージも使われています。Debian にとって最大の競争相手は Red Hat Linux ディストリビューションとその派生物が使う RPM フォーマットです。Red Hat は非常に人気のある商用ディストリビューションです。そのため一般に、サードパーティが提供するソフトウェアは Debian パッケージではなく RPM パッケージで用意されます。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "In this case, you should know that the program <command>rpm</command>, which handles RPM packages, is available as a Debian package, so it is possible to use this package format on Debian. Care should be taken, however, to limit these manipulations to extract the information from a package or to verify its integrity. It is, in truth, unreasonable to use <command>rpm</command> to install an RPM on a Debian system; RPM uses its own database, separate from those of native software (such as <command>dpkg</command>). This is why it is not possible to ensure a stable coexistence of two packaging systems."
msgstr "Debian パッケージが提供されなかったとしても、Debian には RPM パッケージを取り扱うプログラム <command>rpm</command> がパッケージとして用意されており、Debian では RPM パッケージフォーマットを取り扱うことができます。しかしながら、パッケージから情報を引き出したり、整合性を検証するための操作は制限されていることに注意してください。実のところ、RPM を Debian システムにインストールするために <command>rpm</command> を使うのは合理的ではありません。さらに RPM はネイティブソフトウェア (<command>dpkg</command> など) とは異なる自分自身のデータベースを使います。このため、2 つのパッケージングシステムを安定に共存させることを保証するのは不可能です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "On the other hand, the <emphasis role=\"pkg\">alien</emphasis> utility can convert RPM packages into Debian packages, and vice versa."
msgstr "他方で、<emphasis role=\"pkg\">alien</emphasis> ユーティリティを使えば以下に示す通り RPM パッケージを Debian パッケージに変換したりその逆を行うことが可能です。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "<emphasis>COMMUNITY</emphasis> Encouraging the adoption of <filename>.deb</filename>"
msgstr "<emphasis>COMMUNITY</emphasis> <filename>.deb</filename> の採用を働きかける"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "If you regularly use the <command>alien</command> program to install RPM packages coming from one of your providers, do not hesitate to write to them and amicably express your strong preference for the <filename>.deb</filename> format. Note that the format of the package is not everything: a <filename>.deb</filename> package built with <command>alien</command> or prepared for a version of Debian different than that which you use, or even for a derivative distribution like Ubuntu, would probably not offer the same level of quality and integration as a package specifically developed for Debian <emphasis role=\"distribution\">Jessie</emphasis>."
msgstr "提供者から受け取った RPM パッケージをインストールするために、日常的に <command>alien</command> プログラムを使っているのなら、提供者に手紙を出して <filename>.deb</filename> フォーマットを強く欲しがっていることを平和的に表現してください。ここで重要なのは単にパッケージのフォーマットを <filename>.deb</filename> フォーマットに変えるだけで事足りる問題ではないという点です。すなわち、<command>alien</command> で作った <filename>.deb</filename> パッケージや、あなたの使っているバージョンと異なる Debian のバージョン用として準備されたパッケージや、Ubuntu などの派生ディストリビューション用として準備されたパッケージは Debian <emphasis role=\"distribution\">Jessie</emphasis> 専用に開発されたパッケージと比べて品質や整合性が違うかもしれません。"

# Checked-By: Ryuunosuke Ayanokouzi;
# Tag: L-CFMD;
msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>fakeroot alien --to-deb phpMyAdmin-2.0.5-2.noarch.rpm</userinput> \n"
"<computeroutput>phpmyadmin_2.0.5-2_all.deb generated\n"
"$ </computeroutput><userinput>ls -s phpmyadmin_2.0.5-2_all.deb</userinput>\n"
"<computeroutput>  64 phpmyadmin_2.0.5-2_all.deb</computeroutput>"
msgstr ""
"\n"
"<computeroutput>$ </computeroutput><userinput>fakeroot alien --to-deb phpMyAdmin-2.0.5-2.noarch.rpm</userinput> \n"
"<computeroutput>phpmyadmin_2.0.5-2_all.deb generated\n"
"$ </computeroutput><userinput>ls -s phpmyadmin_2.0.5-2_all.deb</userinput>\n"
"<computeroutput>  64 phpmyadmin_2.0.5-2_all.deb</computeroutput>"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "You will find that this process is extremely simple. You must know, however, that the package generated does not have any dependency information, since the dependencies in the two packaging formats don't have systematic correspondence. The administrator must thus manually ensure that the converted package will function correctly, and this is why Debian packages thus generated should be avoided as much as possible. Fortunately, Debian has the largest collection of software packages of all distributions, and it is likely that whatever you seek is already in there."
msgstr "見ての通り <command>alien</command> を使った変換作業は極めて単純です。しかしながら、生成されたパッケージには依存関係の情報が含まれないことを知らなければいけません。なぜなら、2 つのパッケージフォーマットの依存関係の間に系統的な対応関係がないからです。管理者は変換されたパッケージが正しく動くことを手作業で保証しなければいけません。そのため、生成された Debian パッケージを使うのは可能な限り避けるべきです。幸いなことに、Debian が用意しているソフトウェアパッケージの数はすべてのディストリビューションの中で最も多く、依存関係の解決に苦労することはないでしょう。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "Looking at the man page for the <command>alien</command> command, you will also note that this program handles other packaging formats, especially the one used by the Slackware distribution (it is made of a simple <filename>tar.gz</filename> archive)."
msgstr "<command>alien</command> コマンドの man ページを見ると、<command>alien</command> が他のパッケージフォーマット、特に (単純な <filename>tar.gz</filename> アーカイブで作られている) Slackware ディストリビューションで使われているフォーマット、を取り扱うことも可能なことに気が付くでしょう。"

# Checked-By: Ryuunosuke Ayanokouzi;
msgid "The stability of the software deployed using the <command>dpkg</command> tool contributes to Debian's fame. The APT suite of tools, described in the following chapter, preserves this advantage, while relieving the administrator from managing the status of packages, a necessary but difficult task."
msgstr "<command>dpkg</command> ツールを使って配備されたソフトウェアの安定性は Debian の名声に寄与しています。次の章で説明する APT ツール集はこの長所を引き継いで、さらに、管理者が不可欠だが難しい作業であるパッケージの状態管理をしなくても済むようにしました。"

#~ msgid "Before multi-arch, when you wanted to uses a 32 bit appliction on a 64 bit system, you had to install <emphasis role=\"pkg\">ia32-libs</emphasis> to have 32 bit versions of the most popular libraries. That package was a huge hack that repackaged 32 bit libraries in an “amd64” package."
#~ msgstr "マルチアーキテクチャ以前、32 ビットアプリケーションを 64 ビットシステムで実行したければ、<emphasis role=\"pkg\">ia32-libs</emphasis> をインストールすることで、システムに最も一般的なライブラリの 32 ビット版を導入する必要がありました。このパッケージは amd64 パッケージ内の 32 ビットライブラリを再パッケージングした大規模なハックでした。"

#~ msgid "<primary><emphasis role=\"pkg\">ia32-libs</emphasis></primary>"
#~ msgstr "<primary><emphasis role=\"pkg\">ia32-libs</emphasis></primary>"

#~ msgid "<emphasis>GOING FURTHER</emphasis> Virtual package versions"
#~ msgstr "<emphasis>GOING FURTHER</emphasis> 仮想パッケージのバージョン"

#~ msgid "Although today virtual packages can't have versions, this will not necessarily always be the case. Indeed, <command>apt</command> is already able to manage the versions of virtual packages and it is likely that <command>dpkg</command> eventually will too. We will then be able to write fields such as <literal>Provides: libstorable-perl (= 1.7)</literal> to indicate that a package provides the same functionality as <emphasis role=\"pkg\">libstorable-perl</emphasis> in its 1.7 version."
#~ msgstr "今のところ仮想パッケージにはバージョンの概念がありませんが、この状況が常に正しいとは限りません。実際、<command>apt</command> は既に仮想パッケージのバージョンを取り扱うことが可能で、<command>dpkg</command> も将来的には可能になるでしょう。あるパッケージに <literal>Provides: libstorable-perl (= 1.7)</literal> のようなフィールドを宣言することで、そのパッケージが <emphasis role=\"pkg\">libstorable-perl</emphasis> の バージョン 1.7 と同じ機能を提供していることを表すことができるようになるのです。"
