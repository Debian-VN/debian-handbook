msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2016-09-07 09:00+0900\n"
"PO-Revision-Date: 2016-10-09 07:29+0000\n"
"Last-Translator: Giap Tran <txgvnn@gmail.com>\n"
"Language-Team: Vietnamese <https://hosted.weblate.org/projects/debian-handbook/06_apt/vi/>\n"
"Language: vi-VN\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 2.9-dev\n"

msgid "apt"
msgstr "apt"

msgid "apt-get"
msgstr "apt-get"

msgid "apt-cache"
msgstr "apt-cache"

msgid "aptitude"
msgstr "aptitude"

msgid "synaptic"
msgstr "synaptic"

msgid "sources.list"
msgstr "sources.list"

msgid "apt-cdrom"
msgstr "apt-cdrom"

msgid "Maintenance and Updates: The APT Tools"
msgstr "Bảo trì và Cập nhật: Công cụ APT"

msgid "What makes Debian so popular with administrators is how easily software can be installed and how easily the whole system can be updated. This unique advantage is largely due to the <emphasis>APT</emphasis> program, that Falcot Corp administrators studied with enthusiasm."
msgstr "Điều làm cho Debian trở nên phổ biến với các quản trị viên bởi vì nó dễ dàng cài đặt phần mềm và dễ dàng cập nhật toàn bộ hệ thống. Lợi thế duy nhất này chủ yếu là nhờ vào chương trình <emphasis>APT</emphasis> mà các nhà quản lý của Falcot Corp đã nhiệt tình nghiên cứu."

msgid "<indexterm><primary>APT</primary></indexterm> <indexterm><primary>Advanced Package Tool</primary></indexterm> APT is the abbreviation for Advanced Package Tool. What makes this program “advanced” is its approach to packages. It doesn't simply evaluate them individually, but it considers them as a whole and produces the best possible combination of packages depending on what is available and compatible (according to dependencies)."
msgstr ""

msgid "<emphasis>VOCABULARY</emphasis> Package source and source package"
msgstr "<emphasis>VOCABULARY</emphasis> Gói chứa mã nguồn và Nguồn chứa các gói"

msgid "The word <emphasis>source</emphasis> can be ambiguous. A source package — a package containing the source code of a program — should not be confused with a package source — a repository (website, FTP server, CD-ROM, local directory, etc.) which contains packages."
msgstr "Từ <emphasis>source</emphasis> dễ gây ra hiểu nhầm. Gói mã nguồn (source package) — gói chứa mã nguồn của chương trình — không nên bị nhầm lẫn với "Nguồn chứa các gói" (package source) — là kho lưu trữ các gói phần mềm (website, máy chủ FTP, CD-ROM, thư mục cục bộ trên máy tính, etc.)"

msgid "APT needs to be given a “list of package sources”: the file <filename>/etc/apt/sources.list</filename> will list the different repositories (or “sources”) that publish Debian packages. APT will then import the list of packages published by each of these sources. This operation is achieved by downloading <filename>Packages.xz</filename> or a variant using a different compression method (such as <filename>Packages.gz</filename> or <filename>.bz2</filename>) files (in case of a source of binary packages) and <filename>Sources.xz</filename> or a variant (in case of a source of source packages) and by analyzing their contents. When an old copy of these files is already present, APT can update it by only downloading the differences (see sidebar <xref linkend=\"sidebar.apt-pdiff\" />)."
msgstr "APT cần biết “danh sách các kho chứa gói phần mềm”: tệp tin <filename>/etc/apt/sources.list</filename> sẽ chứa danh sách các kho chứa khác nhau (gọi là “sources”) nơi cung cấp các các gói phần mềm chạy trên Debian. APT sẽ đọc và nhập danh sách các gói sẵn có (đã được xuất bản) trong mỗi một kho chứa (source) đó. Việc này được thực hiện bằng việc tải xuống tệp tin <filename>Packages.xz</filename> hoặc tệp tin tương tự nén bởi các phương pháp khác nhau ( ví dụ các tệp tin <filename>Packages.gz</filename> hoặc <filename>.bz2</filename>) ( trong trường hợp mã nguồn của gói nhị phân) và các tệp tin <filename>Sources.xz</filename> hoặc các tệp tương tự (trong trường hợp mã nguồn của các gói mã nguồn ) rồi sau đó phân tích nội dung các tệp tin đó. Khi phiên bản cũ của các files đó đã có, APT có thể cập nhật nó bằng cách chỉ tải xuống các file cập nhật khác (xem thêm sidebar <xref linkend=\"sidebar.apt-pdiff\" />)."

msgid "<primary><filename>Packages.xz</filename></primary>"
msgstr "<primary><filename>Packages.xz</filename></primary>"

msgid "<primary><filename>Sources.xz</filename></primary>"
msgstr "<primary><filename>Sources.xz</filename></primary>"

msgid "<emphasis>BACK TO BASICS</emphasis> <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> and <command>XZ</command> Compression"
msgstr "<emphasis>Kiến thức cơ bản</emphasis> <command>gzip</command>, <command>bzip2</command>, <command>LZMA</command> and <command>XZ</command> Compression"

msgid "<primary><command>gzip</command></primary>"
msgstr "<primary><command>gzip</command></primary>"

msgid "<primary><command>bzip2</command></primary>"
msgstr "<primary><command>bzip2</command></primary>"

msgid "<primary><command>lzma</command></primary>"
msgstr "<primary><command>lzma</command></primary>"

msgid "<primary><command>xz</command></primary>"
msgstr "<primary><command>xz</command></primary>"

msgid "A <filename>.gz</filename> extension refers to a file compressed with the <command>gzip</command> utility. <command>gzip</command> is the fast and efficient traditional Unix utility to compress files. Newer tools achieve better rates of compression but require more resources (computation time and memory) to compress and uncompress a file. Among them, and by order of appearance, there are <command>bzip2</command> (generating files with a <filename>.bz2</filename> extension), <command>lzma</command> (generating <filename>.lzma</filename> files) and <command>xz</command> (generating <filename>.xz</filename> files)."
msgstr "Đuôi mở rộng của tệp tin <filename>.gz</filename> chỉ ra nó được nén bằng tiện ích nén <command>gzip</command>. <command>gzip</command> là tiện ích nén truyền thống nhanh và hiệu quả của Unix. Các công cụ mới hơn có tỉ suất nén tốt hơn nhưng sẽ yêu cầu nhiều tài nguyên hơn (thời gian tính toán và bộ nhớ) để nén và giải nén tệp tin. Có thể kể ra đây, và xếp theo sự ra đời, gồm có <command>bzip2</command> (sinh ra tệp tin với phần mở rộng <filename>.bz2</filename>), <command>lzma</command> (sinh ra tệp <filename>.lzma</filename>) và <command>xz</command> (sinh ra tệp <filename>.xz</filename> )."

msgid "Filling in the <filename>sources.list</filename> File"
msgstr "Thêm nội dung vào tệp <filename>sources.list</filename>"

msgid "<primary><filename>sources.list</filename></primary>"
msgstr "<primary><filename>sources.list</filename></primary>"

msgid "<primary>source</primary><secondary>of packages</secondary>"
msgstr "<primary>kho chứa</primary><secondary>các gói</secondary>"

msgid "<primary>package</primary><secondary>source of</secondary>"
msgstr "<primary>gói</primary><secondary>kho chứa</secondary>"

msgid "<primary><filename>/etc/apt/sources.list</filename></primary>"
msgstr "<primary><filename>/etc/apt/sources.list</filename></primary>"

msgid "Syntax"
msgstr "Cú pháp"

msgid "Each active line of the <filename>/etc/apt/sources.list</filename> file contains the description of a source, made of 3 parts separated by spaces."
msgstr "Mỗi dòng (mà không bị chú thích) của tệp tin <filename>/etc/apt/sources.list</filename> chứa mô tả của kho chứa, tạo bởi  3 phần tách biệt bởi các khoảng trắng."

msgid "The first field indicates the source type:"
msgstr "Trường đầu tiên cho biết loại nguồn:
"

msgid "“<literal>deb</literal>” for binary packages,"
msgstr "“<literal>deb</literal>” chỉ ra đây là các gói nhị phân,"

msgid "“<literal>deb-src</literal>” for source packages."
msgstr "“<literal>deb-src</literal>” chỉ ra đây là các gói mã nguồn."

msgid "The second field gives the base URL of the source (combined with the filenames present in the <filename>Packages.gz</filename> files, it must give a full and valid URL): this can consist in a Debian mirror or in any other package archive set up by a third party. The URL can start with <literal>file://</literal> to indicate a local source installed in the system's file hierarchy, with <literal>http://</literal> to indicate a source accessible from a web server, or with <literal>ftp://</literal> for a source available on an FTP server. The URL can also start with <literal>cdrom:</literal> for CD-ROM/DVD-ROM/Blu-ray disc based installations, although this is less frequent, since network-based installation methods are more and more common."
msgstr "Trường thứ hai đưa ra URL cơ sở của nguồn (kết hợp với các tên tệp có trong các tệp <filename>Packages.gz</filename>, nó phải cung cấp URL đầy đủ và hợp lệ): có thể bao gồm trong một máy nhân bản Debian hoặc trong bất kỳ gói lưu trữ gói nào khác được tạo bởi một bên thứ ba. URL có thể bắt đầu bằng <literal>file://</literal> để chỉ ra một nguồn địa phương được cài đặt trong hệ thống phân cấp tập tin hệ thống, với <literal>http://</literal> để cho biết một nguồn có thể truy cập từ một máy chủ web, hoặc với <literal>ftp://</literal> cho một nguồn có sẵn trên máy chủ FTP. URL cũng có thể bắt đầu bằng <literal>cdrom:</literal> để cài đặt dựa trên đĩa CD-ROM/DVD-ROM/Blu-ray, mặc dù kiểu này ít thường xuyên hơn, vì các phương pháp cài đặt trên mạng ngày càng phổ biến."


msgid "The syntax of the last field depends on the structure of the repository. In the simplest cases, you can simply indicate a subdirectory (with a required trailing slash) of the desired source (this is often a simple “<filename>./</filename>” which refers to the absence of a subdirectory — the packages are then directly at the specified URL). But in the most common case, the repositories will be structured like a Debian mirror, with multiple distributions each having multiple components. In those cases, name the chosen distribution (by its “codename” — see the list in sidebar <xref linkend=\"sidebar.bruce-perens\" /> — or by the corresponding “suites” — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), then the components (or sections) to enable (chosen between <literal>main</literal>, <literal>contrib</literal>, and <literal>non-free</literal> in a typical Debian mirror)."
msgstr "Cú pháp của trường cuối cùng phụ thuộc vào cấu trúc của kho lưu trữ. Trong các trường hợp đơn giản nhất, bạn chỉ cần chỉ ra một thư mục con (cần có dấu gạch chéo phía trước ./) của nguồn mong muốn (thường đơn giản là “<filename>./</filename>” mà đề cập đến sự vắng mặt của một thư mục con - các gói này sau đó được lấy trực tiếp tại URL được chỉ định). Nhưng trong trường hợp phổ biến nhất, các kho sẽ được cấu trúc giống như một máy nhân bản Debian, với các phân phối mà mỗi bản có nhiều thành phần. Trong các trường hợp này, tên của bản phân phối đã chọn ( dựa trên “codename” - tên mã của nó có thể xem tại phần tham chiếu <xref linkend=\"sidebar.bruce-perens\" /> — hoặc bằng các bộ hoàn chỉnh tương ứng (“suites”) — <literal>stable</literal>, <literal>testing</literal>, <literal>unstable</literal>), và rổi cả các thành phần (hoặc các phần) để kích hoạt (được chọn giữa <literal>main</literal>, <literal>contrib</literal>, v <literal>non-free</literal> trong các máy nhân bản Debian)."


msgid "<emphasis>VOCABULARY</emphasis> The <literal>main</literal>, <literal>contrib</literal> and <literal>non-free</literal> archives"
msgstr "<emphasis>TỪ KHÓA</emphasis> Các nơi lưu trữ <literal>main</literal>, <literal>contrib</literal> and <literal>non-free</literal>"

msgid "<primary>section</primary><secondary><literal>main</literal></secondary>"
msgstr "<primary>section</primary><secondary><literal>main</literal></secondary>"

msgid "<primary><literal>main</literal>, section</primary>"
msgstr "<primary><literal>main</literal>, section</primary>"

msgid "<primary>section</primary><secondary><literal>contrib</literal></secondary>"
msgstr "<primary>section</primary><secondary><literal>contrib</literal></secondary>"

msgid "<primary><literal>contrib</literal>, section</primary>"
msgstr "<primary><literal>contrib</literal>, section</primary>"

msgid "<primary>section</primary><secondary><literal>non-free</literal></secondary>"
msgstr "<primary>section</primary><secondary><literal>non-free</literal></secondary>"

msgid "<primary><literal>non-free</literal>, section</primary>"
msgstr "<primary><literal>non-free</literal>, section</primary>"

msgid "<primary>component (of a repository)</primary>"
msgstr "<primary>thành phần (của kho lưu trữ)</primary>"

msgid "Debian uses three sections to differentiate packages according to the licenses chosen by the authors of each work. <literal>Main</literal> gathers all packages which fully comply with the Debian Free Software Guidelines."
msgstr "Debian sử dụng ba phần để phân biệt các gói theo giấy phép do tác giả của chúng chọn. <literal>Main</literal> tập hợp tất cả các gói hoàn toàn tuân thủ Hướng dẫn Phần mềm Tự do Debian."

msgid "The <literal>non-free</literal> archive is different because it contains software which does not (entirely) conform to these principles but which can nevertheless be distributed without restrictions. This archive, which is not officially part of Debian, is a service for users who could need some of those programs — however Debian always recommends giving priority to free software. The existence of this section represents a considerable problem for Richard M. Stallman and keeps the Free Software Foundation from recommending Debian to users."
msgstr "Các lưu trử <literal>non-free</literal> thì khác nhau vì nó có chứa phần mềm không hoàn toàn phù hợp với những nguyên tắc này nhưng có thể phân phối mà không có hạn chế. Kho lưu trữ này, không phải là một phần chính thức của Debian, là một dịch vụ dành cho những người dùng cần có một số chương trình - tuy nhiên Debian luôn đề nghị ưu tiên cho phần mềm tự do. Sự tồn tại của phần này thể hiện một vấn đề đáng kể nêu bởi Richard M.Stallman và khiến Free Software Foundation khuyến khích người dùng sử dụng Debian."

msgid "<literal>Contrib</literal> (contributions) is a set of open source software which cannot function without some non-free elements. These elements can be software from the <literal>non-free</literal> section, or non-free files such as game ROMs, BIOS of consoles, etc. <literal>Contrib</literal> also includes free software whose compilation requires proprietary elements. This was initially the case for the OpenOffice.org office suite, which used to require a proprietary Java environment."
msgstr "<literal>Contrib</literal> (đóng góp) Là một bộ phần mềm nguồn mở không thể hoạt động mà không có một số thành phần không phải là tự do. Các thành phần này có thể là phần mềm từ khu vực <literal>non-free</literal>, hoặc các tệp không tự do như ROM của các trò chơi, BIOS của bảng điều khiển, vv <literal>Contrib</literal> cũng bao gồm phần mềm tự do mà việc biên dịch yêu cầu các thành phần độc quyền. Điều này bắt đầu từ trường hợp của bộ Office trong OpenOffice.org, để chạy được nó cần sử dụng môi trường Java độc quyền."

msgid "<emphasis>TIP</emphasis> <filename>/etc/apt/sources.list.d/*.list</filename> files"
msgstr "<emphasis>MẸO SỬ DỤNG</emphasis> <filename>/etc/apt/sources.list.d/*.list</filename> tệp tin"

msgid "If many package sources are referenced, it can be useful to split them in multiple files. Each part is then stored in <filename>/etc/apt/sources.list.d/<replaceable>filename</replaceable>.list</filename> (see sidebar <xref linkend=\"sidebar.directory.d\" />)."
msgstr "Nếu nhiều nguồn gói được tham chiếu, có thể hữu ích khi chia chúng thành nhiều tệp. Mỗi phần sau đó được lưu trữ trong tên tập tin <filename>/etc/apt/sources.list.d/<replaceable>filename</replaceable>.list</filename> (tham khảo thêm ở phần hỗ trợ <xref linkend=\"sidebar.directory.d\" />)."

msgid "<primary><command>apt-cdrom</command></primary>"
msgstr "<primary><command>apt-cdrom</command></primary>"

msgid "The <literal>cdrom</literal> entries describe the CD/DVD-ROMs you have. Contrary to other entries, a CD-ROM is not always available since it has to be inserted into the drive and since only one disc can be read at a time. For those reasons, these sources are managed in a slightly different way, and need to be added with the <command>apt-cdrom</command> program, usually executed with the <literal>add</literal> parameter. The latter will then request the disc to be inserted in the drive and will browse its contents looking for <filename>Packages</filename> files. It will use these files to update its database of available packages (this operation is usually done by the <command>apt update</command> command). From then on, APT can require the disc to be inserted if it needs one of its packages."
msgstr ""

msgid "Repositories for <emphasis role=\"distribution\">Stable</emphasis> Users"
msgstr ""

msgid "Here is a standard <filename>sources.list</filename> for a system running the <emphasis role=\"distribution\">Stable</emphasis> version of Debian:"
msgstr ""

msgid "<filename>/etc/apt/sources.list</filename> file for users of Debian Stable"
msgstr ""

msgid ""
"# Security updates\n"
"deb http://security.debian.org/ jessie/updates main contrib non-free\n"
"deb-src http://security.debian.org/ jessie/updates main contrib non-free\n"
"\n"
"## Debian mirror\n"
"\n"
"# Base repository\n"
"deb http://ftp.debian.org/debian jessie main contrib non-free\n"
"deb-src http://ftp.debian.org/debian jessie main contrib non-free\n"
"\n"
"# Stable updates\n"
"deb http://ftp.debian.org/debian jessie-updates main contrib non-free\n"
"deb-src http://ftp.debian.org/debian jessie-updates main contrib non-free\n"
"\n"
"# Stable backports\n"
"deb http://ftp.debian.org/debian jessie-backports main contrib non-free\n"
"deb-src http://ftp.debian.org/debian jessie-backports main contrib non-free"
msgstr ""

msgid "This file lists all sources of packages associated with the <emphasis role=\"distribution\">Jessie</emphasis> version of Debian (the current <emphasis role=\"distribution\">Stable</emphasis> as of this writing). We opted to name “jessie” explicitly instead of using the corresponding “stable“ alias (<literal>stable</literal>, <literal>stable-updates</literal>, <literal>stable-backports</literal>) because we don't want to have the underlying distribution changed outside of our control when the next stable release comes out."
msgstr ""

msgid "Most packages will come from the “base repository” which contains all packages but is seldom updated (about once every 2 months for a “point release”). The other repositories are partial (they do not contain all packages) and can host updates (packages with newer version) that APT might install. The following sections will explain the purpose and the rules governing each of those repositories."
msgstr ""

msgid "Note that when the desired version of a package is available on several repositories, the first one listed in the <filename>sources.list</filename> file will be used. For this reason, non-official sources are usually added at the end of the file."
msgstr ""

msgid "As a side note, most of what this section says about <emphasis role=\"distribution\">Stable</emphasis> applies equally well to <emphasis role=\"distribution\">Oldstable</emphasis> since the latter is just an older <emphasis role=\"distribution\">Stable</emphasis> that is maintained in parallel."
msgstr ""

msgid "Security Updates"
msgstr ""

msgid "<primary><literal>security.debian.org</literal></primary>"
msgstr ""

msgid "<primary>security updates</primary>"
msgstr ""

msgid "<primary>updates</primary><secondary>security updates</secondary>"
msgstr ""

msgid "The security updates are not hosted on the usual network of Debian mirrors but on <literal>security.debian.org</literal> (on a small set of machines maintained by the <link linkend=\"dsa-team\">Debian System Administrators</link>). This archive contains security updates (prepared by the Debian Security Team and/or by package maintainers) for the <emphasis role=\"distribution\">Stable</emphasis> distribution."
msgstr ""

msgid "The server can also host security updates for <emphasis role=\"distribution\">Testing</emphasis> but this doesn't happen very often since those updates tend to reach <emphasis role=\"distribution\">Testing</emphasis> via the regular flow of updates coming from <emphasis role=\"distribution\">Unstable</emphasis>."
msgstr ""

msgid "Stable Updates"
msgstr ""

msgid "<primary>stable updates</primary>"
msgstr ""

msgid "<primary><literal>stable-updates</literal></primary>"
msgstr ""

msgid "<primary>updates</primary><secondary>stable updates</secondary>"
msgstr ""

msgid "Stable updates are not security sensitive but are deemed important enough to be pushed to users before the next stable point release."
msgstr ""

msgid "This repository will typically contain fixes for critical bugs which could not be fixed before release or which have been introduced by subsequent updates. Depending on the urgency, it can also contain updates for packages that have to evolve over time… like <emphasis role=\"pkg\">spamassassin</emphasis>'s spam detection rules, <emphasis role=\"pkg\">clamav</emphasis>'s virus database, or the daylight-saving time rules of all timezones (<emphasis role=\"pkg\">tzdata</emphasis>)."
msgstr ""

msgid "In practice, this repository is a subset of the <literal>proposed-updates</literal> repository, carefully selected by the Stable Release Managers."
msgstr ""

msgid "Proposed Updates"
msgstr ""

msgid "<primary><literal>proposed-updates</literal></primary>"
msgstr ""

msgid "<primary><literal>stable-proposed-updates</literal></primary>"
msgstr ""

msgid "Once published, the <emphasis role=\"distribution\">Stable</emphasis> distribution is only updated about once every 2 months. The <literal>proposed-updates</literal> repository is where the expected updates are prepared (under the supervision of the Stable Release Managers)."
msgstr ""

msgid "The security and stable updates documented in the former sections are always included in this repository, but there is more too, because package maintainers also have the opportunity to fix important bugs that do not deserve an immediate release."
msgstr ""

msgid "Anyone can use this repository to test those updates before their official publication. The extract below uses the <literal>jessie-proposed-updates</literal> alias which is both more explicit and more consistent since <literal>wheezy-proposed-updates</literal> also exists (for the <emphasis role=\"distribution\">Oldstable</emphasis> updates):"
msgstr ""

msgid "deb http://ftp.debian.org/debian jessie-proposed-updates main contrib non-free"
msgstr ""

msgid "Stable Backports"
msgstr ""

msgid "<primary><literal>stable-backports</literal></primary>"
msgstr ""

msgid "<primary>backport</primary>"
msgstr ""

msgid "<primary>updates</primary><secondary>backports</secondary>"
msgstr ""

msgid "The <literal>stable-backports</literal> repository hosts “package backports”. The term refers to a package of some recent software which has been recompiled for an older distribution, generally for <emphasis role=\"distribution\">Stable</emphasis>."
msgstr ""

msgid "When the distribution becomes a little dated, numerous software projects have released new versions that are not integrated into the current <emphasis role=\"distribution\">Stable</emphasis> (which is only modified to address the most critical problems, such as security problems). Since the <emphasis role=\"distribution\">Testing</emphasis> and <emphasis role=\"distribution\">Unstable</emphasis> distributions can be more risky, package maintainers sometimes offer recompilations of recent software applications for <emphasis role=\"distribution\">Stable</emphasis>, which has the advantage to limit potential instability to a small number of chosen packages. <ulink type=\"block\" url=\"http://backports.debian.org\" />"
msgstr ""

msgid "The <literal>stable-backports</literal> repository is now available on the usual Debian mirrors. But backports for <emphasis role=\"distribution\">Squeeze</emphasis> are still hosted on a dedicated server (<literal>backports.debian.org</literal>), and requires the following <filename>sources.list</filename> entry:"
msgstr ""

msgid "<primary><literal>backports.debian.org</literal></primary>"
msgstr ""

msgid "deb http://backports.debian.org/debian-backports squeeze-backports main contrib non-free"
msgstr ""

msgid "Backports from <literal>stable-backports</literal> are always created from packages available in <emphasis role=\"distribution\">Testing</emphasis>. This ensures that all installed backports will be upgradable to the corresponding stable version once the next stable release of Debian is available."
msgstr ""

msgid "Even though this repository provides newer versions of packages, APT will not install them unless you give explicit instructions to do so (or unless you have already done so with a former version of the given backport):"
msgstr ""

msgid ""
"<computeroutput>$ </computeroutput><userinput>sudo apt-get install <replaceable>package</replaceable>/jessie-backports\n"
"</userinput><computeroutput>$ </computeroutput><userinput>sudo apt-get install -t jessie-backports <replaceable>package</replaceable>\n"
"</userinput>"
msgstr ""

msgid "Repositories for <emphasis role=\"distribution\">Testing</emphasis>/<emphasis role=\"distribution\">Unstable</emphasis> Users"
msgstr ""

msgid "Here is a standard <filename>sources.list</filename> for a system running the <emphasis role=\"distribution\">Testing</emphasis> or <emphasis role=\"distribution\">Unstable</emphasis> version of Debian:"
msgstr ""

msgid "<filename>/etc/apt/sources.list</filename> file for users of Debian <emphasis role=\"distribution\">Testing</emphasis>/<emphasis role=\"distribution\">Unstable</emphasis>"
msgstr ""

msgid ""
"\n"
"# Unstable\n"
"deb http://ftp.debian.org/debian unstable main contrib non-free\n"
"deb-src http://ftp.debian.org/debian unstable main contrib non-free\n"
"\n"
"# Testing\n"
"deb http://ftp.debian.org/debian testing main contrib non-free\n"
"deb-src http://ftp.debian.org/debian testing main contrib non-free\n"
"\n"
"# Stable\n"
"deb http://ftp.debian.org/debian stable main contrib non-free\n"
"deb-src http://ftp.debian.org/debian stable main contrib non-free\n"
"\n"
"# Security updates\n"
"deb http://security.debian.org/ stable/updates main contrib non-free\n"
"deb http://security.debian.org/ testing/updates main contrib non-free\n"
"deb-src http://security.debian.org/ stable/updates main contrib non-free\n"
"deb-src http://security.debian.org/ testing/updates main contrib non-free"
msgstr ""

msgid "With this <filename>sources.list</filename> file APT will install packages from <emphasis role=\"distribution\">Unstable</emphasis>. If that is not desired, use the <literal>APT::Default-Release</literal> setting (see <xref linkend=\"sect.apt-upgrade\" />) to instruct APT to pick packages from another distribution (most likely <emphasis role=\"distribution\">Testing</emphasis> in this case)."
msgstr ""

msgid "There are good reasons to include all those repositories, even though a single one should be enough. <emphasis role=\"distribution\">Testing</emphasis> users will appreciate the possibility to cherry-pick a fixed package from <emphasis role=\"distribution\">Unstable</emphasis> when the version in <emphasis role=\"distribution\">Testing</emphasis> is affected by an annoying bug. On the opposite, <emphasis role=\"distribution\">Unstable</emphasis> users bitten by unexpected regressions have the possibility to downgrade packages to their (supposedly working) <emphasis role=\"distribution\">Testing</emphasis> version."
msgstr ""

msgid "The inclusion of <emphasis role=\"distribution\">Stable</emphasis> is more debatable but it often gives access to some packages which have been removed from the development versions. It also ensures that you get the latest updates for packages which have not been modified since the last stable release."
msgstr ""

msgid "The <emphasis role=\"distribution\">Experimental</emphasis> Repository"
msgstr ""

msgid "<primary><emphasis role=\"distribution\">Experimental</emphasis></primary>"
msgstr ""

msgid "The archive of <emphasis role=\"distribution\">Experimental</emphasis> packages is present on all Debian mirrors, and contains packages which are not in the <emphasis role=\"distribution\">Unstable</emphasis> version yet because of their substandard quality — they are often software development versions or pre-versions (alpha, beta, release candidate…). A package can also be sent there after undergoing subsequent changes which can generate problems. The maintainer then tries to uncover them with help from advanced users who can handle important issues. After this first stage, the package is moved into <emphasis role=\"distribution\">Unstable</emphasis>, where it reaches a much larger audience and where it will be tested in much more detail."
msgstr ""

msgid "<emphasis role=\"distribution\">Experimental</emphasis> is generally used by users who do not mind breaking their system and then repairing it. This distribution gives the possibility to import a package which a user wants to try or use as the need arises. That is exactly how Debian approaches it, since adding it in APT's <filename>sources.list</filename> file does not lead to the systematic use of its packages. The line to be added is:"
msgstr ""

msgid "deb http://ftp.debian.org/debian experimental main contrib non-free"
msgstr ""

msgid "Non-Official Resources: <literal>mentors.debian.net</literal>"
msgstr ""

msgid "<primary><literal>mentors.debian.net</literal></primary>"
msgstr ""

msgid "There are numerous non-official sources of Debian packages set up by advanced users who have recompiled some software (Ubuntu made this popular with their Personal Package Archive service), by programmers who make their creation available to all, and even by Debian developers who offer pre-versions of their package online."
msgstr ""

msgid "The <literal>mentors.debian.net</literal> site is interesting (although it only provides source packages), since it gathers packages created by candidates to the status of official Debian developer or by volunteers who wish to create Debian packages without going through that process of integration. These packages are made available without any guarantee regarding their quality; make sure that you check their origin and integrity and then test them before you consider using them in production."
msgstr ""

msgid "<emphasis>COMMUNITY</emphasis> The <literal>debian.net</literal> sites"
msgstr ""

msgid "<primary><emphasis>debian.net</emphasis></primary>"
msgstr ""

msgid "The <emphasis>debian.net</emphasis> domain is not an official resource of the Debian project. Each Debian developer may use that domain name for their own use. These websites can contain unofficial services (sometimes personal sites) hosted on a machine which does not belong to the project and set up by Debian developers, or even prototypes about to be moved on to <emphasis>debian.org</emphasis>. Two reasons can explain why some of these prototypes remain on <emphasis>debian.net</emphasis>: either no one has made the necessary effort to transform it into an official service (hosted on the <emphasis>debian.org</emphasis> domain, and with a certain guarantee of maintenance), or the service is too controversial to be officialized."
msgstr ""

msgid "Installing a package means giving root rights to its creator, because they decide on the contents of the initialization scripts which are run under that identity. Official Debian packages are created by volunteers who have been co-opted and reviewed and who can seal their packages so that their origin and integrity can be checked."
msgstr ""

msgid "In general, be wary of a package whose origin you don't know and which isn't hosted on one of the official Debian servers: evaluate the degree to which you can trust the creator, and check the integrity of the package. <ulink type=\"block\" url=\"http://mentors.debian.net/\" />"
msgstr ""

msgid "<emphasis>GOING FURTHER</emphasis> Old package versions: <literal>snapshot.debian.org</literal>"
msgstr ""

msgid "<primary><literal>snapshot.debian.org</literal></primary>"
msgstr ""

msgid "The <literal>snapshot.debian.org</literal> service, introduced in April 2010, can be used to “go backwards in time” and to find an old version of a package. It can be used for example to identify which version of a package introduced a regression, and more concretely, to come back to the former version while waiting for the regression fix."
msgstr ""

msgid "Caching Proxy for Debian Packages"
msgstr ""

msgid "<primary>proxy cache</primary>"
msgstr ""

msgid "<primary>cache, proxy</primary>"
msgstr ""

msgid "When an entire network of machines is configured to use the same remote server to download the same updated packages, any administrator knows that it would be beneficial to have an intermediate proxy acting as a network-local cache (see sidebar <xref linkend=\"sidebar.cache\" />)."
msgstr ""

msgid "You can configure APT to use a \"standard\" proxy (see <xref linkend=\"sect.apt-config\" /> for the APT side, and <xref linkend=\"sect.http-ftp-proxy\" /> for the proxy side), but the Debian ecosystem offers better options to solve this problem. The dedicated software presented in this section are smarter than a plain proxy cache because they can rely on the specific structure of APT repositories (for instance they know when individual files are obsolete or not, and thus adjust the time during which they are kept)."
msgstr ""

msgid "<primary><emphasis role=\"pkg\">apt-cacher</emphasis></primary>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">apt-cacher-ng</emphasis></primary>"
msgstr ""

msgid "<emphasis role=\"pkg\">apt-cacher</emphasis> and <emphasis role=\"pkg\">apt-cacher-ng</emphasis> work like usual proxy cache servers. APT's <filename>sources.list</filename> is left unchanged, but APT is configured to use them as proxy for outgoing requests."
msgstr ""

msgid "<primary><emphasis role=\"pkg\">approx</emphasis></primary>"
msgstr ""

msgid "<emphasis role=\"pkg\">approx</emphasis>, on the other hand, acts like an HTTP server that “mirrors” any number of remote repositories in its top-level URLs. The mapping between those top-level directories and the remote URLs of the repositories is stored in <filename>/etc/approx/approx.conf</filename>:"
msgstr ""

msgid ""
"\n"
"# &lt;name&gt; &lt;repository-base-url&gt;\n"
"debian   http://ftp.debian.org/debian\n"
"security http://security.debian.org"
msgstr ""

msgid "<emphasis role=\"pkg\">approx</emphasis> runs by default on port 9999 via inetd (see <xref linkend=\"sect.inetd\" />) and requires the users to adjust their <filename>sources.list</filename> file to point to the approx server:"
msgstr ""

msgid ""
"# Sample sources.list pointing to a local approx server\n"
"deb http://apt.falcot.com:9999/security jessie/updates main contrib non-free\n"
"deb http://apt.falcot.com:9999/debian jessie main contrib non-free\n"
"      "
msgstr ""

msgid "<command>aptitude</command>, <command>apt-get</command>, and <command>apt</command> Commands"
msgstr ""

msgid "<primary><command>apt</command></primary>"
msgstr ""

msgid "<primary><command>apt-get</command></primary>"
msgstr ""

msgid "<primary><command>aptitude</command></primary>"
msgstr ""

msgid "APT is a vast project, whose original plans included a graphical interface. It is based on a library which contains the core application, and <command>apt-get</command> is the first front end — command-line based — which was developed within the project. <command>apt</command> is a second command-line based front end provided by APT which overcomes some design mistakes of <command>apt-get</command>."
msgstr ""

msgid "Numerous other graphical interfaces then appeared as external projects: <command>synaptic</command>, <command>aptitude</command> (which includes both a text mode interface and a graphical one — even if not complete yet), <command>wajig</command>, etc. The most recommended interface, <command>apt</command>, is the one that we will use in the examples given in this section. Note however that <command>apt-get</command> and <command>aptitude</command> have a very similar command line syntax. When there are major differences between <command>apt</command>, <command>apt-get</command> and <command>aptitude</command>, these differences will be detailed."
msgstr ""

msgid "Initialization"
msgstr ""

msgid "For any work with APT, the list of available packages needs to be updated; this can be done simply through <command>apt update</command>. Depending on the speed of your connection, the operation can take a while since it involves downloading a certain number of <filename>Packages</filename>/<filename>Sources</filename>/<filename>Translation-<replaceable>language-code</replaceable></filename> files, which have gradually become bigger and bigger as Debian has developed (at least 10 MB of data for the <literal>main</literal> section). Of course, installing from a CD-ROM set does not require any downloading — in this case, the operation is very fast."
msgstr ""

msgid "<primary><command>apt update</command></primary>"
msgstr ""

msgid "<primary><command>apt-get update</command></primary>"
msgstr ""

msgid "<primary><command>aptitude update</command></primary>"
msgstr ""

msgid "Installing and Removing"
msgstr ""

msgid "<primary>package</primary><secondary>installation</secondary>"
msgstr ""

msgid "<primary>package</primary><secondary>removal</secondary>"
msgstr ""

msgid "<primary>installation</primary><secondary>package installation</secondary>"
msgstr ""

msgid "<primary>removal of a package</primary>"
msgstr ""

msgid "With APT, packages can be added or removed from the system, respectively with <command>apt install <replaceable>package</replaceable></command> and <command>apt remove <replaceable>package</replaceable></command>. In both cases, APT will automatically install the necessary dependencies or delete the packages which depend on the package that is being removed. The <command>apt purge <replaceable>package</replaceable></command> command involves a complete uninstallation — the configuration files are also deleted."
msgstr ""

msgid "<primary><command>apt install</command></primary>"
msgstr ""

msgid "<primary><command>apt remove</command></primary>"
msgstr ""

msgid "<primary><command>apt purge</command></primary>"
msgstr ""

msgid "<primary><command>apt-get install</command></primary>"
msgstr ""

msgid "<primary><command>apt-get remove</command></primary>"
msgstr ""

msgid "<primary><command>apt-get purge</command></primary>"
msgstr ""

msgid "<primary><command>aptitude install</command></primary>"
msgstr ""

msgid "<primary><command>aptitude remove</command></primary>"
msgstr ""

msgid "<primary><command>aptitude purge</command></primary>"
msgstr ""

msgid "<emphasis>TIP</emphasis> Installing the same selection of packages several times"
msgstr ""

msgid "It can be useful to systematically install the same list of packages on several computers. This can be done quite easily."
msgstr ""

msgid "First, retrieve the list of packages installed on the computer which will serve as the “model” to copy."
msgstr ""

msgid "<computeroutput>$ </computeroutput><userinput>dpkg --get-selections &gt;pkg-list</userinput>"
msgstr ""

msgid "The <filename>pkg-list</filename> file then contains the list of installed packages. Next, transfer the <filename>pkg-list</filename> file onto the computers you want to update and use the following commands:"
msgstr ""

msgid ""
"## Update dpkg's database of known packages\n"
"# <userinput>avail=`mktemp`</userinput>\n"
"# <userinput>apt-cache dumpavail &gt; \"$avail\"</userinput>\n"
"# <userinput>dpkg --merge-avail \"$avail\"</userinput>\n"
"# <userinput>rm -f \"$avail\"</userinput>\n"
"## Update dpkg's selections\n"
"# <userinput>dpkg --set-selections &lt; pkg-list</userinput>\n"
"## Ask apt-get to install the selected packages\n"
"# <userinput>apt-get dselect-upgrade</userinput>"
msgstr ""

msgid "The first commands records the list of available packages in the dpkg database, then <command>dpkg --set-selections</command> restores the selection of packages that you wish to install, and the <command>apt-get</command> invocation executes the required operations! <command>aptitude</command> does not have this command."
msgstr ""

msgid "<emphasis>TIP</emphasis> Removing and installing at the same time"
msgstr ""

msgid "It is possible to ask <command>apt</command> (or <command>apt-get</command>, or <command>aptitude</command>) to install certain packages and remove others on the same command line by adding a suffix. With an <command>apt install</command> command, add “<literal>-</literal>” to the names of the packages you wish to remove. With an <command>apt remove</command> command, add “<literal>+</literal>” to the names of the packages you wish to install."
msgstr ""

msgid "The next example shows two different ways to install <replaceable>package1</replaceable> and to remove <replaceable>package2</replaceable>."
msgstr ""

msgid ""
"# <userinput>apt install <replaceable>package1</replaceable> <replaceable>package2-</replaceable></userinput>\n"
"[...]\n"
"# <userinput>apt remove <replaceable>package1+</replaceable> <replaceable>package2</replaceable></userinput>\n"
"[...]"
msgstr ""

msgid "This can also be used to exclude packages which would otherwise be installed, for example due to a <literal>Recommends</literal>. In general, the dependency solver will use that information as a hint to look for alternative solutions."
msgstr ""

msgid "<emphasis>TIP</emphasis> <command>apt --reinstall</command> and <command>aptitude reinstall</command>"
msgstr ""

msgid "<primary>reinstallation</primary>"
msgstr ""

msgid "The system can sometimes be damaged after the removal or modification of files in a package. The easiest way to retrieve these files is to reinstall the affected package. Unfortunately, the packaging system finds that the latter is already installed and politely refuses to reinstall it; to avoid this, use the <literal>--reinstall</literal> option of the <command>apt</command> and <command>apt-get</command> commands. The following command reinstalls <emphasis role=\"pkg\">postfix</emphasis> even if it is already present:"
msgstr ""

msgid "<computeroutput># </computeroutput><userinput>apt --reinstall install postfix</userinput>"
msgstr ""

msgid "The <command>aptitude</command> command line is slightly different, but achieves the same result with <command>aptitude reinstall postfix</command>."
msgstr ""

msgid "The problem does not arise with <command>dpkg</command>, but the administrator rarely uses it directly."
msgstr ""

msgid "Be careful! Using <command>apt --reinstall</command> to restore packages modified during an attack will certainly not recover the system as it was. <xref linkend=\"sect.dealing-with-compromised-machine\" /> details the necessary steps to take with a compromised system."
msgstr ""

msgid "If the file <filename>sources.list</filename> mentions several distributions, it is possible to give the version of the package to install. A specific version number can be requested with <command>apt install <replaceable>package</replaceable>=<replaceable>version</replaceable></command>, but indicating its distribution of origin (<emphasis role=\"distribution\">Stable</emphasis>, <emphasis role=\"distribution\">Testing</emphasis> or <emphasis role=\"distribution\">Unstable</emphasis>) — with <command>apt install <replaceable>package</replaceable>/<replaceable>distribution</replaceable></command> — is usually preferred. With this command, it is possible to go back to an older version of a package (if for instance you know that it works well), provided that it is still available in one of the sources referenced by the <filename>sources.list</filename> file. Otherwise the <literal>snapshot.debian.org</literal> archive can come to the rescue (see sidebar <xref linkend=\"sidebar.snapshot.debian.org\" />)."
msgstr ""

msgid "Installation of the <emphasis role=\"distribution\">unstable</emphasis> version of <emphasis role=\"pkg\">spamassassin</emphasis>"
msgstr ""

msgid "<computeroutput># </computeroutput><userinput>apt install spamassassin/unstable</userinput>"
msgstr ""

msgid "<emphasis>GOING FURTHER</emphasis> The cache of <filename>.deb</filename> files"
msgstr ""

msgid "APT keeps a copy of each downloaded <filename>.deb</filename> file in the directory <filename>/var/cache/apt/archives/</filename>. In case of frequent updates, this directory can quickly take a lot of disk space with several versions of each package; you should regularly sort through them. Two commands can be used: <command>apt-get clean</command> entirely empties the directory; <command>apt-get autoclean</command> only removes packages which can no longer be downloaded (because they have disappeared from the Debian mirror) and are therefore clearly useless (the configuration parameter <literal>APT::Clean-Installed</literal> can prevent the removal of <filename>.deb</filename> files that are currently installed). Note that <command>apt</command> does not support those commands."
msgstr ""

msgid "System Upgrade"
msgstr ""

msgid "<primary>upgrade</primary><secondary>system upgrade</secondary>"
msgstr ""

msgid "<primary><command>apt upgrade</command></primary>"
msgstr ""

msgid "<primary><command>apt-get upgrade</command></primary>"
msgstr ""

msgid "<primary><command>aptitude safe-upgrade</command></primary>"
msgstr ""

msgid "Regular upgrades are recommended, because they include the latest security updates. To upgrade, use <command>apt upgrade</command>, <command>apt-get upgrade</command> or <command>aptitude safe-upgrade</command> (of course after <command>apt update</command>). This command looks for installed packages which can be upgraded without removing any packages. In other words, the goal is to ensure the least intrusive upgrade possible. <command>apt-get</command> is slightly more demanding than <command>aptitude</command> or <command>apt</command> because it will refuse to install packages which were not installed beforehand."
msgstr ""

msgid "<emphasis>TIP</emphasis> Incremental upgrade"
msgstr ""

msgid "As we explained earlier, the aim of the <command>apt update</command> command is to download for each package source the corresponding <filename>Packages</filename> (or <filename>Sources</filename>) file. However, even after a <command>bzip2</command> compression, these files can remain rather large (the <filename>Packages.xz</filename> for the <foreignphrase>main</foreignphrase> section of <emphasis role=\"distribution\">Jessie</emphasis> takes more than 6 MB). If you wish to upgrade regularly, these downloads can take up a lot of time."
msgstr ""

msgid "To speed up the process APT can download “diff” files containing the changes since the previous update, as opposed to the entire file. To achieve this, official Debian mirrors distribute different files which list the differences between one version of the <filename>Packages</filename> file and the following version. They are generated at each update of the archives and a history of one week is kept. Each of these “diff” files only takes a few dozen kilobytes for <emphasis role=\"distribution\">Unstable</emphasis>, so that the amount of data downloaded by a weekly <command>apt update</command> is often divided by 10. For distributions like <emphasis role=\"distribution\">Stable</emphasis> and <emphasis role=\"distribution\">Testing</emphasis>, which change less, the gain is even more noticeable."
msgstr ""

msgid "However, it can sometimes be of interest to force the download of the entire <filename>Packages</filename> file, especially when the last upgrade is very old and when the mechanism of incremental differences would not contribute much. This can also be interesting when network access is very fast but when the processor of the machine to upgrade is rather slow, since the time saved on the download is more than lost when the computer calculates the new versions of these files (starting with the older versions and applying the downloaded differences). To do that, you can use the configuration parameter <literal>Acquire::Pdiffs</literal> and set it to <literal>false</literal>."
msgstr ""

msgid "<command>apt</command> will generally select the most recent version number (except for packages from <emphasis role=\"distribution\">Experimental</emphasis> and <emphasis role=\"distribution\">stable-backports</emphasis>, which are ignored by default whatever their version number). If you specified <emphasis role=\"distribution\">Testing</emphasis> or <emphasis role=\"distribution\">Unstable</emphasis> in your <filename>sources.list</filename>, <command>apt upgrade</command> will switch most of your <emphasis role=\"distribution\">Stable</emphasis> system to <emphasis role=\"distribution\">Testing</emphasis> or <emphasis role=\"distribution\">Unstable</emphasis>, which might not be what you intended."
msgstr ""

msgid "To tell <command>apt</command> to use a specific distribution when searching for upgraded packages, you need to use the <literal>-t</literal> or <literal>--target-release</literal> option, followed by the name of the distribution you want (for example: <command>apt -t stable upgrade</command>). To avoid specifying this option every time you use <command>apt</command>, you can add <literal>APT::Default-Release \"stable\";</literal> in the file <filename>/etc/apt/apt.conf.d/local</filename>."
msgstr ""

msgid "<primary><command>apt full-upgrade</command></primary>"
msgstr ""

msgid "<primary><command>apt dist-upgrade</command></primary>"
msgstr ""

msgid "<primary><command>apt-get dist-upgrade</command></primary>"
msgstr ""

msgid "<primary><command>aptitude dist-upgrade</command></primary>"
msgstr ""

msgid "<primary><command>aptitude full-upgrade</command></primary>"
msgstr ""

msgid "For more important upgrades, such as the change from one major Debian version to the next, you need to use <command>apt full-upgrade</command>. With this instruction, <command>apt</command> will complete the upgrade even if it has to remove some obsolete packages or install new dependencies. This is also the command used by users who work daily with the Debian <emphasis role=\"distribution\">Unstable</emphasis> release and follow its evolution day by day. It is so simple that it hardly needs explanation: APT's reputation is based on this great functionality."
msgstr ""

msgid "Unlike <command>apt</command> and <command>aptitude</command>, <command>apt-get</command> doesn't know the <command>full-upgrade</command> command. Instead, you should use <command>apt-get dist-upgrade</command> (”distribution upgrade”), the historical and well-known command that <command>apt</command> and <command>aptitude</command> also accept for the convenience of users who got used to it."
msgstr ""

msgid "Configuration Options"
msgstr ""

msgid "<primary>APT</primary><secondary>configuration</secondary>"
msgstr ""

msgid "<primary><filename>apt.conf.d/</filename></primary>"
msgstr ""

msgid "<primary><filename>/etc/apt/apt.conf.d/</filename></primary>"
msgstr ""

msgid "Besides the configuration elements already mentioned, it is possible to configure certain aspects of APT by adding directives in a file of the <filename>/etc/apt/apt.conf.d/</filename> directory. Remember for instance that it is possible for APT to tell <command>dpkg</command> to ignore file conflict errors by specifying <literal>DPkg::options { \"--force-overwrite\"; }</literal>."
msgstr ""

msgid "If the Web can only be accessed through a proxy, add a line like <literal>Acquire::http::proxy \"http://<replaceable>yourproxy</replaceable>:3128\"</literal>. For an FTP proxy, write <literal>Acquire::ftp::proxy \"ftp://<replaceable>yourproxy</replaceable>\"</literal>. To discover more configuration options, read the <citerefentry><refentrytitle>apt.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry> manual page with the <command>man apt.conf</command> command (for details on manual pages, see <xref linkend=\"sect.manual-pages\" />)."
msgstr ""

msgid "<emphasis>BACK TO BASICS</emphasis> Directories ending in <filename>.d</filename>"
msgstr ""

msgid "<primary><filename>.d</filename></primary>"
msgstr ""

msgid "Directories with a <filename>.d</filename> suffix are used more and more often. Each directory represents a configuration file which is split over multiple files. In this sense, all of the files in <filename>/etc/apt/apt.conf.d/</filename> are instructions for the configuration of APT. APT includes them in alphabetical order, so that the last ones can modify a configuration element defined in one of the first ones."
msgstr ""

msgid "This structure brings some flexibility to the machine administrator and to the package maintainers. Indeed, the administrator can easily modify the configuration of the software by adding a ready-made file in the directory in question without having to change an existing file. Package maintainers use the same approach when they need to adapt the configuration of another software to ensure that it perfectly co-exists with theirs. The Debian policy explicitly forbids modifying configuration files of other packages — only users are allowed to do this. Remember that during a package upgrade, the user gets to choose the version of the configuration file that should be kept when a modification has been detected. Any external modification of the file would trigger that request, which would disturb the administrator, who is sure not to have changed anything."
msgstr ""

msgid "Without a <filename>.d</filename> directory, it is impossible for an external package to change the settings of a program without modifying its configuration file. Instead it must invite the user to do it themselves and lists the operations to be done in the file <filename>/usr/share/doc/<replaceable>package</replaceable>/README.Debian</filename>."
msgstr ""

msgid "Depending on the application, the <filename>.d</filename> directory is used directly or managed by an external script which will concatenate all the files to create the configuration file itself. It is important to execute the script after any change in that directory so that the most recent modifications are taken into account. In the same way, it is important not to work directly in the configuration file created automatically, since everything would be lost at the next execution of the script. The chosen method (<filename>.d</filename> directory used directly or a file generated from that directory) is usually dictated by implementation constraints, but in both cases the gains in terms of configuration flexibility more than make up for the small complications that they entail. The Exim 4 mail server is an example of the generated file method: it can be configured through several files (<filename>/etc/exim4/conf.d/*</filename>) which are concatenated into <filename>/var/lib/exim4/config.autogenerated</filename> by the <command>update-exim4.conf</command> command."
msgstr ""

msgid "Managing Package Priorities"
msgstr ""

msgid "One of the most important aspects in the configuration of APT is the management of the priorities associated with each package source. For instance, you might want to extend one distribution with one or two newer packages from <emphasis role=\"distribution\">Testing</emphasis>, <emphasis role=\"distribution\">Unstable</emphasis> or <emphasis role=\"distribution\">Experimental</emphasis>. It is possible to assign a priority to each available package (the same package can have several priorities depending on its version or the distribution providing it). These priorities will influence APT's behavior: for each package, it will always select the version with the highest priority (except if this version is older than the installed one and if its priority is less than 1000)."
msgstr ""

msgid "<primary>APT</primary><secondary><foreignphrase>pinning</foreignphrase></secondary>"
msgstr ""

msgid "<primary>pinning, APT pinning</primary>"
msgstr ""

msgid "<primary>package</primary><secondary>priority</secondary>"
msgstr ""

msgid "<primary>priority</primary><secondary>package priority</secondary>"
msgstr ""

msgid "<primary>APT</primary><secondary>preferences</secondary>"
msgstr ""

msgid "<primary><filename>preferences</filename></primary>"
msgstr ""

msgid "<primary><filename>/etc/apt/preferences</filename></primary>"
msgstr ""

msgid "APT defines several default priorities. Each installed package version has a priority of 100. A non-installed version has a priority of 500 by default, but it can jump to 990 if it is part of the target release (defined with the <literal>-t</literal> command-line option or the <literal>APT::Default-Release</literal> configuration directive)."
msgstr ""

msgid "You can modify the priorities by adding entries in the <filename>/etc/apt/preferences</filename> file with the names of the affected packages, their version, their origin and their new priority."
msgstr ""

msgid "APT will never install an older version of a package (that is, a package whose version number is lower than the one of the currently installed package) except if its priority is higher than 1000. APT will always install the highest priority package which follows this constraint. If two packages have the same priority, APT installs the newest one (whose version number is the highest). If two packages of same version have the same priority but differ in their content, APT installs the version that is not installed (this rule has been created to cover the case of a package update without the increment of the revision number, which is usually required)."
msgstr ""

msgid "In more concrete terms, a package whose priority is less than 0 will never be installed. A package with a priority ranging between 0 and 100 will only be installed if no other version of the package is already installed. With a priority between 100 and 500, the package will only be installed if there is no other newer version installed or available in another distribution. A package of priority between 501 and 990 will only be installed if there is no newer version installed or available in the target distribution. With a priority between 990 and 1000, the package will be installed except if the installed version is newer. A priority greater than 1000 will always lead to the installation of the package even if it forces APT to downgrade to an older version."
msgstr ""

msgid "When APT checks <filename>/etc/apt/preferences</filename>, it first takes into account the most specific entries (often those specifying the concerned package), then the more generic ones (including for example all the packages of a distribution). If several generic entries exist, the first match is used. The available selection criteria include the package's name and the source providing it. Every package source is identified by the information contained in a <filename>Release</filename> file that APT downloads together with the <filename>Packages</filename> files. It specifies the origin (usually “Debian” for the packages of official mirrors, but it can also be a person's or an organization's name for third-party repositories). It also gives the name of the distribution (usually <emphasis role=\"distribution\">Stable</emphasis>, <emphasis role=\"distribution\">Testing</emphasis>, <emphasis role=\"distribution\">Unstable</emphasis> or <emphasis role=\"distribution\">Experimental</emphasis> for the standard distributions provided by Debian) together with its version (for example 8 for Debian <emphasis role=\"distribution\">Jessie</emphasis>). Let's have a look at its syntax through some realistic case studies of this mechanism."
msgstr ""

msgid "<emphasis>SPECIFIC CASE</emphasis> Priority of <emphasis role=\"distribution\">experimental</emphasis>"
msgstr ""

msgid "If you listed <emphasis role=\"distribution\">Experimental</emphasis> in your <filename>sources.list</filename> file, the corresponding packages will almost never be installed because their default APT priority is 1. This is of course a specific case, designed to keep users from installing <emphasis role=\"distribution\">Experimental</emphasis> packages by mistake. The packages can only be installed by typing <command>aptitude install <replaceable>package</replaceable>/experimental</command> — users typing this command can only be aware of the risks that they take. It is still possible (though <emphasis>not</emphasis> recommended) to treat packages of <emphasis role=\"distribution\">Experimental</emphasis> like those of other distributions by giving them a priority of 500. This is done with a specific entry in <filename>/etc/apt/preferences</filename>:"
msgstr ""

msgid ""
"Package: *\n"
"Pin: release a=experimental\n"
"Pin-Priority: 500"
msgstr ""

msgid "Let's suppose that you only want to use packages from the stable version of Debian. Those provided in other versions should not be installed except if explicitly requested. You could write the following entries in the <filename>/etc/apt/preferences</filename> file:"
msgstr ""

msgid ""
"Package: *\n"
"Pin: release a=stable\n"
"Pin-Priority: 900\n"
"\n"
"Package: *\n"
"Pin: release o=Debian\n"
"Pin-Priority: -10"
msgstr ""

msgid "<literal>a=stable</literal> defines the name of the selected distribution. <literal>o=Debian</literal> limits the scope to packages whose origin is “Debian”."
msgstr ""

msgid "Let's now assume that you have a server with several local programs depending on the version 5.14 of Perl and that you want to ensure that upgrades will not install another version of it. You could use this entry:"
msgstr ""

msgid ""
"Package: perl\n"
"Pin: version 5.14*\n"
"Pin-Priority: 1001"
msgstr ""

msgid "The reference documentation for this configuration file is available in the manual page <citerefentry><refentrytitle>apt_preferences</refentrytitle><manvolnum>5</manvolnum></citerefentry>, which you can display with <command>man apt_preferences</command>."
msgstr ""

msgid "<emphasis>TIP</emphasis> Comments in <filename>/etc/apt/preferences</filename>"
msgstr ""

msgid "<primary><literal>Explanation</literal></primary>"
msgstr ""

msgid "<primary><literal>Pin</literal></primary>"
msgstr ""

msgid "<primary><literal>Pin-Priority</literal></primary>"
msgstr ""

msgid "There is no official syntax to put comments in the <filename>/etc/apt/preferences</filename> file, but some textual descriptions can be provided by putting one or more “<literal>Explanation</literal>” fields at the start of each entry:"
msgstr ""

msgid ""
"Explanation: The package xserver-xorg-video-intel provided\n"
"Explanation: in experimental can be used safely\n"
"Package: xserver-xorg-video-intel\n"
"Pin: release a=experimental\n"
"Pin-Priority: 500"
msgstr ""

msgid "Working with Several Distributions"
msgstr ""

msgid "<command>apt</command> being such a marvelous tool, it is tempting to pick packages coming from other distributions. For example, after having installed a <emphasis role=\"distribution\">Stable</emphasis> system, you might want to try out a software package available in <emphasis role=\"distribution\">Testing</emphasis> or <emphasis role=\"distribution\">Unstable</emphasis> without diverging too much from the system's initial state."
msgstr ""

msgid "Even if you will occasionally encounter problems while mixing packages from different distributions, <command>apt</command> manages such coexistence very well and limits risks very effectively. The best way to proceed is to list all distributions used in <filename>/etc/apt/sources.list</filename> (some people always put the three distributions, but remember that <emphasis role=\"distribution\">Unstable</emphasis> is reserved for experienced users) and to define your reference distribution with the <literal>APT::Default-Release</literal> parameter (see <xref linkend=\"sect.apt-upgrade\" />)."
msgstr ""

msgid "Let's suppose that <emphasis role=\"distribution\">Stable</emphasis> is your reference distribution but that <emphasis role=\"distribution\">Testing</emphasis> and <emphasis role=\"distribution\">Unstable</emphasis> are also listed in your <filename>sources.list</filename> file. In this case, you can use <command>apt install <replaceable>package</replaceable>/testing</command> to install a package from <emphasis role=\"distribution\">Testing</emphasis>. If the installation fails due to some unsatisfiable dependencies, let it solve those dependencies within <emphasis role=\"distribution\">Testing</emphasis> by adding the <literal>-t testing</literal> parameter. The same obviously applies to <emphasis role=\"distribution\">Unstable</emphasis>."
msgstr ""

msgid "In this situation, upgrades (<command>upgrade</command> and <command>full-upgrade</command>) are done within <emphasis role=\"distribution\">Stable</emphasis> except for packages already upgraded to another distribution: those will follow updates available in the other distributions. We will explain this behavior with the help of the default priorities set by APT below. Do not hesitate to use <command>apt-cache policy</command> (see sidebar <xref linkend=\"sidebar.apt-cache-policy\" />) to verify the given priorities."
msgstr ""

msgid "Everything centers around the fact that APT only considers packages of higher or equal version than the installed one (assuming that <filename>/etc/apt/preferences</filename> has not been used to force priorities higher than 1000 for some packages)."
msgstr ""

msgid "<emphasis>TIP</emphasis> <command>apt-cache policy</command>"
msgstr ""

msgid "To gain a better understanding of the mechanism of priority, do not hesitate to execute <command>apt-cache policy</command> to display the default priority associated with each package source. You can also use <command>apt-cache policy <replaceable>package</replaceable></command> to display the priorities of all available versions of a given package."
msgstr ""

msgid "Let's assume that you have installed version 1 of a first package from <emphasis role=\"distribution\">Stable</emphasis> and that version 2 and 3 are available respectively in <emphasis role=\"distribution\">Testing</emphasis> and <emphasis role=\"distribution\">Unstable</emphasis>. The installed version has a priority of 100 but the version available in <emphasis role=\"distribution\">Stable</emphasis> (the very same) has a priority of 990 (because it is part of the target release). Packages in <emphasis role=\"distribution\">Testing</emphasis> and <emphasis role=\"distribution\">Unstable</emphasis> have a priority of 500 (the default priority of a non-installed version). The winner is thus version 1 with a priority of 990. The package “stays in <emphasis role=\"distribution\">Stable</emphasis>”."
msgstr ""

msgid "Let's take the example of another package whose version 2 has been installed from <emphasis role=\"distribution\">Testing</emphasis>. Version 1 is available in <emphasis role=\"distribution\">Stable</emphasis> and version 3 in <emphasis role=\"distribution\">Unstable</emphasis>. Version 1 (of priority 990 — thus lower than 1000) is discarded because it is lower than the installed version. This only leaves version 2 and 3, both of priority 500. Faced with this alternative, APT selects the newest version, the one from <emphasis role=\"distribution\">Unstable</emphasis>.If you don't want a package installed from <emphasis role=\"distribution\">Testing</emphasis> to migrate to <emphasis role=\"distribution\">Unstable</emphasis>, you have to assign a priority lower than 500 (490 for example) to packages coming from <emphasis role=\"distribution\">Unstable</emphasis>. You can modify <filename>/etc/apt/preferences</filename> to this effect:"
msgstr ""

msgid ""
"Package: *\n"
"Pin: release a=unstable\n"
"Pin-Priority: 490"
msgstr ""

msgid "Tracking Automatically Installed Packages"
msgstr ""

msgid "One of the essential functionalities of <command>apt</command> is the tracking of packages installed only through dependencies. These packages are called “automatic”, and often include libraries for instance."
msgstr ""

msgid "With this information, when packages are removed, the package managers can compute a list of automatic packages that are no longer needed (because there is no “manually installed” packages depending on them). <command>apt-get autoremove</command> will get rid of those packages. <command>aptitude</command> and <command>apt</command> do not have this command: the former because it removes them automatically as soon as they are identified, and the latter probably because the user should not have to manually run such a command. In all cases, the tools display a clear message listing the affected packages."
msgstr ""

msgid "<primary><command>apt-mark auto</command></primary>"
msgstr ""

msgid "<primary><command>apt-mark manual</command></primary>"
msgstr ""

msgid "<primary><command>aptitude markauto</command></primary>"
msgstr ""

msgid "<primary><command>aptitude unmarkauto</command></primary>"
msgstr ""

msgid "It is a good habit to mark as automatic any package that you don't need directly so that they are automatically removed when they aren't necessary anymore. <command>apt-mark auto <replaceable>package</replaceable></command> will mark the given package as automatic whereas <command>apt-mark manual <replaceable>package</replaceable></command> does the opposite. <command>aptitude markauto</command> and <command>aptitude unmarkauto</command> work in the same way although they offer more features for marking many packages at once (see <xref linkend=\"sect.aptitude\" />). The console-based interactive interface of <command>aptitude</command> also makes it easy to review the “automatic flag” on many packages."
msgstr ""

msgid "<primary><command>aptitude why</command></primary>"
msgstr ""

msgid "People might want to know why an automatically installed package is present on the system. To get this information from the command line, you can use <command>aptitude why <replaceable>package</replaceable></command> (<command>apt</command> and <command>apt-get</command> have no similar feature):"
msgstr ""

msgid ""
"<computeroutput>$ </computeroutput><userinput>aptitude why python-debian\n"
"</userinput><computeroutput>i   aptitude         Recommends apt-xapian-index         \n"
"i A apt-xapian-index Depends    python-debian (&gt;= 0.1.15)\n"
"</computeroutput>"
msgstr ""

msgid "<emphasis>ALTERNATIVE</emphasis> <command>deborphan</command> and <command>debfoster</command>"
msgstr ""

msgid "<primary><command>deborphan</command></primary>"
msgstr ""

msgid "<primary><command>debfoster</command></primary>"
msgstr ""

msgid "In days where <command>apt</command>, <command>apt-get</command> and <command>aptitude</command> were not able to track automatic packages, there were two utilities producing lists of unnecessary packages: <command>deborphan</command> and <command>debfoster</command>."
msgstr ""

msgid "<command>deborphan</command> is the most rudimentary of both. It simply scans the <literal>libs</literal> and <literal>oldlibs</literal> sections (in the absence of supplementary instructions) looking for the packages that are currently installed and that no other package depends on. The resulting list can then serve as a basis to remove unneeded packages."
msgstr ""

msgid "<command>debfoster</command> has a more elaborate approach, very similar to APT's one: it maintains a list of packages that have been explicitly installed, and remembers what packages are really required between each invocation. If new packages appear on the system and if <command>debfoster</command> doesn't know them as required packages, they will be shown on the screen together with a list of their dependencies. The program then offers a choice: remove the package (possibly together with those that depend on it), mark it as explicitly required, or ignore it temporarily."
msgstr ""

msgid "The <command>apt-cache</command> Command"
msgstr ""

msgid "<primary><command>apt-cache</command></primary>"
msgstr ""

msgid "<primary>APT</primary><secondary>package search</secondary>"
msgstr ""

msgid "<primary>APT</primary><secondary>header display</secondary>"
msgstr ""

msgid "<primary>search of packages</primary>"
msgstr ""

msgid "<primary>package</primary><secondary>search</secondary>"
msgstr ""

msgid "The <command>apt-cache</command> command can display much of the information stored in APT's internal database. This information is a sort of cache since it is gathered from the different sources listed in the <filename>sources.list</filename> file. This happens during the <command>apt update</command> operation."
msgstr ""

msgid "<emphasis>VOCABULARY</emphasis> Cache"
msgstr ""

msgid "A cache is a temporary storage system used to speed up frequent data access when the usual access method is expensive (performance-wise). This concept can be applied in numerous situations and at different scales, from the core of microprocessors up to high-end storage systems."
msgstr ""

msgid "In the case of APT, the reference <filename>Packages</filename> files are those located on Debian mirrors. That said, it would be very ineffective to go through the network for every search that we might want to do in the database of available packages. That is why APT stores a copy of those files (in <filename>/var/lib/apt/lists/</filename>) and searches are done within those local files. Similarly, <filename>/var/cache/apt/archives/</filename> contains a cache of already downloaded packages to avoid downloading them again if you need to reinstall them after a removal."
msgstr ""

msgid "<primary><command>apt show</command></primary>"
msgstr ""

msgid "<primary><command>apt search</command></primary>"
msgstr ""

msgid "<primary><command>apt-cache show</command></primary>"
msgstr ""

msgid "<primary><command>apt-cache search</command></primary>"
msgstr ""

msgid "<primary><command>aptitude show</command></primary>"
msgstr ""

msgid "<primary><command>aptitude search</command></primary>"
msgstr ""

msgid "The <command>apt-cache</command> command can do keyword-based package searches with <command>apt-cache search <replaceable>keyword</replaceable></command>. It can also display the headers of the package's available versions with <command>apt-cache show <replaceable>package</replaceable></command>. This command provides the package's description, its dependencies, the name of its maintainer, etc. Note that <command>apt search</command>, <command>apt show</command>, <command>aptitude search</command>, <command>aptitude show</command> work in the same way."
msgstr ""

msgid "<emphasis>ALTERNATIVE</emphasis> <command>axi-cache</command>"
msgstr ""

msgid "<primary><command>axi-cache</command></primary>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">apt-xapian-index</emphasis></primary>"
msgstr ""

msgid "<command>apt-cache search</command> is a very rudimentary tool, basically implementing <command>grep</command> on package's descriptions. It often returns too many results or none at all when you include too many keywords."
msgstr ""

msgid "<command>axi-cache search <replaceable>term</replaceable></command>, on the other hand, provides better results, sorted by relevancy. It uses the <emphasis>Xapian</emphasis> search engine and is part of the <emphasis role=\"pkg\">apt-xapian-index</emphasis> package whichs indexes all package information (and more, like the <filename>.desktop</filename> files from all Debian packages). It knows about tags (see sidebar <xref linkend=\"sidebar.debtags\" />) and returns results in a matter of milliseconds."
msgstr ""

msgid ""
"$ <userinput>axi-cache search package use::searching</userinput>\n"
"105 results found.\n"
"Results 1-20:\n"
"100% packagesearch - GUI for searching packages and viewing package information\n"
"98% debtags - Enables support for package tags\n"
"94% debian-goodies - Small toolbox-style utilities \n"
"93% dpkg-awk - Gawk script to parse /var/lib/dpkg/{status,available} and Packages\n"
"93% goplay - games (and more) package browser using DebTags\n"
"[...]\n"
"87% apt-xapian-index - maintenance and search tools for a Xapian index of Debian packages\n"
"[...]\n"
"More terms: search debian searching strigi debtags bsearch libbsearch\n"
"More tags: suite::debian works-with::software:package role::program interface::commandline implemented-in::c++ admin::package-management use::analysing\n"
"`axi-cache more' will give more results\n"
"      "
msgstr ""

msgid "<primary><command>apt-cache policy</command></primary>"
msgstr ""

msgid "<primary><command>apt-cache dumpavail</command></primary>"
msgstr ""

msgid "<primary><command>apt-cache pkgnames</command></primary>"
msgstr ""

msgid "Some features are more rarely used. For instance, <command>apt-cache policy</command> displays the priorities of package sources as well as those of individual packages. Another example is <command>apt-cache dumpavail</command> which displays the headers of all available versions of all packages. <command>apt-cache pkgnames</command> displays the list of all the packages which appear at least once in the cache."
msgstr ""

msgid "Frontends: <command>aptitude</command>, <command>synaptic</command>"
msgstr ""

msgid "<primary><command>synaptic</command></primary>"
msgstr ""

msgid "<primary>APT</primary><secondary>interfaces</secondary>"
msgstr ""

msgid "APT is a C++ program whose code mainly resides in the <command>libapt-pkg</command> shared library. Using a shared library facilitates the creation of user interfaces (front-ends), since the code contained in the library can easily be reused. Historically, <command>apt-get</command> was only designed as a test front-end for <command>libapt-pkg</command> but its success tends to obscure this fact."
msgstr ""

msgid "<command>aptitude</command>"
msgstr ""

msgid "<command>aptitude</command> is an interactive program that can be used in semi-graphical mode on the console. You can browse the list of installed and available packages, look up all the available information, and select packages to install or remove. The program is designed specifically to be used by administrators, so that its default behaviors are much more intelligent than <command>apt-get</command>'s, and its interface much easier to understand."
msgstr ""

msgid "The <command>aptitude</command> package manager"
msgstr ""

msgid "When it starts, <command>aptitude</command> shows a list of packages sorted by state (installed, non-installed, or installed but not available on the mirrors — other sections display tasks, virtual packages, and new packages that appeared recently on mirrors). To facilitate thematic browsing, other views are available. In all cases, <command>aptitude</command> displays a list combining categories and packages on the screen. Categories are organized through a tree structure, whose branches can respectively be unfolded or closed with the <keycombo><keycap>Enter</keycap></keycombo>, <keycombo><keycap>[</keycap></keycombo> and <keycombo><keycap>]</keycap></keycombo> keys. <keycombo><keycap>+</keycap></keycombo> should be used to mark a package for installation, <keycombo><keycap>-</keycap></keycombo> to mark it for removal and <keycombo><keycap>_</keycap></keycombo> to purge it (note than these keys can also be used for categories, in which case the corresponding actions will be applied to all the packages of the category). <keycombo><keycap>u</keycap></keycombo> updates the lists of available packages and <keycombo action=\"simul\"><keycap>Shift</keycap><keycap>u</keycap></keycombo> prepares a global system upgrade. <keycombo><keycap>g</keycap></keycombo> switches to a summary view of the requested changes (and typing <keycombo><keycap>g</keycap></keycombo> again will apply the changes), and <keycombo><keycap>q</keycap></keycombo> quits the current view. If you are in the initial view, this will effectively close <command>aptitude</command>."
msgstr ""

msgid "<emphasis>DOCUMENTATION</emphasis> <command>aptitude</command>"
msgstr ""

msgid "This section does not cover the finer details of using <command>aptitude</command>, it rather focuses on giving you a survival kit to use it. <command>aptitude</command> is rather well documented and we advise you to use its complete manual available in the <emphasis role=\"pkg\">aptitude-doc-en</emphasis> package (see <filename>/usr/share/doc/aptitude/html/en/index.html</filename>)."
msgstr ""

msgid "To search for a package, you can type <keycombo><keycap>/</keycap></keycombo> followed by a search pattern. This pattern matches the name of the package, but can also be applied to the description (if preceded by <literal>~d</literal>), to the section (with <literal>~s</literal>) or to other characteristics detailed in the documentation. The same patterns can filter the list of displayed packages: type the <keycombo><keycap>l</keycap></keycombo> key (as in <foreignphrase>limit</foreignphrase>) and enter the pattern."
msgstr ""

msgid "Managing the “automatic flag” of Debian packages (see <xref linkend=\"sect.automatic-tracking\" />) is a breeze with <command>aptitude</command>. It is possible to browse the list of installed packages and mark packages as automatic with <keycombo action=\"simul\"><keycap>Shift</keycap> <keycap>m</keycap></keycombo> or to remove the mark with the <keycombo><keycap>m</keycap></keycombo> key. “Automatic packages” are displayed with an “A” in the list of packages. This feature also offers a simple way to visualize the packages in use on a machine, without all the libraries and dependencies that you don't really care about. The related pattern that can be used with <keycombo><keycap>l</keycap></keycombo> (to activate the filter mode) is <literal>~i!~M</literal>. It specifies that you only want to see installed packages (<literal>~i</literal>) not marked as automatic (<literal>!~M</literal>)."
msgstr ""

msgid "<emphasis>TOOL</emphasis> Using <command>aptitude</command> on the command-line interface"
msgstr ""

msgid "Most of <command>aptitude</command>'s features are accessible via the interactive interface as well as via command-lines. These command-lines will seem familiar to regular users of <command>apt-get</command> and <command>apt-cache</command>."
msgstr ""

msgid "The advanced features of <command>aptitude</command> are also available on the command-line. You can use the same package search patterns as in the interactive version. For example, if you want to cleanup the list of “manually installed” packages, and if you know that none of the locally installed programs require any particular libraries or Perl modules, you can mark the corresponding packages as automatic with a single command:"
msgstr ""

msgid "<computeroutput># </computeroutput><userinput>aptitude markauto '~slibs|~sperl'</userinput>"
msgstr ""

msgid "Here, you can clearly see the power of the search pattern system of <command>aptitude</command>, which enables the instant selection of all the packages in the <literal>libs</literal> and <literal>perl</literal> sections."
msgstr ""

msgid "Beware, if some packages are marked as automatic and if no other package depends on them, they will be removed immediately (after a confirmation request)."
msgstr ""

msgid "Managing Recommendations, Suggestions and Tasks"
msgstr ""

msgid "Another interesting feature of <command>aptitude</command> is the fact that it respects recommendations between packages while still giving users the choice not to install them on a case by case basis. For example, the <emphasis role=\"pkg\">gnome</emphasis> package recommends <emphasis role=\"pkg\">gdebi</emphasis> (among others). When you select the former for installation, the latter will also be selected (and marked as automatic if not already installed on the system). Typing <keycombo><keycap>g</keycap></keycombo> will make it obvious: <emphasis role=\"pkg\">gdebi</emphasis> appears on the summary screen of pending actions in the list of packages installed automatically to satisfy dependencies. However, you can decide not to install it by deselecting it before confirming the operations."
msgstr ""

msgid "Note that this recommendation tracking feature does not apply to upgrades. For instance, if a new version of <emphasis role=\"pkg\">gnome</emphasis> recommends a package that it did not recommend formerly, the package won't be marked for installation. However, it will be listed on the upgrade screen so that the administrator can still select it for installation."
msgstr ""

msgid "Suggestions between packages are also taken into account, but in a manner adapted to their specific status. For example, since <emphasis role=\"pkg\">gnome</emphasis> suggests <emphasis role=\"pkg\">dia-gnome</emphasis>, the latter will be displayed on the summary screen of pending actions (in the section of packages suggested by other packages). This way, it is visible and the administrator can decide whether to take the suggestion into account or not. Since it is only a suggestion and not a dependency or a recommendation, the package will not be selected automatically — its selection requires a manual intervention from the user (thus, the package will not be marked as automatic)."
msgstr ""

msgid "In the same spirit, remember that <command>aptitude</command> makes intelligent use of the concept of task. Since tasks are displayed as categories in the screens of packages lists, you can either select a full task for installation or removal, or browse the list of packages included in the task to select a smaller subset."
msgstr ""

msgid "Better Solver Algorithms"
msgstr ""

msgid "To conclude this section, let's note that <command>aptitude</command> has more elaborate algorithms compared to <command>apt-get</command> when it comes to resolving difficult situations. When a set of actions is requested and when these combined actions would lead to an incoherent system, <command>aptitude</command> evaluates several possible scenarios and presents them in order of decreasing relevance. However, these algorithms are not failproof. Fortunately there is always the possibility to manually select the actions to perform. When the currently selected actions lead to contradictions, the upper part of the screen indicates a number of “broken” packages (and you can directly navigate to those packages by pressing <keycombo><keycap>b</keycap></keycombo>). It is then possible to manually build a solution for the problems found. In particular, you can get access to the different available versions by simply selecting the package with <keycombo><keycap>Enter</keycap></keycombo>. If the selection of one of these versions solves the problem, you should not hesitate to use the function. When the number of broken packages gets down to zero, you can safely go to the summary screen of pending actions for a last check before you apply them."
msgstr ""

msgid "<emphasis>NOTE</emphasis> <command>aptitude</command>'s log"
msgstr ""

msgid "Like <command>dpkg</command>, <command>aptitude</command> keeps a trace of executed actions in its logfile (<filename>/var/log/aptitude</filename>). However, since both commands work at a very different level, you cannot find the same information in their respective logfiles. While <command>dpkg</command> logs all the operations executed on individual packages step by step, <command>aptitude</command> gives a broader view of high-level operations like a system-wide upgrade."
msgstr ""

msgid "Beware, this logfile only contains a summary of operations performed by <command>aptitude</command>. If other front-ends (or even <command>dpkg</command> itself) are occasionally used, then <command>aptitude</command>'s log will only contain a partial view of the operations, so you can't rely on it to build a trustworthy history of the system."
msgstr ""

msgid "<command>synaptic</command>"
msgstr ""

msgid "<command>synaptic</command> is a graphical package manager for Debian which features a clean and efficient graphical interface based on GTK+/GNOME. Its many ready-to-use filters give fast access to newly available packages, installed packages, upgradable packages, obsolete packages and so on. If you browse through these lists, you can select the operations to be done on the packages (install, upgrade, remove, purge); these operations are not performed immediately, but put into a task list. A single click on a button then validates the operations, and they are performed in one go."
msgstr ""

msgid "<command>synaptic</command> package manager"
msgstr ""

msgid "Checking Package Authenticity"
msgstr ""

msgid "<primary>package</primary><secondary>authenticity check</secondary>"
msgstr ""

msgid "<primary>package</primary><secondary>seal</secondary>"
msgstr ""

msgid "<primary>package</primary><secondary>signature</secondary>"
msgstr ""

msgid "<primary>signature</primary><secondary>package signature</secondary>"
msgstr ""

msgid "<primary>authentication</primary><secondary>package authentication</secondary>"
msgstr ""

msgid "Security is very important for Falcot Corp administrators. Accordingly, they need to ensure that they only install packages which are guaranteed to come from Debian with no tampering on the way. A computer cracker could try to add malicious code to an otherwise legitimate package. Such a package, if installed, could do anything the cracker designed it to do, including for instance disclosing passwords or confidential information. To circumvent this risk, Debian provides a tamper-proof seal to guarantee — at install time — that a package really comes from its official maintainer and hasn't been modified by a third party."
msgstr ""

msgid "The seal works with a chain of cryptographical hashes and a signature. The signed file is the <filename>Release</filename> file, provided by the Debian mirrors. It contains a list of the <filename>Packages</filename> files (including their compressed forms, <filename>Packages.gz</filename> and <filename>Packages.xz</filename>, and the incremental versions), along with their MD5, SHA1 and SHA256 hashes, which ensures that the files haven't been tampered with. These <filename>Packages</filename> files contain a list of the Debian packages available on the mirror, along with their hashes, which ensures in turn that the contents of the packages themselves haven't been altered either."
msgstr ""

msgid "<primary><command>apt-key</command></primary>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">debian-archive-keyring</emphasis></primary>"
msgstr ""

msgid "<primary><filename>/etc/apt/trusted.gpg.d/</filename></primary>"
msgstr ""

msgid "<primary><filename>Release.gpg</filename></primary>"
msgstr ""

msgid "The trusted keys are managed with the <command>apt-key</command> command found in the <emphasis role=\"pkg\">apt</emphasis> package. This program maintains a keyring of GnuPG public keys, which are used to verify signatures in the <filename>Release.gpg</filename> files available on the mirrors. It can be used to add new keys manually (when non-official mirrors are needed). Generally however, only the official Debian keys are needed. These keys are automatically kept up-to-date by the <emphasis role=\"pkg\">debian-archive-keyring</emphasis> package (which puts the corresponding keyrings in <filename>/etc/apt/trusted.gpg.d</filename>). However, the first installation of this particular package requires caution: even if the package is signed like any other, the signature cannot be verified externally. Cautious administrators should therefore check the fingerprints of imported keys before trusting them to install new packages:"
msgstr ""

msgid ""
"# <userinput>apt-key fingerprint</userinput>\n"
"/etc/apt/trusted.gpg.d/debian-archive-jessie-automatic.gpg\n"
"----------------------------------------------------------\n"
"pub   4096R/2B90D010 2014-11-21 [expires: 2022-11-19]\n"
"      Key fingerprint = 126C 0D24 BD8A 2942 CC7D  F8AC 7638 D044 2B90 D010\n"
"uid                  Debian Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;\n"
"\n"
"/etc/apt/trusted.gpg.d/debian-archive-jessie-security-automatic.gpg\n"
"-------------------------------------------------------------------\n"
"pub   4096R/C857C906 2014-11-21 [expires: 2022-11-19]\n"
"      Key fingerprint = D211 6914 1CEC D440 F2EB  8DDA 9D6D 8F6B C857 C906\n"
"uid                  Debian Security Archive Automatic Signing Key (8/jessie) &lt;ftpmaster@debian.org&gt;\n"
"\n"
"/etc/apt/trusted.gpg.d/debian-archive-jessie-stable.gpg\n"
"-------------------------------------------------------\n"
"pub   4096R/518E17E1 2013-08-17 [expires: 2021-08-15]\n"
"      Key fingerprint = 75DD C3C4 A499 F1A1 8CB5  F3C8 CBF8 D6FD 518E 17E1\n"
"uid                  Jessie Stable Release Key &lt;debian-release@lists.debian.org&gt;\n"
"\n"
"/etc/apt/trusted.gpg.d/debian-archive-squeeze-automatic.gpg\n"
"-----------------------------------------------------------\n"
"pub   4096R/473041FA 2010-08-27 [expires: 2018-03-05]\n"
"      Key fingerprint = 9FED 2BCB DCD2 9CDF 7626  78CB AED4 B06F 4730 41FA\n"
"uid                  Debian Archive Automatic Signing Key (6.0/squeeze) &lt;ftpmaster@debian.org&gt;\n"
"\n"
"/etc/apt/trusted.gpg.d/debian-archive-squeeze-stable.gpg\n"
"--------------------------------------------------------\n"
"pub   4096R/B98321F9 2010-08-07 [expires: 2017-08-05]\n"
"      Key fingerprint = 0E4E DE2C 7F3E 1FC0 D033  800E 6448 1591 B983 21F9\n"
"uid                  Squeeze Stable Release Key &lt;debian-release@lists.debian.org&gt;\n"
"\n"
"/etc/apt/trusted.gpg.d/debian-archive-wheezy-automatic.gpg\n"
"----------------------------------------------------------\n"
"pub   4096R/46925553 2012-04-27 [expires: 2020-04-25]\n"
"      Key fingerprint = A1BD 8E9D 78F7 FE5C 3E65  D8AF 8B48 AD62 4692 5553\n"
"uid                  Debian Archive Automatic Signing Key (7.0/wheezy) &lt;ftpmaster@debian.org&gt;\n"
"\n"
"/etc/apt/trusted.gpg.d/debian-archive-wheezy-stable.gpg\n"
"-------------------------------------------------------\n"
"pub   4096R/65FFB764 2012-05-08 [expires: 2019-05-07]\n"
"      Key fingerprint = ED6D 6527 1AAC F0FF 15D1  2303 6FB2 A1C2 65FF B764\n"
"uid                  Wheezy Stable Release Key &lt;debian-release@lists.debian.org&gt;"
msgstr ""

msgid "<emphasis>IN PRACTICE</emphasis> Adding trusted keys"
msgstr ""

msgid "<primary>trusted key</primary>"
msgstr ""

msgid "<primary>key</primary><secondary>APT's authentication keys</secondary>"
msgstr ""

msgid "When a third-party package source is added to the <filename>sources.list</filename> file, APT needs to be told to trust the corresponding GPG authentication key (otherwise it will keep complaining that it can't ensure the authenticity of the packages coming from that repository). The first step is of course to get the public key. More often than not, the key will be provided as a small text file, which we will call <filename>key.asc</filename> in the following examples."
msgstr ""

msgid "To add the key to the trusted keyring, the administrator can run <command>apt-key add &lt; key.asc</command>. Another way is to use the <command>synaptic</command> graphical interface: its “Authentication” tab in the <menuchoice><guimenu>Settings</guimenu> <guisubmenu>Repositories</guisubmenu></menuchoice> menu gives the possibility of importing a key from the <filename>key.asc</filename> file."
msgstr ""

msgid "<primary><emphasis role=\"pkg\">gui-apt-key</emphasis></primary>"
msgstr ""

msgid "For people who would want a dedicated application and more details on the trusted keys, it is possible to use <command>gui-apt-key</command> (in the package of the same name), a small graphical user interface which manages the trusted keyring."
msgstr ""

msgid "Once the appropriate keys are in the keyring, APT will check the signatures before any risky operation, so that front-ends will display a warning if asked to install a package whose authenticity can't be ascertained."
msgstr ""

msgid "Upgrading from One Stable Distribution to the Next"
msgstr ""

msgid "One of the best-known features of Debian is its ability to upgrade an installed system from one stable release to the next: <foreignphrase>dist-upgrade</foreignphrase> — a well-known phrase — has largely contributed to the project's reputation. With a few precautions, upgrading a computer can take as little as a few minutes, or a few dozen minutes, depending on the download speed from the package repositories."
msgstr ""

msgid "Recommended Procedure"
msgstr ""

msgid "Since Debian has quite some time to evolve in-between stable releases, you should read the release notes before upgrading."
msgstr ""

msgid "<emphasis>BACK TO BASICS</emphasis> Release notes"
msgstr ""

msgid "The release notes for an operating system (and, more generally, for any software) are a document giving an overview of the software, with some details concerning the particularities of one version. These documents are generally short compared to the complete documentation, and they usually list the features which have been introduced since the previous version. They also give details on upgrading procedures, warnings for users of previous versions, and sometimes errata."
msgstr ""

msgid "Release notes are available online: the release notes for the current stable release have a dedicated URL, while older release notes can be found with their codenames: <ulink type=\"block\" url=\"http://www.debian.org/releases/stable/releasenotes\" /> <ulink type=\"block\" url=\"http://www.debian.org/releases/wheezy/releasenotes\" />"
msgstr ""

msgid "In this section, we will focus on upgrading a <emphasis role=\"distribution\">Wheezy</emphasis> system to <emphasis role=\"distribution\">Jessie</emphasis>. This is a major operation on a system; as such, it is never 100% risk-free, and should not be attempted before all important data has been backed up."
msgstr ""

msgid "Another good habit which makes the upgrade easier (and shorter) is to tidy your installed packages and keep only the ones that are really needed. Helpful tools to do that include <command>aptitude</command>, <command>deborphan</command> and <command>debfoster</command> (see <xref linkend=\"sect.automatic-tracking\" />). For example, you can use the following command, and then use <command>aptitude</command>'s interactive mode to double check and fine-tune the scheduled removals:"
msgstr ""

msgid "# <userinput>deborphan | xargs aptitude --schedule-only remove</userinput>"
msgstr ""

msgid "Now for the upgrading itself. First, you need to change the <filename>/etc/apt/sources.list</filename> file to tell APT to get its packages from <emphasis role=\"distribution\">Jessie</emphasis> instead of <emphasis role=\"distribution\">Wheezy</emphasis>. If the file only contains references to <emphasis role=\"distribution\">Stable</emphasis> rather than explicit codenames, the change isn't even required, since <emphasis role=\"distribution\">Stable</emphasis> always refers to the latest released version of Debian. In both cases, the database of available packages must be refreshed (with the <command>apt update</command> command or the refresh button in <command>synaptic</command>)."
msgstr ""

msgid "Once these new package sources are registered, you should first do a minimal upgrade with <command>apt upgrade</command>. By doing the upgrade in two steps, we ease the job of the package management tools and often ensure that we have the latest versions of those, which might have accumulated bugfixes and improvements required to complete the full distribution upgrade."
msgstr ""

msgid "Once this first upgrade is done, it is time to handle the upgrade itself, either with <command>apt full-upgrade</command>, <command>aptitude</command>, or <command>synaptic</command>. You should carefully check the suggested actions before applying them: you might want to add suggested packages or deselect packages which are only recommended and known not to be useful. In any case, the front-end should come up with a scenario ending in a coherent and up-to-date <emphasis role=\"distribution\">Jessie</emphasis> system. Then, all you need is to do is wait while the required packages are downloaded, answer the Debconf questions and possibly those about locally modified configuration files, and sit back while APT does its magic."
msgstr ""

msgid "Handling Problems after an Upgrade"
msgstr ""

msgid "In spite of the Debian maintainers' best efforts, a major system upgrade isn't always as smooth as you could wish. New software versions may be incompatible with previous ones (for instance, their default behavior or their data format may have changed). Also, some bugs may slip through the cracks despite the testing phase which always precedes a Debian release."
msgstr ""

msgid "To anticipate some of these problems, you can install the <emphasis role=\"pkg\">apt-listchanges</emphasis> package, which displays information about possible problems at the beginning of a package upgrade. This information is compiled by the package maintainers and put in <filename>/usr/share/doc/<replaceable>package</replaceable>/NEWS.Debian</filename> files for the benefit of users. Reading these files (possibly through <emphasis role=\"pkg\">apt-listchanges</emphasis>) should help you avoid bad surprises."
msgstr ""

msgid "You might sometimes find that the new version of a software doesn't work at all. This generally happens if the application isn't particularly popular and hasn't been tested enough; a last-minute update can also introduce regressions which are only found after the stable release. In both cases, the first thing to do is to have a look at the bug tracking system at <literal>https://bugs.debian.org/<replaceable>package</replaceable></literal>, and check whether the problem has already been reported. If it hasn't, you should report it yourself with <command>reportbug</command>. If it is already known, the bug report and the associated messages are usually an excellent source of information related to the bug:"
msgstr ""

msgid "sometimes a patch already exists, and it is available on the bug report; you can then recompile a fixed version of the broken package locally (see <xref linkend=\"sect.rebuilding-package\" />);"
msgstr ""

msgid "in other cases, users may have found a workaround for the problem and shared their insights about it in their replies to the report;"
msgstr ""

msgid "in yet other cases, a fixed package may have already been prepared and made public by the maintainer."
msgstr ""

msgid "Depending on the severity of the bug, a new version of the package may be prepared specifically for a new revision of the stable release. When this happens, the fixed package is made available in the <literal>proposed-updates</literal> section of the Debian mirrors (see <xref linkend=\"sect.proposed-updates\" />). The corresponding entry can then be temporarily added to the <filename>sources.list</filename> file, and updated packages can be installed with <command>apt</command> or <command>aptitude</command>."
msgstr ""

msgid "Sometimes the fixed package isn't available in this section yet because it is pending a validation by the Stable Release Managers. You can verify if that's the case on their web page. Packages listed there aren't available yet, but at least you know that the publication process is ongoing. <ulink type=\"block\" url=\"https://release.debian.org/proposed-updates/stable.html\" />"
msgstr ""

msgid "Keeping a System Up to Date"
msgstr ""

msgid "The Debian distribution is dynamic and changes continually. Most of the changes are in the <emphasis role=\"distribution\">Testing</emphasis> and <emphasis role=\"distribution\">Unstable</emphasis> versions, but even <emphasis role=\"distribution\">Stable</emphasis> is updated from time to time, mostly for security-related fixes. Whatever version of Debian a system runs, it is generally a good idea to keep it up to date, so that you can get the benefit of recent evolutions and bug fixes."
msgstr ""

msgid "While it is of course possible to periodically run a tool to check for available updates and run the upgrades, such a repetitive task is tedious, especially when it needs to be performed on several machines. Fortunately, like many repetitive tasks, it can be partly automated, and a set of tools have already been developed to that effect."
msgstr ""

msgid "The first of these tools is <command>apticron</command>, in the package of the same name. Its main effect is to run a script daily (via <command>cron</command>). The script updates the list of available packages, and, if some installed packages are not in the latest available version, it sends an email with a list of these packages along with the changes that have been made in the new versions. Obviously, this package mostly targets users of Debian <emphasis role=\"distribution\">Stable</emphasis>, since the daily emails would be very long for the faster paced versions of Debian. When updates are available, <command>apticron</command> automatically downloads them. It does not install them — the administrator will still do it — but having the packages already downloaded and available locally (in APT's cache) makes the job faster."
msgstr ""

msgid "Administrators in charge of several computers will no doubt appreciate being informed of pending upgrades, but the upgrades themselves are still as tedious as they used to be, which is where the <filename>/etc/cron.daily/apt</filename> script (in the <emphasis role=\"pkg\">apt</emphasis> package) comes in handy. This script is also run daily (and non-interactively) by <command>cron</command>. To control its behavior, use APT configuration variables (which are therefore stored in a file under <filename>/etc/apt/apt.conf.d/</filename>). The main variables are:"
msgstr ""

msgid "<literal>APT::Periodic::Update-Package-Lists</literal>"
msgstr ""

msgid "This option allows you to specify the frequency (in days) at which the package lists are refreshed. <command>apticron</command> users can do without this variable, since <command>apticron</command> already does this task."
msgstr ""

msgid "<literal>APT::Periodic::Download-Upgradeable-Packages</literal>"
msgstr ""

msgid "Again, this option indicates a frequency (in days), this time for the downloading of the actual packages. Again, <command>apticron</command> users won't need it."
msgstr ""

msgid "<literal>APT::Periodic::AutocleanInterval</literal>"
msgstr ""

msgid "This option covers a feature that <command>apticron</command> doesn't have. It controls how often obsolete packages (those not referenced by any distribution anymore) are removed from the APT cache. This keeps the APT cache at a reasonable size and means that you don't need to worry about that task."
msgstr ""

msgid "<literal>APT::Periodic::Unattended-Upgrade</literal>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">unattended-upgrades</emphasis></primary>"
msgstr ""

msgid "When this option is enabled, the daily script will execute <command>unattended-upgrade</command> (from the <emphasis role=\"pkg\">unattended-upgrades</emphasis> package) which — as its name suggest — can automatize the upgrade process for some packages (by default it only takes care of security updates, but this can be customized in <filename>/etc/apt/apt.conf.d/50unattended-upgrades</filename>). Note that this option can be set with the help of debconf by running <command>dpkg-reconfigure -plow unattended-upgrades</command>."
msgstr ""

msgid "Other options can allow you to control the cache cleaning behavior with more precision. They are not listed here, but they are described in the <filename>/etc/cron.daily/apt</filename> script."
msgstr ""

msgid "<primary><emphasis role=\"pkg\">gnome-packagekit</emphasis></primary>"
msgstr ""

msgid "These tools work very well for servers, but desktop users generally prefer a more interactive system. That is why the “Debian desktop environment” task installs <emphasis role=\"pkg\">gnome-packagekit</emphasis> (at least when you select GNOME as desktop environment). It provides an icon in the notification area of desktop environments when updates are available; clicking on this icon then runs <command>gpk-update-viewer</command>, a simplified interface to perform updates. You can browse through available updates, read the short description of the relevant packages and the corresponding <filename>changelog</filename> entries, and select whether to apply the update or not on a case-by-case basis."
msgstr ""

msgid "Upgrading with <command>gpk-update-viewer</command>"
msgstr ""

msgid "Automatic Upgrades"
msgstr ""

msgid "<primary>upgrade</primary><secondary>automatic system upgrade</secondary>"
msgstr ""

msgid "<primary>automatic upgrade</primary>"
msgstr ""

msgid "Since Falcot Corp has many computers but only limited manpower, its administrators try to make upgrades as automatic as possible. The programs in charge of these processes must therefore run with no human intervention."
msgstr ""

msgid "Configuring <command>dpkg</command>"
msgstr ""

msgid "As we have already mentioned (see sidebar <xref linkend=\"sidebar.questions-conffiles\" />), <command>dpkg</command> can be instructed not to ask for confirmation when replacing a configuration file (with the <literal>--force-confdef --force-confold</literal> options). Interactions can, however, have three other sources: some come from APT itself, some are handled by <command>debconf</command>, and some happen on the command line due to package configuration scripts."
msgstr ""

msgid "Configuring APT"
msgstr ""

msgid "The case of APT is simple: the <literal>-y</literal> option (or <literal>--assume-yes</literal>) tells APT to consider the answer to all its questions to be “yes”."
msgstr ""

msgid "Configuring <command>debconf</command>"
msgstr ""

msgid "The case of <command>debconf</command> deserves more details. This program was, from its inception, designed to control the relevance and volume of questions displayed to the user, as well as the way they are shown. That is why its configuration requests a minimal priority for questions; only questions above the minimal priority are displayed. <command>debconf</command> assumes the default answer (defined by the package maintainer) for questions which it decided to skip."
msgstr ""

msgid "The other relevant configuration element is the interface used by the front-end. If you choose <literal>noninteractive</literal> out of the choices, all user interaction is disabled. If a package tries to display an informative note, it will be sent to the administrator by email."
msgstr ""

msgid "To reconfigure <command>debconf</command>, use the <command>dpkg-reconfigure</command> tool from the <emphasis role=\"pkg\">debconf</emphasis> package; the relevant command is <command>dpkg-reconfigure debconf</command>. Note that the configured values can be temporarily overridden with environment variables when needed (for instance, <varname>DEBIAN_FRONTEND</varname> controls the interface, as documented in the <citerefentry><refentrytitle>debconf</refentrytitle><manvolnum>7</manvolnum></citerefentry> manual page)."
msgstr ""

msgid "Handling Command Line Interactions"
msgstr ""

msgid "The last source of interactions, and the hardest to get rid of, is the configuration scripts run by <command>dpkg</command>. There is unfortunately no standard solution, and no answer is overwhelmingly better than another."
msgstr ""

msgid "The common approach is to suppress the standard input by redirecting the empty content of <filename>/dev/null</filename> into it with <command><replaceable>command</replaceable> &lt;/dev/null</command>, or to feed it with an endless stream of newlines. None of these methods is 100 % reliable, but they generally lead to the default answers being used, since most scripts consider a lack of reply as an acceptance of the default value."
msgstr ""

msgid "The Miracle Combination"
msgstr ""

msgid "By combining the previous elements, it is possible to design a small but rather reliable script which can handle automatic upgrades."
msgstr ""

msgid "Non-interactive upgrade script"
msgstr ""

msgid ""
"export DEBIAN_FRONTEND=noninteractive\n"
"yes '' | apt-get -y -o DPkg::options::=\"--force-confdef\" -o DPkg::options::=\"--force-confold\" dist-upgrade"
msgstr ""

msgid "<emphasis>IN PRACTICE</emphasis> The Falcot Corp case"
msgstr ""

msgid "Falcot computers are a heterogeneous system, with machines having various functions. Administrators will therefore pick the most relevant solution for each computer."
msgstr ""

msgid "In practice, the servers running <emphasis role=\"distribution\">Jessie</emphasis> are configured with the “miracle combination” above, and are kept up to date automatically. Only the most critical servers (the firewalls, for instances) are set up with <command>apticron</command>, so that upgrades always happen under the supervision of an administrator."
msgstr ""

msgid "The office workstations in the administrative services also run <emphasis role=\"distribution\">Jessie</emphasis>, but they are equipped with <emphasis role=\"pkg\">gnome-packagekit</emphasis>, so that users trigger the upgrades themselves. The rationale for this decision is that if upgrades happen without an explicit action, the behavior of the computer might change unexpectedly, which could cause confusion for the main users."
msgstr ""

msgid "In the lab, the few computers using <emphasis role=\"distribution\">Testing</emphasis> — to take advantage of the latest software versions — are not upgraded automatically either. Administrators only configure APT to prepare the upgrades but not enact them; when they decide to upgrade (manually), the tedious parts of refreshing package lists and downloading packages will be avoided, and administrators can focus on the really useful part."
msgstr ""

msgid "Searching for Packages"
msgstr ""

msgid "With the large and ever-growing amount of software in Debian, there emerges a paradox: Debian usually has a tool for most tasks, but that tool can be very difficult to find amongst the myriad other packages. The lack of appropriate ways to search for (and to find) the right tool has long been a problem. Fortunately, this problem has almost entirely been solved."
msgstr ""

msgid "The most trivial search possible is looking up an exact package name. If <command>apt show <replaceable>package</replaceable></command> returns a result, then the package exists. Unfortunately, this requires knowing or even guessing the package name, which isn't always possible."
msgstr ""

msgid "<emphasis>TIP</emphasis> Package naming conventions"
msgstr ""

msgid "Some categories of packages are named according to a conventional naming scheme; knowing the scheme can sometimes allow you to guess exact package names. For instance, for Perl modules, the convention says that a module called <literal>XML::Handler::Composer</literal> upstream should be packaged as <emphasis role=\"pkg\">libxml-handler-composer-perl</emphasis>. The library enabling the use of the <command>gconf</command> system from Python is packaged as <emphasis role=\"pkg\">python-gconf</emphasis>. It is unfortunately not possible to define a fully general naming scheme for all packages, even though package maintainers usually try to follow the choice of the upstream developers."
msgstr ""

msgid "A slightly more successful searching pattern is a plain-text search in package names, but it remains very limited. You can generally find results by searching package descriptions: since each package has a more or less detailed description in addition to its package name, a keyword search in these descriptions will often be useful. <command>apt-cache</command> and <command>axi-cache</command> are the tools of choice for this kind of search; for instance, <command>apt-cache search video</command> will return a list of all packages whose name or description contains the keyword “video”."
msgstr ""

msgid "For more complex searches, a more powerful tool such as <command>aptitude</command> is required. <command>aptitude</command> allows you to search according to a logical expression based on the package's meta-data fields. For instance, the following command searches for packages whose name contains <literal>kino</literal>, whose description contains <literal>video</literal> and whose maintainer's name contains <literal>paul</literal>:"
msgstr ""

msgid ""
"$ <userinput>aptitude search kino~dvideo~mpaul</userinput>\n"
"p   kino  - Non-linear editor for Digital Video data\n"
"$ <userinput>aptitude show kino</userinput>\n"
"Package: kino\n"
"State: not installed\n"
"Version: 1.3.4-2.1+b1\n"
"Priority: extra\n"
"Section: video\n"
"Maintainer: Paul Brossier &lt;piem@debian.org&gt;\n"
"Architecture: amd64\n"
"Uncompressed Size: 8,472 k\n"
"Depends: libasound2 (&gt;= 1.0.16), libatk1.0-0 (&gt;= 1.12.4), libavc1394-0 (&gt;=\n"
"         0.5.3), libavcodec56 (&gt;= 6:11~beta1) | libavcodec-extra-56 (&gt;=\n"
"         6:11~beta1), libavformat56 (&gt;= 6:11~beta1), libavutil54 (&gt;=\n"
"         6:11~beta1), libc6 (&gt;= 2.14), libcairo2 (&gt;= 1.2.4), libdv4,\n"
"         libfontconfig1 (&gt;= 2.11), libfreetype6 (&gt;= 2.2.1), libgcc1 (&gt;=\n"
"         1:4.1.1), libgdk-pixbuf2.0-0 (&gt;= 2.22.0), libglade2-0 (&gt;= 1:2.6.4-2~),\n"
"         libglib2.0-0 (&gt;= 2.12.0), libgtk2.0-0 (&gt;= 2.24.0), libice6 (&gt;=\n"
"         1:1.0.0), libiec61883-0 (&gt;= 1.2.0), libpango-1.0-0 (&gt;= 1.14.0),\n"
"         libpangocairo-1.0-0 (&gt;= 1.14.0), libpangoft2-1.0-0 (&gt;= 1.14.0),\n"
"         libquicktime2 (&gt;= 2:1.2.2), libraw1394-11, libsamplerate0 (&gt;= 0.1.7),\n"
"         libsm6, libstdc++6 (&gt;= 4.9), libswscale3 (&gt;= 6:11~beta1), libx11-6,\n"
"         libxext6, libxml2 (&gt;= 2.7.4), libxv1, zlib1g (&gt;= 1:1.1.4)\n"
"Recommends: ffmpeg, curl\n"
"Suggests: udev | hotplug, vorbis-tools, sox, mjpegtools, lame, ffmpeg2theora\n"
"Conflicts: kino-dvtitler, kino-timfx, kinoplus\n"
"Replaces: kino-dvtitler, kino-timfx, kinoplus\n"
"Provides: kino-dvtitler, kino-timfx, kinoplus\n"
"Description: Non-linear editor for Digital Video data\n"
" Kino allows you to record, create, edit, and play movies recorded with DV\n"
" camcorders. This program uses many keyboard commands for fast navigating and\n"
" editing inside the movie. \n"
" \n"
" The kino-timfx, kino-dvtitler and kinoplus sets of plugins, formerly\n"
" distributed as separate packages, are now provided with Kino.\n"
"Homepage: http://www.kinodv.org/\n"
"\n"
"Tags: field::arts, hardware::camera, implemented-in::c, implemented-in::c++,\n"
"      interface::x11, role::program, scope::application, suite::gnome,\n"
"      uitoolkit::gtk, use::editing, use::learning, works-with::video,\n"
"      x11::application"
msgstr ""

msgid "The search only returns one package, <emphasis role=\"pkg\">kino</emphasis>, which satisfies all three criteria."
msgstr ""

msgid "Even these multi-criteria searches are rather unwieldy, which explains why they are not used as much as they could. A new tagging system has therefore been developed, and it provides a new approach to searching. Packages are given tags that provide a thematical classification along several strands, known as a “facet-based classification”. In the case of <emphasis role=\"pkg\">kino</emphasis> above, the package's tags indicate that Kino is a Gnome-based software that works on video data and whose main purpose is editing."
msgstr ""

msgid "Browsing this classification can help you to search for a package which corresponds to known needs; even if it returns a (moderate) number of hits, the rest of the search can be done manually. To do that, you can use the <literal>~G</literal> search pattern in <command>aptitude</command>, but it is probably easier to simply navigate the site where tags are managed: <ulink type=\"block\" url=\"http://debtags.alioth.debian.org/cloud/\" />"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">debtags</emphasis></primary>"
msgstr ""

msgid "<primary>tag</primary>"
msgstr ""

msgid "Selecting the <literal>works-with::video</literal> and <literal>use::editing</literal> tags yields a handful of packages, including the <emphasis role=\"pkg\">kino</emphasis> and <emphasis role=\"pkg\">pitivi</emphasis> video editors. This system of classification is bound to be used more and more as time goes on, and package managers will gradually provide efficient search interfaces based on it."
msgstr ""

msgid "To sum up, the best tool for the job depends on the complexity of the search that you wish to do:"
msgstr ""

msgid "<command>apt-cache</command> only allows searching in package names and descriptions, which is very convenient when looking for a particular package that matches a few target keywords;"
msgstr ""

msgid "when the search criteria also include relationships between packages or other meta-data such as the name of the maintainer, <command>synaptic</command> will be more useful;"
msgstr ""

msgid "when a tag-based search is needed, a good tool is <command>packagesearch</command>, a graphical interface dedicated to searching available packages along several criteria (including the names of the files that they contain). For usage on the command-line, <command>axi-cache</command> will fit the bill."
msgstr ""

msgid "<primary><emphasis role=\"pkg\">packagesearch</emphasis></primary>"
msgstr ""

msgid "finally, when the searches involve complex expressions with logic operations, the tool of choice will be <command>aptitude</command>'s search pattern syntax, which is quite powerful despite being somewhat obscure; it works in both the command-line and the interactive modes."
msgstr ""
